__label__integration __label__objective __label__quality  apiref refactor malina availabilityzones api patch make availabilityzones api readable maintainable changeid ibbecfdcefdfbdaec 
__label__objective __label__testing  test fail depend version glance nova call test remove reconsider changeid icaeacabddfadafddbf 
__label__refactoring  refactored mongdb couchbase managers use common change owner function define trove guestagent common operate system py instead roll own changeid iacfbacfbebfdbedebe closesbug 
__label__objective __label__quality  methods reach complexity limit split them update message humanfriendly complexity limit return hack changeid iaffcfdfbbfead story 
__label__objective __label__quality __label__testing  roothelperprocess functional test common lib reuse case outside functional test sanity test roothelperprocess asyncprocess similar function merge function roothelperprocess asyncprocess add optional param wait cmd start default false asyncprocess wait command child process start execute return main process and wait result asynchronous changeid iadadaedefbcbfbdf 
__label__integration __label__objective  wed like advantage irc log manage openstackinfra softwarefactory project package openstackinfra tool changeid ibdebffadfebccd signedoffby paul belanger pabelanger redhat com 
__label__refactoring __label__testing  utilities group new file mixins py purpose code spread minimazing file neede delete utils utils py wsgi utils py unit functional test update changeid iaeafcabadfbcea 
__label__objective __label__testing  refactory test case livemigrate error case exceptions raise livemigrate function conductor patch add case exceptions handle refactory util function mock changeid ibefccbdcdcacd relatedbug 
__label__quality  refactoring radon cc kolla ansible cmd genpwd py kolla ansible cmd genpwd py genpwd generate rsa main refactoring radon cc kolla ansible cmd genpwd py kolla ansible cmd genpwd py get schema for key rsa skip genpwd regular password generate rsa generate hmac generate password not empty genpwd file main calculate radon changeid ieacebdaecaaaacef signedoffby maciej kucia maciej kucia net 
__label__objective __label__testing  add cors unit test followup patch add good unit test case kinds allowe origin like empty however result handle swift proxy depend strict cors mode option configuration patch refactors unit test split strict cors mode on off add miss unit test case changeid ifcdbcfdfecfe 
__label__objective __label__quality  preparation liberty remove network add new type network interface configuration manual patch refactors osbash network code fewer hardcoded settings remove hardcoded list network osbash sh eliminate code duplication clientside network configuration split remain code separate libraries function ubuntu sh function fedora sh simplify code remove magic deduce network name kvm variable name like mgmt net universal function read network network interface configuration array get host network config get node netif config number network longer hardcoded template windows hostnet creation rename variables function file hopefully easier understand changeid ibededefabfbbcdb 
__label__objective __label__quality  refactor code function utilize convert map to xml changeid icbccdffcfefba 
__label__objective __label__quality  logic create char devices guest extract single piece single responsibilities refactoring good use virtlogd feature follow change blueprint libvirtvirtlogd changeid iffaadbfadae 
__label__objective __label__testing  patch make test case atomic introduce ml test case changeid idcbedfcfbbaaeadfbdc partialbug 
__label__objective __label__quality __label__testing  refactoring functional test standard usages best pratices available oslo cache documentation main goal change help test oslo cache way its real life reduce complexity test new backends correspond configuration change allow test new backend by pass right environment variables relate backend test add correspond zuul job dedicate test backend add right server backend bindep changeid iafddafaefbe 
__label__objective  refactor dont require token formatters understand token data call module understand token data compose theres reason token formatters work complex data patch ensure token formatters primitive string of datetimes audit ids trust ids theyre free encode wish changeid iacefdaceafcfbac 
__label__objective __label__testing  refactored test test neutron driver pass random pythonhashseed change argument comparrison mox stub concrete list mox sameelementsas changeid ideacdcceebeda 
__label__objective  refactor shutdown function patch refactors function daemon factory shutdown process shutdown all process utility function manage storlet daemon changeid idfebeffeadcfeadbce 
__label__refactoring  advantage pyyaml python changeid idcdaddbdbb 
__label__objective __label__testing  changeid idfdaceafcbbfeacadebf 
__label__objective __label__quality __label__testing  patchset refactors action handle internally shipyard create action class refactoring action helper module accomplish things increase testability unit test code coverage eliminate repeat code different action apis better encapsulate action be dicts before future update action logic functionality easier main motivation work actual shipyard functionality affect ps changeid icfedccecafcccedbdeb 
__label__objective __label__quality __label__testing  changeid ibdfddbafbedbabbceafebf 
__label__objective __label__testing  vmware unit test refactoring case single test test multiple methods patch refactors unit test follow methods vmdk module fix issue create virtual disk from preallocated image create virtual disk from sparse image fetch stream optimize image followup patch fix remain unit test changeid ibfbecaafeadccec 
__label__objective __label__refactoring  pull larger pending review clear didnt need add get data dir index type routines patch make generic function policy module construct string give base policy index use directly partial as get data dir example changeid iabedfbdfbabefadcc implement blueprint storagepolicies 
__label__objective __label__testing  commit move test validate scoped token with api test testauth module tokenapitests module rename test accurately reflect do lastly remove utility method get token longer use testauth changeid iabacceddffdbbdd 
__label__integration __label__objective  previous version depend agentdbmixin load plugin introduce init mixin problematic mixins expect class add methods class implement constructor plugins elements mro call super init trigger init method change require plugins rpc callback mechanism provide agentdbmixin refresh cache know resource consumers agents versions demand way clear rpc callback api currently design agents only despite extensibility areas changeid iebdbeafcdcdedaefffbff relatedbug cherry pick commit dddaccafadaccdbb 
__label__quality  patch make clone image volume readable plus negative case it note that change doesnt functional change original method trivial fix changeid iebefdaaeccceacc 
__label__objective __label__quality __label__testing  patch rework plugin check share different plugin type major revisions include add new exception type invalidplugin plugin relate exceptions remove profilevalidationfailure exception type useful confuse replace invalidplugin remove invalidpolicytype exception type useful replace invalidplugin combine profile check policy check share function revise test case need changeid iaebefacbaaaedccb 
__label__integration  changeid ifbeedcaec 
__label__quality  change reuse get volume type encryption function implementation be encrypt function changeid iecbabaafcfb 
__label__objective __label__testing  add default map network roles metadata add get network roles method object cluster add testclusterobject test get network roles unit test add default map network roles metadata openstack yaml fixture refactor neutronnetworkdeploymentserializer generate network scheme order fetch data get network roles changeid ieecadcddbb 
__label__objective __label__testing  test swap volume volume api usage method test compute api py test case normal errors devide follow test methods test swap volume volume api usage test swap volume with invalid server state test swap volume with old volume not attach test swap volume with another server volume test swap volume with new volume attach test swap volume with smaller new volume test swap volume with swap volume error changeid iacdeadeedbdc 
__label__quality __label__refactoring  basedisk and get base disk name filename extension vdi remove allow backends different file extensions virtualboxspecific function get base disk path move functionshost sh virtualboxfunctions sh changeid icbddadffddedaccd 
__label__objective __label__testing  changeid ibcddacdaabafd 
__label__objective __label__quality  support nest stack update story add nest stack support valet miss heat resource orchestration ids nest resources generate subset heat stack lifecycle scheduler hint resource advance store opaque metadata valet leverage metadata nova schedule time additional accommodations anticipation complexities bring add support stack update add minimally viable heat stackupdate support valet significantly restrict number update use case set acceptance criteria skip holistic placement stackupdate time favor valet exist replan mechanism place replace resources time albeit consideration resources stack hierarchy changeid ibcbeacddfefecef story 
__label__integration  add new api lock changeid iedcfffbfc 
__label__objective __label__quality __label__testing  change alter dynamic inventory py file main function main change main accept arguments argparse parse arguments plain dictionary test return output print instead print change test inventory python import subprocess call exist test clear allow pdb create future patch subprocess method pdb dynamic inventory py cause test suite hang subprocess wait input exist functionality not change arguments output simply move code easier test changeid icdadedbe 
__label__integration __label__objective  refactoring cleanup compute api refactor host check remove unused conf import changeid ifabdddbffcbabddfbaee 
__label__objective __label__quality  refactor fetch map args fetch unsatisfied args share function lookup provider or possible provider produce provide need value instead duplicate code share methods refactor use code duplicate and errors issue that changeid ifcafadeddbadcfb 
__label__quality  refactor pop code pass mac ip device owner info readably changeid ifcbeeebbdfbbadbce closesbug 
__label__quality __label__testing  run integratin test need set environment variable integration test past positive behaviour enclose big if branch ive move negative behaviour begin len rest method ordinary function body changeid idcdbcfabcbbbfdbd 
__label__integration __label__objective  change remove follow boilerplate filter setup output json response capture new craton api base filter context decorator provide standard exception http status code map new craton api base http cod decorator additional opportunities boilerplate removal especially scenarios multiple ways look specific cell region boilerplate address fix addition change return delete api minor pep cleanups changeid idaecfbebdccddcfe partialbug closesbug 
__label__integration __label__objective __label__quality __label__testing  provide alternate approach refactoring need pluggable ipam propose approach require change plugins base class approach patch require change plugin subclasses order utilize pluggable ipam unchanged plugins continue use builtin ipam advantage patch ipam driver call prior start management layer transaction mean open transaction external api call wip intend demonstrate alternate approach note create port method refactored validation such test fix ips for port defer driver layer error handle havent look handle ipv auto address port router port borrow ipam init py change lightly test allocations fix ips neutron cli work singlesubnet case allocations network id specify subnet call refactored manual setup database entries driver know do ipallocations store foreign key relationships define port object ips new driver actual allocations prior start transaction ml create port call obviously final routines appear db plugin ml plugin plugins changeid idafbebafacdbacefeec 
__label__objective __label__quality  small refactor root device loop match logic match root device hint pass ironic devices present disk logic size attribute different outside main loop patch refactors use loop match size attribute improve little readability changeid ibbadbeccfdaed 
__label__testing  changeid iddcbfbbdaccebeea closesbug 
__label__integration __label__objective  wsgi apps apis bump gnocchi package version pythonopenssl bug changeid icacfeceeedbf 
__label__integration __label__objective  replace mgrrestfulplugin service monitor base state machine explicit transition function go follow step wait ceph cluster available configure start cephmgr configure enable restful plugin send periodic request rest api procedure recover errors restart cephmgr update certificate run configuration step wait ceph cluster mgrrestfulplugin components init script parse command line parameters start service monitor run request status control socket stop service monitor service monitor create process run cephmgr confguration step report status base current rest api availability init recovery procedure stop cephmgr helper process monitor helper successively run command configure start cephmgr restful plugin send periodic request ceph rest api update service monitor current failure status no response rest api cephmgr restart changeid idceeeecae closesbug 
__label__refactoring __label__testing  simplify checkboxregions move common functionality mixin changeid iccffaebafccababdc 
__label__objective __label__quality __label__testing  patch refactors allocation fixture placement api test substitute common function test base py exist object management function changeid idedcfeedbacddafcafe 
__label__objective __label__quality __label__testing  use list resources method test base class changeid icfdaebaefdeebefc 
__label__objective __label__quality __label__testing  test case test quota share name thing bite dig look like test case thing refactored common bits fix test case duplication changeid ieeaddccbaaad partialbug 
__label__quality  centralize common function be image visible remove unused copy paste version be image mutable changeid ieeeffeebfdaefcff 
__label__objective __label__quality __label__testing  decouple gbp resource map neutron plugins use neutron restful apis instead neutron client relate call neutron api mixin easier remove future add mock neutronv api provide methods patch neutron restful api call wsgi call modify exist ut resource map driver patch restful apis wsgi call ensure test scenarios examine pass modify exist ut apic map driver patch restful apis wsgi call ensure test scenarios examine pass changeid iecdbefcdbffdecb 
__label__objective __label__quality __label__testing  duplicate code test case its difficult figure case test dry test clear changeid iedfcfaddbdfdcace 
__label__objective __label__testing  wip change instance action content real world action setup create instance stop it action create stop stop action compute stop instance event test case base action like changeid iacaaeaaabffceffbad 
__label__objective __label__quality  override private function core python modules fix bug changeid idfdccdafffaacafe 
__label__quality __label__refactoring  logic pagination limit repeat time function patch create function call locations replace repetitive code changeid iecedaeeeaaefdcce closesbug 
__label__objective __label__quality  sql filter code clear hint parameter pass function dont use it stop pass parameter parameter docstrings specify type normally clear cumulative filter dict parameter mutate dont return it changeid ibebdbdabebbcad 
__label__refactoring  changeid icefbaaacedcebbc 
__label__integration __label__objective __label__quality __label__testing  common oslo db code contain base test class migration test use sahara changeid ibfcbefdcf 
__label__refactoring  leverage recently add be int in range function simpify valid range check changeid ibdadccddb 
__label__testing  changeid ifdeccdebedf 
__label__objective __label__quality __label__testing  remove need import random unit object test base py test tool py function call there changeid icfdffbebcfefadffe 
__label__objective __label__quality  present interfaces service data manipulate admin interface novamanage extensions contrib service py servicegroup api layer have different interfaces manipulate source truth lead severe data inconsistency useful store nova service proposal follow common path interact service data interfaces mention above common path servicegroup layer whos primary purpose manage check service liveliness help overcome tight couple nova service database consistent view service data service liveliness etc changeid icaecfedbbdfaacab previouslyapproved liberty implement blueprint servicegroupapicontrolplane 
__label__objective __label__quality  refactor spec file use newer rspec let share context share example syntax remove redundancy improve readability changeid icfbedbaedffbdeacf 
__label__objective __label__quality __label__testing  number zmq test case share setup method refactor introduce base test case class share code appropriate zmq test case changeid iafcefcdffdcdab 
__label__objective __label__quality __label__testing  refactor keystoneall lot code keystoneall function keystoneall cant call test change move code keystoneall new keystone eventlet server module changeid iceebccfbdbfdaabbf 
__label__objective __label__quality __label__testing  dont care way migration resize unit test test tracker py file isnt clear assert unit test layer nest helper function patch start series refactors test readable unit test resize claim host changeid ideadacdbaedaedc 
__label__objective __label__quality  refactory get xenapi facts commit contain follow change remove cmd need expose separate command make util invoke xenapi bootstrap rename general function get hostname get remote hostname common function change keywords facts items clear changeid iebcfafafcaadedafb 
__label__integration __label__refactoring __label__testing  wip changeid ibbdeabebcfbeefcffc 
__label__objective __label__quality __label__testing  make bot base argparse provide tox job make run bot test mode little sane provide new nocomment item run bot worry report gerrit find changeid ifdaedddfddcfade 
__label__objective __label__quality __label__testing  optimize work stack resources add new method get stack resources allow return list desire stack resources not servers criteria commit get stack instance method remove test use get stack resources add check statuses resources code style change implement heatostftestrefactoring changeid ifccfffcfebdedbadc 
__label__testing  changeid ifdadbbdabbbcfbec 
__label__testing  changeid iabecdccddeedfec 
__label__objective __label__testing  test methods require fixtures test class test class require fixtures requiredfixtureproperty fix minor problems like get object name changeid icedebddbdecfe 
__label__objective __label__quality  code readable longer need manually check http method type changeid iaacdcafaeccacee 
__label__objective __label__testing  commit aim test execute dynamic creds credential provider initial refactoring test finish refactoring thats need note refactor remove usage non domain enable user run test os primarys user test target preprov remove alt email os primarys user email attribute warn test completeness realize test intend check exclusion certain users user list lose removal non domain enable user changeid iddeeefeaebcaffaea 
__label__integration __label__objective  theres replicatedobjectcontroller class similar change feature ec branch base class contain public api handle replicatedobjectcontroller handle data transfer object server changeid iddedfbecfdcfefd signedoffby thiago da silva thiago redhat com 
__label__objective __label__quality __label__testing  package module large complex module contain different functional feature long term support maintenance significantly impact package module refactored follow common utility function import modules git git relate function requirements requirements process function package cmds align setuptools distribute define build doc egg info install install script sdist test dependencies test case update point new modules version separate refactoring version handle different patch point package module deprecate and or remove changeid iecdbecdbedaef 
__label__quality  previously dogpile cache hide private function dogpile intend methods call changeid ifdffcdbdbeaabf 
__label__objective __label__quality __label__testing  stacktraces catch exceptions longer print python warn exception message deprecate load yaml file cache instead reread test greatly increase performance effect classloader new test object model helper object test method arguments path core library class relative test prevent group test subfolders preserve original stacktrace python exceptions throw engine ability delete clear trace produce call trace muranopl code code refactoring changeid ifabdaceeddaeaadd 
__label__quality __label__testing  repeat part test separate function changeid icdbacbaabeee 
__label__quality  refactor only blueprint bugfix refactored service definition py python code file act configuration file server resources yaml allow modify configuration instead code allow add configuration properties level service pod container necessary future add cache pathfinder find dir hit disk lot less add object service pod container service resources py pave way future add action these example today functional bootstrap service mariadb future service mariadb bootstrap verify kill add methods query status directly kubernetes api code reorg allow structure nicely future additions changeid iecbddccacebfcebc 
__label__objective __label__quality __label__testing  test sensitive time issue openstack environment and test failures enter unhappy path throw test relate code bug test remove reconsider refactored resilient environmental stressors gracefully fail event feature failure changeid idfeaad 
__label__objective __label__testing  unit test agent scheduler dhcp agent scheduler seperated because different extensions logically separate currently nvp doesnt support them future plugin support at development process happen closesbug changeid iccbbcebdecef 
__label__objective  configure remain generate configs install get setup develop addition git clone let use remove configure glanceclient function changeid ieeddcbfafaff 
__label__refactoring  changeid ibdfbacedcbeafaabebdeba 
__label__integration __label__objective  tenant id second element element rate limit middleware update accordingly changeid ibccfbebefccabf closesbug 
__label__objective __label__quality __label__testing  situation weve line code file contain different test case reasonably divide smaller file patch include test case connect init host test case changeid ibcfbaafdfaeabab 
__label__objective __label__quality __label__refactoring  pki token validation pki pkiz tokens individually cms validation revocation check theres reason need function split decode process standardize validation process code flow easier understand previous patch test operate validate offline straight refactoring changeid iccacefafadedbbbb 
__label__objective __label__quality __label__testing  move find caller utility method rest client its public utility use tempest like uniquely identify test case fail timeoutexception useful uniquely fingerprint timeout failures elasticrecheck possible right dont multiline query support elasticrecheck unit test add note setupclass cant test pep check relatedbug changeid icefeaecdcacdbcb 
__label__integration __label__objective __label__quality __label__testing  refactoring check can live migrate destination clear block migrate parameter method turn correct easier understand change shouldnt affect test coverage code changeid ieadefccdbdc 
__label__objective __label__quality __label__testing  test rely psutils python module monasca function class substitute mock object simulate behavior make test independent party modules common py refactored pep compatible changeid ibadfdbafbbeffccb 
__label__refactoring  changeid iacafbfdaeaadcadf implement blueprint removeheat 
__label__integration __label__quality  single universal clientmanager class drop favor individual incontext methods create os clients clientmanager restrictions environment class rename executionsession avoid common confusion io murano environment execution session local module introduce simplify perexecution session perdeployment data similar threadlocals difference thread single session osclients relate code migrate keystone client sessions api except glare mistral doesnt support sessions increase performance solve authentication problems cause token expiration trust enable default home region set introduce instead murano region for service configure region clients default where murano api reside client factories respect set changeid ifcedddeedcdfa 
__label__objective __label__testing  method unused remove test code changeid icabffafecbcdaedc 
__label__objective __label__testing  initiator test applicable cadf notifications test suite changeid icefabfadbdfcac 
__label__objective __label__quality  refactor attach code readable time check vm run hotplug request changeid icdbabbecaacbfcebfacfb 
__label__objective __label__quality __label__testing  launch service workers make sense soon prohibit oslo service pass workers mean service run current process extract dummy check active method base class changeid ibbfbeadaeabc 
__label__objective __label__quality  wip change allow enroll ironic nod ini file ini file allow subsections describe section specify ironic nodename section number subsections subsection specify ironic nodecreate command option key value key value appropriate subsection nodename mac address driver nodename properties ssh virt type ssh address nodename driverinfo local gb nodename subsection option value describe ini file translate follow cmd ironic nodecreate driver properties ssh virt type properties ssh address driverinfo local gb subsection option value change give flexibility enrol nod change devstack code backward compatibility convert csv to ini function reference hierarchy changeid iddfcfcffccafeafddfda dependson ifcaedfdefeebefc 
__label__objective __label__testing  move log function rally common utils py ll rally common log move test tunctions form test unit common test utils py test unit common test log py changeid idadafccbeaecb 
__label__integration __label__objective __label__testing  update rt method heal instance allocations delete allocations and delete entirely instance event instance shelve offload delete add log statements method good idea state things test run note patch partially fix lp remove backandforth allocation trample go operations patch add final piece puzzle confirm revert resize step source destination compute host correct doubledup allocation patch prevent heal function delete allocations instance delete shelvedoffloaded partialbug changeid iabbfdaecdfceefefd 
__label__integration __label__objective  http api call sahara receive process sahara api package function module sahara service api sahara service edp api modules perform process pass conductor help accomodate future api change modules refactored create unify package future implementors partialimplements bp vapiexperimentalimpl changeid iaabeddacafbeac 
__label__integration __label__objective  add update metadata api metadata service refactored rout logic metadata base py add api metadata service update metdata instance changeid iecfdddccafbaf implement blueprint metadataservicecallbacks 
__label__objective __label__quality __label__testing  second patch change follow add iscsidriver dorado array iscsidriver inherit add common class doradocommon fc iscsi drivers common class inherit common common function add unit test dorado drivers changeid iffccedbadeecff 
__label__integration  changeid icfedbfcbcdfcdbaa 
__label__objective __label__quality __label__testing  refactoring post sample rest api set correct source publisher context content pipeline check admin role case test fix bug fix bug changeid idaeeddfbaeadfebfbff 
__label__integration __label__objective  split method delete disallow nonadmin user force delete containers create lot duplicate code burden work patch try refactor it changeid icfbfbcceaedacda 
__label__quality __label__refactoring  allow use reuse logic follow patchset changeid iaaecaefaebbe signedoffby paul belanger pabelanger redhat com 
__label__integration __label__objective __label__testing  db driver get meter statistics method work mongodb cause test case skip patch set fix problem sure statistics function support db driver db mongodb database changeid iaebbabcddbdabced 
__label__objective __label__quality  add miss params security group rule bug similar confirm patch merge request parameters response parameters table security group rule miss security group xsd dict security group fix part write security group rule actually security group rule refactoring common ent order easier maintain changeid ifecdfbdddedffee closesbug 
__label__objective __label__quality  duplicate logics resource controllers api layer patch abstract duplicate code base class changeid iaaffffafce 
__label__integration __label__objective __label__quality __label__testing  aggregate ram filter unit test access database create aggregate record patch move ram filter unit test test host filter py test file update unit test remove database access entirely changeid ieafdfacafebadfaeaf 
__label__integration __label__objective  patch refactoring nod drivers vendor passthru api common place utils py historically code duplicate endpoint support different things drivers vendor passhtru endpoing synchrounous nod asyncronous endpoints support feature code make sense common place change affect both relatedblueprint ipxedynamicconfig changeid ibececebbbcbc 
__label__objective __label__quality  internal run instead have loop case bite code case instead loop smaller helper function handle different type process loop do add note reset method explain metrics key overwrite vs copy replace new copy changeid iacdbeebefeaa 
__label__objective __label__quality __label__testing  patch remove duplicate test testdummydeployengine rename reorder test methods code consistent blueprint unittestsrefactoring changeid icdddadfaeffaeb 
__label__testing  dependson idbbabdfbbddbaccdef changeid ibcaddcacbdbbc 
__label__objective __label__quality  patch set clean items keystone code airshiparmada code base change provide util function load session keystone authtoken section cfg conf pick field use password trivial import order alphabetical trivial keystoneauth exception longer import actual module changeid idacdbabaffccbcb signedoffby tin lam tin irrational io 
__label__objective __label__quality  patch split interface disk metadata generation function each preparation handle hostdev metadata generation subsequent patch add debug log changeid ibcdbfbbcedfff 
__label__objective __label__refactoring  follow function change external ntp check check available mode check auto mode be ntpd active wait phrase in log get package versions from node folowing function move utils py wait phrase in log get package versions from node relate test modify implement blueprint sshmanagerintegration changeid icbdfffebcfcdbce 
__label__objective __label__quality  locallinkconnection object separate external locallinkconnectionmgr class believe replace inline object external class make controller code readable maintainable changeid iedadfbdeadffdddc 
__label__integration __label__objective  code change permissions function couchdb service py refactored addition translation add runtimeerror message miss underscore translation changeid ieadbecedbbdbccdac closesbug 
__label__objective __label__testing  oslo remove uuidutils icehouse cycle remove uuidutils generate uuid uuid test execute example method call generate uuid common utils jekins pass patch testcase remove test method generate uuid changeid ifffbdfeedceee partialbug 
__label__objective __label__quality  change allow from config factory function better support angle commonly use sdk osc osc obtain configuration data occ better serve pass directly sdk sdk additionally access data direct users sdk customer applications likely deal directly occ better serve pass configuration want run with closesbug changeid ifbebbccccdbeccfffea 
__label__integration __label__objective  glance test unit utils fakedb use glance db simple api implement reset functionality redundant code fakedb remove changeid ieeccceeedbd closesbug 
__label__integration __label__objective  unlike nova scheduler consider serve compute volume schedule cinder scheduler serve volume schedule theres need generic interface schedule instead schedule create volume add if miss manager driver class chance simple scheduler driver implementation patch change interface api service scheduler allow information volume pass scheduler advance schedule changeid ibecdfacecdeefca 
__label__integration  xx refactor db consistent partiallyimplements blueprint refactornbapi changeid idedcdaafbdadfba 
__label__objective __label__quality __label__testing  part patch refactored repeat test case loop changeid ibcbfdbffbcbcbff partialbug 
__label__objective __label__quality __label__testing  useful fixtures create ironic inventory change handy able access functional test patch doesnt change logic simply move fixtures file blueprint customresourceclassespike changeid icaffcffabcc 
__label__objective __label__refactoring  altname iteration separate function useful future validators provide better exception message changeid iefededbdbbf 
__label__objective __label__quality __label__testing  change improve coverage save second test run bp fasterbetterstrongerfunctionaltests changeid iddccbfbedcedbb 
__label__objective __label__quality  certificate fetch function code complicate pass string pick certificate type holdover keystoneclient build paths certificate auth token call client methods build path string dont mean anymore changeid iedecdacbffdafdffc 
__label__objective __label__quality  set patch implement containerforwarding feature see refactoring enable reuse http code getorhead base object put container forward middleware need send request proxy instead usual backend servers refactored code enable avoid code duplication guarantee middleware manage connections close down etc proxy do main change server py show proxyserver call container forward middleware present handle newly create controller object base py refactoring getorhead base mods obj py split extra methods connect put node modify return handle connection object case response status return client target proxy newly create put send buffer http add device partition path set container forward need forward request target proxy path info receive additional code fake middleware introduce method forward request real container forward middleware method use new locally define ring node the target proxy replication illustrate middleware call refactored methods controller object ring middleware help review process final patch basic functionality forward request configure target cluster functional test simple test fake middleware test basic operations create delete containers object changeid ibeefaadebbdbdcdb implement blueprint clusterfederation 
__label__integration __label__objective  change heat resource longer create undercloud neutron api port resource redis ovn dbs service virtual ips instead external deploy task step individual service template use tripleo service vip ansible module mange neutron api port resource service interfaces control ip address service network redisvirtualfixedips ovndbsvirtualfixedips servicenetmap remain same note neutron service available tripleo service vip ansible module echo ip provide service virtualfixedips relate blueprint networkdatavports dependson changeid ieaabbafef 
__label__objective __label__quality  methods create console create serial console devices conditional case return append devices its confuse read understand them change move console relate things create console rename create console add docstrings understand object refactoring step make later easier understand functional change introduce condition blueprint libvirtvirtlogd changeid ibdfbcbdaafbfbdbff 
__label__quality  solve pep complex problem function update task complex fix require small refactorings changeid idecbbbdebbced partialbug 
__label__objective __label__quality  bug mention file complex cause problems past likely cause problems future changeid idbaceddeeaef closesbug 
__label__objective __label__testing  add new test init function test apikey rework request mock logic changeid ideabbeadaeaacac signedoffby paul belanger pabelanger redhat com 
__label__objective __label__quality  lock file descriptor skip udev partition probe handle errors throw fcntl flock lead controller degrade state unlock change aim strengthen logic handle error properly retry lock operation improve log reimplementation commit cbbaecdecbfaca original commit inadvertently replace share lock exclusive lock decorator skip udev partition probe cause fd lock issue commit expose utility function acquire share exclusive nonblocking lock file descriptors test standard configuration closesbug signedoffby pedro henrique linhares pedrohenriquelinhares silva windriver com changeid ifcddabdfffdfaa 
__label__quality __label__refactoring  changeid icbdfcadefcfada 
__label__integration  changeid icfedcfafabbbadff 
__label__objective __label__quality __label__testing  meged change fix changeid ibdfddbafbedbabbceafebf 
__label__objective __label__quality __label__testing  previously set use ips function work read configuration inventory data determine mark ips use changeset split work separate function configuration inventory use output set ips information separate way preparation ipmanager instance instead queue queue set object future add test configuration inventory parse testsetusedips test move test ips module consistency changeid idbfeaffbfbcdffeceadb 
__label__objective  move code new tempestconfcmd call outside main function configure parse args etc changeid idaeadffdafefaa 
__label__integration __label__quality __label__testing  patch set follow discussion conclude patrole test neutron plugins pertinent discussion be patrole test neutron extensions plugins tree require rename class pluginrbactest extensionrbactest clearer have support neutron plugins tree scope patrole clarify documentation which follow up add patrole documentation clear test main openstack project like tempest changeid iabffcedeccaeffafe 
__label__objective __label__quality  validationresult return true default patch remove return validationresult code change validationresult validationresult true code readable changeid ifebdeacfcfcbb 
__label__objective  modify poll methods match standard cc style add create active image function changeid ifffdffeaeba 
__label__objective __label__testing  function look thing dont need implementations change work remove lookup vm vdis implementation its name test case adjust handle pass dictionary instead list changeid iaeedeffbfbabc closesbug 
__label__objective __label__quality  new feature add drivers hard maintain code work need refactor code work contain follow define new class name huaweiconf parse xml config file external xml file store san info config parse code different function parse adjust function structure rename function variables docimpact implement blueprint refactorhuaweidriver changeid icafddacbeadcad 
__label__integration  changeid icddcbfccfbfff 
__label__quality  code responsible endpoint creation update reusable function create endpoint update endpoint changeid idddbebfafaefc 
__label__objective __label__quality  change refactors function list single refs list refs set domain id and map separate check condition be domain aware be map need currently handle use logic function provide overhead list single ref changeid iffedaeeadaedde 
__label__objective  use instantiate spec function task spec initializaion matter task belong direct reverse workflow replace code logic prohibition coexistance action workflow task spec jsonschema restriction changeid iacedafceeebfbdedf 
__label__objective __label__quality __label__testing  refactor action method compute controller controller refactoring current desing hard test api action single method refactoring try split construction openstack api request logic test separatedly moreover refactoring introduce new unit test instead functional test right now changeid iadcefcbdbcbf 
__label__objective __label__refactoring  changeid idcadefdebdaeedfb 
__label__objective __label__quality  couple function unused ensure nbd map nbd unmount qcow image mount qcow image ensure sudo use trap exit hinder introduce separate exit phase remove it impossible use current setup overwrite trap exit diskimagecreates main changeid ifadcaaeaadcfdddc signedoffby andreas florath andreas florath net 
__label__integration __label__objective __label__quality __label__testing  move nova image simageservice function convert glance image uuid internal db ids ecutils get image id ecutils glance id to id get image uuid ecutils id to glance id refactors ecutils glance id to id create new simage object associate glance id internal id map exist previously call nova api ec cloud cloudcontroller describe image add new mappings attempt convert glance id internal id succeed resolve bug add convenience methods ecutils bcwaldon ec id to glance id glance id to ec id strict refactor streamline exist welltested functionality change include new test changeid iafedfbccaacdccb 
__label__integration __label__objective __label__testing  use netsnmpconfig package package script service file netsnmpconfig package like netsnmp netsnmpconfig instal storage node deployment test ping test vms pass config serivce script file check pass story task changeid ifdbfdbebfbddfafdddefa signedoffby zhipengl zhipengs liu intel com 
__label__integration __label__testing  patch contain major refactor nsx test nsx rest api call execution stack particular remove global module level patch thats current type global patch intermittent failures testr run test parallel failures prevalent psec code test add patch need psec drop have nb note code module level patch mock magic away current functional logic rest resource model changeid ideccaafbaaedaf 
__label__objective __label__quality __label__testing  test walk version test heatmigrationcheckers check version oslo db oslo db project requirements redundant check test remove changeid iefadaadffccadc 
__label__integration __label__objective  domain config flask resource class config api arguements provide present change remove original duplication present handle this instead replace subclasses api route handle flask changeid iafbeefedbeadbce 
__label__objective __label__quality  purpose rid unclear logic include follow improvements run test place increase code readability function decomposition changeid idffcbfcedbddeb closesbug 
__label__integration  commit bcafadfcabafbfbc wrong api qos policy rule changeid idfcfbbfdbbc 
__label__objective __label__quality  original approach pass command line parameter block device block device functionality get extend longer practical instead pass parameters separately patch collect yaml file pass block device layer changeid idabacacfaf signedoffby andreas florath andreas florath net 
__label__objective __label__quality  vmware spawn refactor execute create vm move inner function execute create vm spawn method private method vmwarevmops currently rational reason function nest spawn method partial blueprint vmwarespawnrefactor changeid icccbcbccdfdaffb 
__label__objective __label__quality __label__testing  move test use single set central test data add nifty manager it implement blueprint unifiedtestdata clean api code api test be test code custom logic wrap object unnecessarily implement blueprint apisimplification add lot docs test its good step blueprint improvedevdocumentation improve api exception handle duplicate object containers fix bug changeid iccfbeadfbdccdad 
__label__objective __label__quality  apply method extraction secret schema validation function order readable changeid ibfadebcaadfcbeddde 
__label__objective __label__testing  change rest exception raise use assert validity function introduce minimum set require name secret refs containers for rsa certificate add test require name changeid idfacbaadbddbaabaa 
__label__objective __label__quality  restructure ha guide include active active original active passive page file rename preface ap distinguish active active page preface aa main haguide txt file edit reflect change bug blueprint improvehighavailabilitysupport changeid ifadcdcafdcbeccc 
__label__objective __label__quality  get tree match all allocation candidates difficult read specific index like patch make readable add new helper class rpcandidatelist explanatory function preparation add crisp debug log come follow patch changeid ifdaebfcdccfeffc 
__label__objective __label__testing  release configurations available easier test versions upgrade mean test upgrade like note grizzly file necessary dont test folsom grizzly changeid ibcceaaeeec 
__label__objective __label__quality  quantum installation lib quantum refactor quantum configuration quantum service account creation keystone data sh lib quantum define generic function install party program minor cleanups relate quantum kill dnsmasq watch interface nsxxxxxx unstack sh set default float pool nova conf default flaoting pool work public network name nova tempest work private network name private changeid iaefcebfbfabaecebb 
__label__objective  change refactors get instance info function log file instead stdout help folks debug gate function log important data stdout trap main playbook run cause load entire run output useful information environment addition log file custom fact gather command run remove infavor simply run ansible setup module provide lot data format far easier consume changeid icddfecbcaacdaaf signedoffby kevin carter kevin carter rackspace com 
__label__objective __label__testing  list opt function combine behavior load options behavior clean filter them patch break bite update relevant test prepare patch add new behavior list opt changeid ieebfcacdbeccbaac signedoffby doug hellmann doug doughellmann com 
__label__integration __label__objective  change incorporate object abstraction db object ironic nova openstack project refactoring new module cue object create module provide generalize access db object patch api update access db object cue object module update affect test changeid iafeeceaaedbdd 
__label__integration  changeid idcebeafeaeacfdab 
__label__integration __label__objective  refactor remove fernet formatters dep trust api token helper remove token formatters dependency trust api token data helper leave token formatters deal primitive data responsibility manage token data object leave entirely core token provider changeid ieeffadcaeadafaabdcde 
__label__quality  refactor set bios settings patch factor code set bios settings utility method code use functionality dependson iefbfafbbbbbbceceae changeid ifccbcbdeebf 
__label__objective __label__quality __label__testing  extract test fixture create new process leave run give time helpers fixtures functional test live keep fixtures place increase visibility fixture reuse test time fixture fix original code omit start process changeid iaebddefdefaeaccceb relatedbug 
__label__objective __label__testing  generate vips function refactored work pair create resources function its better test debug input data vurual ip definition split parameters generate vips function tought support change interfacs work puppets undef value changeid iffadcefadfaefcfffb relatedbug 
__label__integration __label__objective __label__quality  implement foodcritic cookstyle corrections deprecate node foo bar method access node foo bar bracket access add workaround bug deprecate postgresql support implement blueprint modernchef changeid iebedadfacddfad 
__label__quality  changeid ifadccbdaddcaad 
__label__integration __label__quality  collect utils api code move cinder utils py here better code organization changeid iecdefeddcccbaafebd 
__label__objective __label__quality  allow query pool stat pool command need query resources pool stats query function return data name differently refactor base showcommand support it bug changeid ibaffceacbfcaf 
__label__integration __label__objective  patch blueprint useglancevapi nova image glance module remove favor robust nova image api implementation implementation use now function old module reason backwards compatibility change granular followup patch clean function up process make new api stable issue glanceclient issue fix way fix implementation require extra work refactor heres list notable change image api constructor take cfg configopts object itll require info from download method split different methods call download its map glanceclients download call second one instead call download to allow consumers api download data to specific location method always return none regardless input rely mention download method data show detail rename get get all respectevly better map glanceclients api retry logic rely retry module decorate methods nova image api api default api version pass api servers expect versioned not warn log default version use code remain clean up convert function away shouldnt need nova translate whats return glance extract attribute away mainly cause inconsistency glanceclients return object fix implementation flaw clean up drivers assumptions glance shouldnt permit glanceclient responsible build virt drivers care image id understand updateglanceimage exist believe shouldnt just xenapi believe fix there xenapi make way assumption drivers come glance uris upload download code plugins glance implementation upload download custom http call glance api dont understand code exist think clean up asap drivers global image api object shouldnt bad image api api stateless think itd better rely global instance patch implement blueprint remove glance module biggest refactor do however im mark blueprint implement id like minor cleanups consider do partiallyimplements blueprint useglancevapi changeid idfccaffddacdd 
__label__objective  use new generic transformer class fix bug image id extraction image ref changeid iefdfcbddcdedfcbdaa cherry pick commit ecfeaafcdfaceca 
__label__objective __label__quality __label__testing  add documentation sample config file template add log output make diagnose config issue easier rework authorization test config option name remove obselete release name config options remove ssh timeout unused option changeid iadbddbfed 
__label__testing  skipif remove favor irrelevantfiles branch matchers refactors test skipif cover irrelevantfiles need cover type matchers test parse skip if remove wasnt cover cover functional test changeid iacdcedefedbd story task 
__label__integration __label__objective  override role function longer need test obj parameter remove self rbac utils variable story task changeid ieeedbdfdffabcaaced 
__label__refactoring  uts apis directory test functional move test unit directory modify code accordingly future next commit tempest testcases kingbird test changeid idccdffccddeaeebabe 
__label__integration __label__objective __label__quality  code control db relate toolkit create orm sessions engines refactored change purpose simplifiying unify mention logic reuse process withoud beind compromise dependency pecan conf attribute changeid iafdadaeaadfadfa 
__label__objective __label__quality __label__testing  reduce number direct dependencies make test uniform glance remain test direct client reference import code clients directly remove changeid iaceeedeedaffad 
__label__objective __label__quality __label__testing  large set copypasta test hard follow mock return class manage clearly name things expose bug fix bug hairy comment bite note fix it fix come patch hopefully clearer read test refactor decouple changeid iddcdbbafdfedeba 
__label__objective __label__quality  presently timeline directive single gigantic directive contain timeline code give code involve complicate maintenance make excessively difficult improve refactors single timeline directive separate collaborate directives controller overview viewport dstat chart child directive functionally separate others communicate chart components controller separation greatly improve future maintenance lead include bug fix changeid iddaecebcdbea 
__label__objective __label__quality  approach configure float ips stateless idempotent allow handle corner case reuse float ip address different float ip id way easier understand concept wipe float ips clean rebuild time follow optimizations avoid bad performance manipulate iptables call context defer apply on avoid disruption network flow set difference use determine set address longer belong inteface remove blindly fix bug conflict neutron test unit test agent py changeid icfbdbeadbaceacabb cherry pick commit eeacfddda 
__label__objective __label__quality __label__testing  unique key router apply extra route too cookie extra route openflow rule remove router interface cant delete extra route associate it way delete extra route router update deletion doesnt need cookie match flow changeid iebceffdceedb closesbug 
__label__integration __label__objective  github workflow ask username password fa token need be create repo token use exchange save user input fatigue changeid iadcdbadcbcfdffaeea 
__label__objective __label__quality __label__testing  comprehensive split assignments rationalize backend controllers order change easier reviewers divide number smaller patch previous patch have move role management manager drivers fix incorrect doc string grant driver methods update controllers new role manager update unit test new role manager patch refactors assignment manager driver methods logically separate project domain functionality actual assignments preparation project domains backend patch cause functional change future patch will split project domains manager backend update assignment controller new manager update test new manager split assignment controller give project domains controller partially implement bp pluggableassignments changeid idaccbfcdfcbcb 
__label__objective __label__quality  refactors process router method lnatagent class methods coherently group functionallity aim code readable maintainable functional change patch partiallyimplements bp restructurelagent changeid idafcddddabffbfcafbdeefea 
__label__integration __label__objective __label__quality  refactor manila shareaccess api patch make shareaccess api readable maintainable changeid ibdcdfedafbedeafebbacebf 
__label__objective __label__quality  split load session auth config separate function allow override options load config lay grind efficiently load clients allow pass session auth plugin object separately resoving service endpoint fetch request interface try internal public config lack options set default interface service endpoints use weve internal default devstack endpoints service change gradually introduce usage keystoneauth adapters ironic remove get admin token method glancerelated code once simply move there changeid ibfafdffddadeadf partialbug 
__label__objective __label__quality  patch update driver provide mechanism report version driver include fix report driver version get volume stats time version set driver manager start driver log drivers version log file fix bug changeid icefdfadeacebddc 
__label__quality  add loop check ensure virtio serial device ready start qga block unnecessary interfaces function qga setuserpassword leave changeid idacebdedfdfebdc 
__label__objective __label__quality  refactor test update test servers py current api test cleanup copypaste code test update separate class blueprint apicomputeserverstests changeid ibedccdcdaacdc 
__label__objective __label__quality __label__testing  situation weve line code file contain different test case reasonably divide smaller file patch include test case connect image changeid ibaddfdeabeadcbdce 
__label__integration __label__objective  add task log get query private method remove task log get task log get all session parametr save performance task log get method remove session parameter public method task log get all method remove session parameter public method task log begin task remove session parameter public method remove unused return value task log end task remove session parameter public method use db request instead remove unused return value blueprint dbsessioncleanup changeid icdeefdddefaeea 
__label__objective __label__quality __label__testing  changeid iccaffabcbbbeac 
__label__refactoring  changeid iaffeffebaefceabab 
__label__objective __label__testing  sort list dictionaries assertions partialbug changeid ieffeedfaeedfbde 
__label__objective __label__quality __label__testing  rework encapsulate suspend resume stub function add stub image validation require properties revalidated create events associate state transition ref bug current keystoneclient mock visible test error create client validation obscure fact event constructor tolerate validation error error create client treat unexpected validation error customconstraint code move model clients keystone consistently mock expose fact try connect glance suspend event create validation correctly stub partialbug changeid idadcdfaaaadeafb 
__label__objective __label__quality __label__testing  refactor itself issue resolve like appropriate data handle macvlan driver neutron client deal dict data openstacksdk object time couple helper methods os vif util module furthermore helper method create port object test purpose move fake module utilize test os vif utils changeid iefcacecaddacdccfa implement blueprint switchtoopenstacksdk 
__label__objective __label__testing  refactor code handle fetch token cache decode pki keystone allow substitute new method fetch token like keystone database scenarios whilst contextmanager pattern little odd auth token middleware case and possible server case need additionally handle token data validate consider cleaner say exist function changeid idcabdeeaaadbeaeae 
__label__objective  main partition refactor patch merge small relict handle partition diskimagecreate main patch move functionality diskimagecreate blockdevice partition module rewrite original bash code python changeid iabaecaabceadaffdace signedoffby andreas florath andreas florath net 
__label__integration __label__objective  multicommit refactoring vpn agent remove dependency agent currently reference implementation vpn device driver use agent obtain router info need complete action add delete nat rule break dependency plan save router info create router call device driver directly access router go agent and vpnservice step refactoring commit pass router info object device drivers create router call instead router id affect internal api device drivers present separate commit changeid ifeedfaabbcbccbb partiallyimplements blueprint restructurelagent 
__label__refactoring  changeid ibdfdefcddbfcc 
__label__integration __label__objective __label__testing  use rabbitmqserverconfig package package config file rabbitmqserver package remove relate patch use rpm instead srpm it deployment test ping test vms pass config file check pass story task dependson changeid ibbecfeccedd signedoffby zhipengl zhipengs liu intel com 
__label__objective  order handle reauthentication request time let tenancity trigger it change create session helper class wrap get patch push put action use image uploader perform single reautentication action registry previously let reauthentication occur tenancity retry function function perform muiltple request exceed ttl authentication tokens lead failures prevent reauth time request retry entire action changeid ifcfabbabfcbcacc relatedbug cherry pick commit dbafffeadbfdeccedac cherry pick commit eeeeeabccddaaa 
__label__objective __label__quality __label__testing  patch move cluster status functionality cmd level pkg level unit test make code cleaner improve actual test coverage changeid iabbcaddbafceff signedoffby ruslan aliev raliev mirantis com 
__label__objective __label__quality  glance support task import thats awesome add support parameters indicate glance import image halffunctional patch break exist code actually import exist refactor small easier reason review changeid idfdaddeceeef 
__label__objective __label__testing  allow tenant user create base test class allow isolation test move identity admin stuff appropriate directly put multiprocess share base compute test class changeid ieacacdaebdfbcdd 
__label__objective __label__quality __label__testing  refactor test neutron autoscaling easier add new test remove redundant resources monitor pool test test neutron stub funtions reusable changeid icbbbecceadaedfda relatedbug 
__label__integration __label__objective __label__quality __label__testing  follow things use ddt module remove code duplication use apis instead deprecate use correct share server id test show share server detail test avoid concurrency issue detail close changeid ifdfeceecdebbbad closesbug 
__label__objective __label__quality __label__testing  move logic fixture use large class hierarchies changeid ifddcceddfaabedfa 
__label__integration __label__testing  depend give version support dynamic load client module depend give version time zunclient version patch useful future change relate test case remove hardcode version changeid idcddacaeadcbfeba 
__label__objective __label__quality  have pbm class inherit vim design mistake need fix start pbm feature project like nova patch introduce new base class service provide common functionality invoke vsphere apis vim pbm inherit it allow evolve apis add feature specific vim pbm exist clients use vim object vmwareapisession impact change interface vmwareapisession unchanged changeid icfedbcdffdcdacaa 
__label__objective __label__refactoring  code apply filter keystonev authprovider class copypasted extract copy code function fix place changeid ibdfebcac 
__label__objective __label__quality  changeid icadacbeefddfcb 
__label__objective __label__refactoring  blueprint attempt refactor huawei volume driver liberty add base dirver implement basic function cinder driver require subclass inherit base driver accord different storages follow diragram show structure newest huawei volume driver iscsidriver huaweibasedriver fibrechanneldriver huaweiiscsidriver huaweifcdriver changeid iafeacddefcf implement bp refactorhuaweivolumedriver 
__label__objective  staticmethods classmethods function py bug ussing unittest mock classmethod keep set boot device its dracredfishvirtualmediaboot changeid iebbacfaedac 
__label__integration __label__objective  hyperv api change version new feature require new utils class add specific versions refactors utilsfactory module way new utils class add add new parameter retrieve suitable class windows version changeid ifcecfdfbcdfeaacbb partiallyimplements blueprint hypervuefisecureboot 
__label__refactoring  changeid iafbdfaeecfcfcadafe 
__label__objective __label__testing  patch add miss cmd unit test cluster module refactors current ones well slightly improve test coverage changeid icedaedabdfeafaccabdc signedoffby ruslan aliev raliev mirantis com 
__label__objective __label__quality __label__testing  firewall driver fullstack test interfere test test far add single test class hard debug exaclty specific issue happend now test run serially at gate let refactor separate test case scenarios changeid ibebedaefeadefcdbcf 
__label__objective __label__quality  split drivers notificationdriver reportdriver cleanup driver api avoid code duplicate changeid ibdcfbcaecbafd 
__label__objective __label__quality __label__testing  change icacabdeadcabdedfe refactored keystone test case use six move http client http status cod instead integers change refactors method name follow pattern changeid ibacfebbdfafaece 
__label__objective __label__quality __label__testing  change layout test unit functional test place development need happen linux test like uptime need proc uptime change put kind test functional test dir add unit functional test arg tox changeid ieaaaaddacceefbd signedoffby michael rice michael rice rackspace com 
__label__objective __label__quality  use request library instead urllib httplib main profit request library request http humans request document request save download file part usage memory less useful download big data example image request python python use inspect getmembers discovery function section generator profit decrease line code add check existence subnet network section function write config class tempest tempestconf reason function relate verifier tempest fix message exception user doesnt admin role section kwargs section function profit string object section name typesandmembers typesandmembers changeid iecddeffdcdbfbf 
__label__refactoring  refactor executor function lang style changeid ifffeaccafbcbfdbfb relatesto relatesto 
__label__objective __label__quality __label__testing  fix lp bug import class report original exception make exceptions use base exception class remove unused exception class nova remove unused code glance common utils add unit test bool from string import class changeid ifebcebcddffcceeb 
__label__integration __label__quality  module write way consistent puppet openstack modules interface different patch add db pp update log pp usual parameters drop useless parameters keystone auth pp cleanup params pp drop service pp useless update unit test add coordination support init pp alignment issue add doc readme stop include mistral class include mistral policy mistral api nonbackward compatible change module release stable branch new need care stage people module stage update manifest puppet catalog fail changeid iecaaeedcbea 
__label__objective __label__testing  refactore volume rpc api test case commit refactors volume rpc api test case generic rpcapitestcase framework changeid ibedceeaafbedbf 
__label__objective  start refactoring scneario runner remove spaghetti code safer current code issue go wrong and can wont cleanup fully cloud lot spaghetti catch exception prepare cloud spaghetti try extend current functionallity stress exectution non admin users another load cloud pre configuration lot ifs switch kind exectuion use class inheritance imo patch fix issue add context class allow create delete tmp users tenant add context class make cleanups users present admins present change algorithm delete resources trycatch user wasnt delete try continue delete others add todos replace scenariorunner run method use context class changeid iccedbcafdfcacb 
__label__integration __label__objective  poc refactor configdrive new field add new column configdrive add new field node object compatiable add example rpc compatiable only test bump api node configdrive field perfect example ironic live upgrade work short introduction upgrade latest code online node release api release conductor node release conductor apply framework patch configdrive patch node ironicdbsync upgrade set upgrade level lowest version service mitaka node restart api node restart conductor node apply patch node set upgrade level lowest version service mitaka node restart conductor node unset unpgrade level lowest version service node restart api node restart conductor node restart conductor node changeid ibbedecaaeddf 
__label__quality __label__testing  refactor mysqla redis apps reason time mysql redis manager backup restore strategies instantiate mysql redis app object correct mysql app doesnt change guest work change app refactoring test refactoring changeid ibcedcfcadbfcaafd implement blueprint refactordatabaseappguestfunctionality 
__label__objective __label__quality __label__testing  change need fix issue proxy domains download job binaries data endpoint new function add retrieve binaries swift context credentials raw data retrievers swift refactored allow modular approach change add option raw binary dispatch routine allow request context authentication add new swift client method create connection auth token add new binary retriever function use context auth token refactoring internal swift retrievers module modular add test internal swift retrievers add new test suite binary dispatch changeid iececbdeacbccfd closesbug 
__label__integration __label__quality  implement blueprint ecerrorcodes redundant log code unite new init py ec error ex helper function standard ec error responses uniformly log debug log level responses invalid client request nova errors unexpected client server errors log error critical level exception error code useless unknownerror error descriptions supressed unexpected server errors contain sensitive information new unit test provide code consturcting ec error response duplicate init py ec error fault py fault move fault py ec error response init py exception to eccode helper function return exception ec error code exceptions ec code attribute yet add follwing patch require reference blueprint code cleanup serve base future fix current terrible ec error behavior changeid iebdfeafaecffcafef 
__label__integration __label__objective  cache qos policies reduce resource pull rpc call server support delete rule type delete rule move code common drivers base qos driver abstract class partiallyimplements quantumqosapi changeid iadbbaacbbdf 
__label__integration __label__objective  make servers api use networkrequest object construction request network list changeid idcaacbdefbddabaadb 
__label__objective __label__quality  lvm command act handlers env variable settings strip head cmd list pass in make easier maintain patch add remove env variable value cmd list index act handler change check handler validate env settings present strip perform newly add strip env settings helper create lvm size to bytes helper function replace repeat pattern code identify lvm command act handlers changeid ieaadfcaaaaabeeb 
__label__objective __label__quality  wip improve rally generic cleanup mechanism current cleanup mechanism awful its hardcoed repeat failures contain lot mistake place fast in case deletion vms slow like deletion users mix cleanup mechanism resource cleanup mechanism resolve issue patch introcude cleanup engine resolve issue above its resource base add new resouce subclass base resource probably override methods like list delete be delete thats all complexity manage wait unit async deletion finish repeat failure logic greaceful failure handle parallelization plugin support hide deep inside cleanup engine bonus able specify single resource without clenaping service bp benchmarkcontextcleanuprefactor changeid ieebbbbedeedea 
__label__objective __label__quality __label__testing  reimplementation work david hadas at rework mainly head state things be state try in require there felt things right davids work loss explain why hopefully help rereview work im mainly post reviewers davids work better view things different perspective consider ideas alternatives area tread lightly start state things mess end state cleaner perfect now like approach better of course write let state why allinone function know david want disagree allinones harder read easier mistake use elsewhere have separate doesnt prevent make allinone call separate function convenience honestly quick if container container func else account func harder type read magic head happen set cache value and dont blow things up implement standin proxy app wouldnt expect fee cache implement head functionality approach cache stay cache function fail gracefully account autocreation happen controllers account py indicate theyre ask account information order perform pending write account autocreated configure so comment liberally patch set help reviewer understand change why final patch set need clear comment theyre noise fact probably separate review merge history isnt completely lose especially careful alter exist test little possible comment liberally change things truly candidate merge new test new function functionality need add note need fix test paths wow talk lot screwy paths place use paths like test happen pass time rely controller account name container name path info need fix paths point changeid ifddeabadeafdddb 
__label__objective __label__quality  refactor segment periodic worker perform cleanups periodic worker type easier later change and parallelism want deprecate provide tombstone init restrict future enhancements make build immediates schedule list single static prepare function aid understandability and hopefully reduce complexity changeid ieccabefacffd 
__label__refactoring  move calculate type function class method assignmenttype changeid ibaecabbafdfbebfaef 
__label__objective __label__quality  change get oshinfranetworkpolicy gate work refactors use featuregates functionality exist openstackhelm job zuul changeid iaeefaadaadfae 
__label__quality  refactoring radon cc kolla ansible cmd genpwd py kolla ansible cmd genpwd py genpwd generate rsa main refactoring radon cc kolla ansible cmd genpwd py kolla ansible cmd genpwd py genpwd secretgenerator get by key name secretgeneratorregular secretgeneratorrsa secretgeneratorrsa skip secretgenerator secretgeneratorregular generate secretgeneratorhmac secretgeneratoruuid secretgeneratorfernet genpwd file main secretgenerator key secretgenerator generate secretgenerator skip secretgeneratorrsa generate secretgeneratorhmac generate secretgeneratoruuid generate secretgeneratorfernet generate calculate radon changeid ifcfcffaefbbcecf signedoffby maciej kucia maciej kucia net 
__label__refactoring  changeid iceeffadaebbda 
__label__testing  changeid icfdecacebddbaddfeca 
__label__objective __label__testing  issue use nonenglish locale include non usascii char case append unicode argument string fail error patch refactors exist test cover different case english nonenglish locales test currently fail master unicodedecodeerror fix gettext decode closesbug changeid iabacedfcfabfdec 
__label__refactoring  common cod function changeid idbbcaacebadfdec 
__label__objective  initial refactoring generic benchmark cleanup implementation specifically utility function exist novascenarios class expose benchmark test utils function enahanced generic flexible nature subsequent patch provide actual generic cleanup implement partial blueprint benchmarkcloudcleanup changeid ieddebffdeabadf 
__label__objective __label__testing  reduce amout time wait element exist impove xpaths fix screenshot take fail add config file git ignore plan remove constants xpaths separate python file changeid iedbaedafeaecfef 
__label__refactoring  changeid ibebaaaebcefffbbcbedc implement blueprint removeheat 
__label__integration __label__objective __label__quality __label__testing  follow change patch create cluster controller mongo instead create separate nod controller mongo reinstall single mongo node test delete merge mongo partition preservation mysql partition preservation test mongo mysql partition preservation test merge cinder partition preservation nova partition preservation test cinder nova partition preservation test changeid iaeecdfbcccadfbac closesbug cherry pick commit efdeafbdaebfbca 
__label__objective __label__quality  distribute functionality service py modules move composablerouters package keystone routers move token controller service py trust controllers split extensions version controller catalog controllers remove apis common controller push module controllers changeid ibeadfaaafecc 
__label__objective __label__quality  resolve bug refactoring ensure notdb driver test changeid idcfaabfaebfa 
__label__refactoring  nonfunctional change changeid iccdfcbbbceccfebeaf 
__label__objective __label__refactoring  datatable filter relate function mixin class class use filter table namely patch tabbedtableview class changeid iaefccffdb 
__label__objective  change clean setup log function define keystone common config export keystone config also extra parameters unused take care note which probably todo code changeid iaccbdabfdadfadcfdbdcd 
__label__testing  dependson ifaadeebdecfdaebb changeid ibcaabebafcbdebaa 
__label__objective __label__testing  add keystone test functional test core api example revise import functional test changeid iafdcdceccaca 
__label__quality  code cleaner readable changeid ideebecdeaacbeddddcde 
__label__objective __label__quality __label__testing  unit test use mox instead mock also case single test test multiple case methods patch refactors unit test follow methods vmdk module fix issue get volume stats verify volume creation create volume delete volume get extra spec disk type get disk type create snapshot delete snapshot followup patch fix remain unit test partialbug changeid ibcdfebfafedffaee 
__label__integration __label__objective  change extract function get virtual size need like support tar gz file case image virtual size determine look tar gz stream tarinfo tell size relate blueprint xenapisupportedimageimportexport changeid ifbbaddacffbeceaddda 
__label__refactoring  preparation distribute router functionality partiallyimplements blueprint neutronovsdvr changeid idebcceaaebbdeedef 
__label__objective  need method similar fix evacuate change pull method livemigrationtask move scheduler utils unit test functional difference instead raise migrationprecheckerror raise novalidhost live migration end result its handle computetaskmanager changeid ieadceeabcfded relatedbug cherry pick commit fadfadedbabc 
__label__objective __label__quality __label__testing  functional base test class implement osvif project inherit project implement functional test case changeid ibbfbddfecfde closesbug 
__label__objective __label__quality  clearer parameter name doc string use fnmatch fnmatch instead re match fnmatch translate use any code succint changeid idaefcafcbaaeeafe 
__label__integration  addition change update lease expiration cast rpc flood server changeid iafbdceaeacdcdc 
__label__objective __label__quality __label__testing  blueprint bp keystonerefactorbackend bp refactorkeystonemodels combination commit originals here github com ziadsawalha keystone commit model token call service py managers token remove direct backend call service py token backend implement blueprint keystonerefactorbackend refactor tenant call managers tenant call remove implement model service backends add functionality need model role model service sqlalchemy service additional serialization change test implement model service remove logic type service service class implement user manager remove direct backend call api user service py remove user get update backend api idea there duplicate plain get backend update document user apis update user check password user id password implement user manager call service py remove user delete ternant user probably exist concept users tenant complete move api user user manager service py complete remove api user additional backend api documentation remove logic type service complete move model service add basic test module model service pep pylint cleanup changeid ifeeabccafdacaefeff 
__label__testing  changeid iefcdaeddfedeb 
__label__refactoring __label__testing  refactor unittests netapp eseries drivers remove functional test relocate test underneath path rest test live improve coverage fibre channel eseries driver refactoring iscsi test work generically possible changeid icbbcdeaaafb 
__label__objective __label__quality  share bite commonlike code refactor share function differentiate certain provide arguments need changeid ifdffefbdedabbfaca 
__label__objective __label__testing  need initialize parser test case setup remove test default value case test test good value case changeid iaedcebfbaabbdbdceee 
__label__quality __label__testing  refactor charm no new functionality work declarative helpers charm openstack mean boiler plate disappear charm charm openstack include test changeid iebffffadbfedbfbc dependson icfbbedfc dependson icefafcbdecfdeeca 
__label__objective __label__testing  fix bug api able send request engine rpc modify add uts require changeid iddcebaeddbcf closesbug 
__label__objective __label__quality  patch split interface disk metadata generation function each preparation handle hostdev metadata generation subsequent patch add debug log note artom conflict nova virt libvirt driver py trust vfs present queen relatedbug changeid ibcdbfbbcedfff cherry pick commit dddbfdacfcbcbaecea 
__label__objective __label__quality __label__testing  sake code deduplication loc reduction readability improve signal noise ratio change set implement convenience methods allocationcandidatestestcase creation placement artifacts resource providers inventory allocations extract compare result get allocation candidates change test code refactor test add remove substantively change changeid iabacecbcccecaeeaadad 
__label__integration __label__objective __label__quality  remove session parameter db service get method optimize db service destroy be request join service compute node request delete service delete compute node now request without join delete service request delete compute node optimize db service update remove unused join fix bug blueprint dbsessioncleanup changeid ifccfdebfcdaeccbceaa 
__label__objective __label__testing  use neutron test migrate vm back with ceph check ceph partition after reboot add show step docstring test case refactor fuel master backup restore helper methods changeid icebfffbfbcc closesbug closesbug relatedbug 
__label__objective __label__quality __label__testing  currently test backend ldap rely multiple inheritance base test class result test run multiple time needlessly change put ldapidentity class multiple test case subclass order test framework run own changeid ieeaedcb partialbug 
__label__objective __label__quality  refactored exist suite endpoint filter test include rename method name aid readability add additional comment changeid idedaebefbeb 
__label__objective __label__quality  logic create char devices guest lot conditionals make hard understand change invert reduce nest level ifs flow easier understand functional change virtlogd feature follow change easier review blueprint libvirtvirtlogd changeid iabebebfeeaccdace 
__label__objective __label__quality  wip patch add new iscsi initiator utils class leverage iscsidsc dll function advantage be error output iscsicli proccess spawn overhead improve overall performance have finer control iscsi initiator avoid unnecessary operations fix bug relate lun discovery persistent target changeid iecfaeeecaeeadfcb 
__label__integration __label__objective  introduce session diagnostic methods vim object start process eliminate need vmwareapisession object fold tese function vim object author use vsphere api intend wrappers changeid idaffdfabbcacfec blueprint vmwaresoapsessionmanagement 
__label__refactoring  split sum domain memory mb get avail memory kb separate function simplify xen codepath get memory use mb ease integration filebackedmemory changeid ifaabacfbbbcdcdecdd implement blueprint libvirtfilebackedmemory 
__label__objective __label__quality __label__testing  ceilometer test energy test kwapi py similar test case patch refactors unit test code changeid iaedeedbebbddbcaaa 
__label__objective __label__quality  notice redundant lookup conditional straight refactor readability functional change changeid ieabfdeceddae 
__label__objective __label__quality  iptablesfirewalldriver select sg rule for port handle rule expansion non ipset case inside function patch refactors expansion out clear easier cut nonipset code later time partially implement blueprint refactoriptablesfirewalldriver changeid idedaefadebcba 
__label__objective __label__quality  instal binary package tool create user keystone shell result fernet token operations fail fact rsync connect ssh keystone user login patch address issue enable shell access keystone user refactors nova ssh controller use preexist macro changeid icacddadcdfeeafbd relatedbug 
__label__integration __label__objective __label__quality __label__testing  couple place basically code create simulate vdi record bring make fake vdi fake fetch image stub parse xmlrpc value look like workaround fact task result wasnt populate properly ive fix latter remove former move json handle xenapi fake couple implementations host call plugin contain lot duplicate code particular simulate vdi record plugin function call didnt require that bring implementations fake sessionbase override subclasses things specific give test baseclass strict flag unsimulated plugin call add explicit handle agent version couple methods glance migration changeid idcaaeaecdbebdfd 
__label__integration __label__testing  implement exceptionraising behaviors volumes api remove blockstorage provider add volume snapshot statuses model refactored response model versioned volumes api add stub clean auth changeid ifbeddcebeebddcfbf 
__label__objective __label__testing  relocate test infrastructure preparation use encryption test particular move test server setup code test unit proxy test server py new helpers py reuse add unit test coverage extract swift bytes functional test coverage container list add check content metadata reconcile object probe test changeid ibfbfecbebeadcdbbd 
__label__integration __label__objective __label__testing  use openstackpankoconfig package package config file openstackpanko package erase logrotate openstackpanko instead remove spec file deployment test pass config file check pass story task changeid ibfaebeffdcdffccbdfee signedoffby zhipengl zhipengs liu intel com 
__label__objective __label__quality __label__refactoring  refactored blockdev module reuse copy image file functionality regardless implementation local adapter future move copy image file dependencies base class rename local mdsum function match remote mdsum function implement bp powervmconfigdrive changeid ibcfdbbdfbfad 
__label__objective __label__quality  address bug promenade doesnt detect invalid configurations genesis script generation refactor validation check performance changeid ibcaaababebeacfe 
__label__objective  bug nova result vm unknown ips slave agents correspond vms useless ignore changeid idddfccfbffd 
__label__refactoring  extract logics internal function nod value iterate nod value changeid iddafdbfccecfa 
__label__objective __label__testing  changeid idfabcafcbbaafcebcea 
__label__objective __label__quality  check os switch case readable easier expand later changeid iadffdbdcbdfbb 
__label__integration __label__objective  queen ceilometer api remove storage driver relate code monascaceilometer remove backport refactoring come create realize class name clearer fit better ceilometer update testrequirements txt rocky release pythonmonascaclient include license info specify py instead py tox ini gate py changeid idfcdfaffbdc 
__label__integration __label__objective  nsxv backend api change introduce new param match type map rule compare type patch refactors code change backend changeid ibcfbeffaefeed 
__label__refactoring  common cod function changeid idbbcaacebadfdec cherry pick commit dcadaceeefceeeddcab cherry pick commit efbdeddbbf cherry pick commit daddbedfffceabaada cherry pick commit ebfebfeffcfccd 
__label__integration __label__objective  patch make address file convenient changeid ifedfcadaeeefdfced relatedbug 
__label__testing  function setuppackage test init py modify ostfserver setup add child process subprocess process construction unit functional test run pre setup fake ostfserver nailgunmimic action manage nose changeid iaafcccddeeb 
__label__quality  iptables fwaas py function convert fwaas to iptables rule prepare array potential arg value add extraspace unused argument refactor code deal element space separately example arg value etc array like security group neutron main advantage better performance apply router during difflib ndiff exactly syntax expect iptablessave result changeid iaddccacdbfffde 
__label__objective __label__quality  function copy horizon modify push modifications horizon able horizon function delete copy code tuskarui changeid ifccbfeccaeaffc 
__label__objective __label__quality  patch set simplify code relate site by params allow iterable argument call field specify exactly parameters include sitedefinition yaml mean hardcoding require manually filter params exact parameters require followup function call better code maintenance changeid iefdfbfeebbe 
__label__objective __label__quality  different place repeat code figure format account container list response text json xml thats pull single function this raise httpexception subclasses proxy controllers instead laboriously plumb error responses way swift proxy server application handle request let avoid certain ugly pattern like method return tuple error caller get value value value none none none none errorvalue raise error changeid idfdadffbbaede 
__label__integration __label__objective __label__quality __label__testing  refactoring creation pip fork child process helper method test run forever greatly simplify relocate self report call uniform log events process use patch clean test run forever changeid ibbeeeadcafeafca 
__label__integration __label__objective  align different service comply tag standard currently service support tag prepare sdk that change issue know image add tag image remove tag return image entity server query params tag rename compliant rest service the ones network reuse cinder support set tag get api limitation service tag api available compute server network net subnet ip port qos policy router sg sg rule subnet pool trunk image image changeid icbafafdadbbcbf 
__label__quality  refactor relinker reduce code duplicate relink cleanup function changeid icffeecbbcdceeace 
__label__objective __label__testing  assert python muranopl code test case fully write muranopl changeid idcdcaecadcaaddccacd 
__label__objective __label__quality __label__testing  test authwithtrust fixture dependencies global variables necessarily use instance time setup function call new trust create run class dont need creation initial valid trust commit get rid behaviour make test dependent fixtures state class variables favor ondemand approach get trust tokens changeid iccadfefcefd 
__label__integration __label__objective  current implementation create floatingip result api call twice pass cause additional attribute populate second call patch convert single call get parameters need continue recursively changeid ieaadfdebcefeb closesbug cherry pick commit eacfadafbecaff cherry pick commit fddcdbceddcdcb 
__label__objective __label__quality __label__testing  test list servers negative issue it its hard list here follow fix longer test flatly delete instance tenant alt tenant test method run fixtures active delete server create class setupclass method instead have test methods constantly relaunch instance reduce test time minutes remove nonnegative test remove test skip bug skip xml create service test identity admin test upstream keystone bug patch include patch bug fix sean gallagher contribute need rebased order gate pass changeid ibcfdcdaedafd fix lp bug fix lp bug fix lp bug fix lp bug 
__label__objective __label__testing  test list servers negative issue it its hard list here follow fix longer test flatly delete instance tenant alt tenant test method run fixtures active delete server create class setupclass method instead have test methods constantly relaunch instance reduce test time minutes remove nonnegative test remove test skip bug mark invalid upstream check errors errors skip xml create service test identity admin test upstream keystone bug changeid iededdddbefdeaccf fix bug fix bug 
__label__objective __label__quality __label__testing  refactor setup environment base test directories allow settings apply unit test changeid ibaaffecdaeaacbded 
__label__objective __label__testing  instead custom loader use base class testscenarios allow retain compatibility unittest test runner run single test need changeid idaefdedfaaafabdefbbe 
__label__objective __label__quality __label__testing  change icacabdeadcabdedfe refactored keystone test case use six move http client http status cod instead integers change refactors method name follow pattern changeid ifccdbfadebaec 
__label__objective __label__quality  commit refactors python code diskimage builder slightly preparation larger review add functionality python code ability apply elements current oppose chroot further refactorings stand better clarity include rename elements py element dependencies py add clarity purpose module update code rename test test submodule changeid iccebebaedbcd 
__label__integration __label__objective __label__testing  goal patch remove use database unit test instancegroup object mock database interactions object unit test verify call db api appropriate changeid iedebfcbbfbd 
__label__objective __label__quality  bug alarmthresholdrule py timestamp key define miss comma timestamp start start timestamp end end timestamp validation timestamp field not unclear current implementation new parameter timestamp be valid add validation function show timestamp allow use validate query fix bug changeid ibbfeedd 
__label__quality  complex functionality function changeid ifaecdfdeffcfcaaf 
__label__integration __label__objective __label__testing  refactor service status rabbitmq pacemaker non pacemaker mode cmd check change rabbitmqctl node health check rabbitmqctl cluster status cluster status fail issue nod doesnt timeout operation hang up instead node health check check node check cluster success stag file modules merge specify order rabbitmq user permissions rabbitmq user write test verify service actual user changeid iabddcbffcc closesbug signedoffby sergii golovatiuk sgolovatiuk mirantis com 
__label__quality  readability issue fix now changeid iefaabbeeefd 
__label__testing  dnm test toci refactor dependson iafbaecfadecbe changeid ifeafeacdc 
__label__objective __label__quality __label__testing  charm py file get big complex efficient maintenance refactor try break charm py file logical part core class default utils provide test part changeid ifdbabceecedabaecaed 
__label__objective __label__quality __label__refactoring  account container object servers thing get put etc split path validate components good device partition pair return theyre not object server modulelocal helper function this account container servers duplicate boilerplate code its common helper changeid iadfceabaaacbfcea 
__label__integration __label__objective __label__testing  use haproxyconfig package package script service file haproxy package create patch subfolder patch file haproxy haproxy folder subfolder refactor haproxyservicefile patch haproxyspecaddinitscript patch use haproxyconfig package relate file merge meta add support for tpm patch specaddhaproxyenvvarpatch patch specincludetischanges patch rename specincludetisconfig patch include add source code patch deployment test ping test vms pass config script file check pass story task dependson changeid ifdaafcefbababcf signedoffby zhipengl zhipengs liu intel com 
__label__quality  wip introduce single function collect devstack log run devstack case twice once old new grenade case ive roll duplicate part code include testr artificat stuff single function layout simplify distinct phase copy devstack file copy generic log status cleanup compression feel make process easier understand even greatly increase comment diffstat equal reduce duplication reduce chance mistake try introduce log process enhancements changeid iaaadaeedcdfeb 
__label__objective __label__testing  ability rescue unrescue server admin api action dependant configuration openstack cloud test test refactored easily test expect behavior base environment run changeid idcdfcecccfaacece 
__label__refactoring  similar cod implement blueprint implementeceipupdatable changeid idfdccbccbccbefccf 
__label__integration __label__objective __label__testing  latest support version ansible currently integration test job specify otherwise basic integration test job ensure coverage currently support versions ansible devel let know upcoming break change changeid ifcffababffdabacadd 
__label__objective __label__quality  main entry point now obvious clean up include get rid relative import clean import class pull boiler plate code readable methods changeid iceacceabadbcdcabbdcd 
__label__integration __label__objective __label__quality __label__testing  discover logic change order perform optimisation discover process take place time ostfserver startup load db exist test data db test set correspond test data cache provide fast access test repository future discover particualar cluster add database information link need test set test cluster link process use data cache discover take time perform changeid ibcecaeedbaacafadad non major fix test refactoring testrun class model relationship test set association proxy function establish need clean action perform standalone testrun methods nose plugin consume data store test set object unit test except rest controllers update additional nonmajor refactoring perform changeid iefeedcfdeccb 
__label__objective __label__quality  eventing model need update handle delay events and future need logic handle resume target lpm go additional complexity events change set move class grow long driver py file changeid ieadcdaafbfcdffddbbb partiallycloses 
__label__testing  upstream move extensiondescriptor neutronlib functionality revolve retrieve plugin neutronmanager refactor move libraries order align quark upstream neutrons expectations jira ncp changeid ieddabecceafba 
__label__objective __label__testing  unit test test multiple code paths methods patch refactors unit test follow methods vmdk module fix this copy volume to image in use retype changeid ibeadcfcbaeaedaeb 
__label__objective __label__testing  replace local timpestamp methods common class methods changeid iedbbfebacdbbcfedbd 
__label__objective __label__quality  replace get vmdk path get vmdk path and adapter type new function call get vmdk info return name tuple properties need vmdk operations changeid icbdddbeedfddcdc 
__label__integration __label__objective  changeid icfedebfdebfccf 
__label__objective  blueprint separatemetadataapi changeid ideffaeacabdcb 
__label__objective __label__quality __label__testing  refactor drivers bug goal responsibility reference check away controllers underlie drivers handle task equal greater efficiency tenant reference create user update user test inconsistencies backends additional test coverage improvements changeid ideeddbafdaabba 
__label__integration __label__objective __label__quality  currently lot duplicate function drivers use kubernetes take bring common class call kubernetesdriver clean subclasses changeid ifcbedecbcddeabeacedae 
__label__objective __label__quality  hadoop floder rename common hadoop floder confuse need invoke function hadoop floder deploy hadoop duplication upgrade reduce code separate folders sahara plugins vanilla version changeid iebcbfcddeba 
__label__integration __label__objective __label__quality __label__testing  current mechanism preserve learn bmc protocol filesystem active controller problematic swact update remove file storage method favor preserve learn protocol inventory database key value pair host level exist mtce info database field specify learn bmc access protocol share hardware monitor interdaemon maintenance message update refactors bmc provision accommodate bmc protocol selection host level update remove level bmc access method selection favor host level selection bm type bm type bmc specify bmc access protocol host learn effect make deliver today support change level inventory update deliver shortly enable bmc access protocol selection host level update allow customer specify bmc access protocol host level dynamic aka learn use redfish ipmi inventory update deliver information maintenance bm type bmc provision update deliver bm type come bmc interpret dynamic maintain exist configuration follow additional issue fix update nodetimers module default ring member timers run false true add pingutil restart function facilitate quicker sensor monitor follow provision change bmc access failures enhance hardware monitor sensor group filter accommodate nonstandard redfish readout label sensors fall exist can group lead monitor sensors add http security mode hardware monitor message default https support redfish implementation today field specify nonsecure http mode future get implement ensure hardware monitor perform bmc password refetch provision change test plan pass verify bmc access protocol store fetch database mtce info pass verify inventory push mtcagent hwmond mtcagent restart pass verify inventory push mtcagent hwmond hwmon restart pass verify bmc provision ipmi redfish servers pass verify learn bmc protocol persist process restart swact pass verify process startup protocol learn hardware monitor pass verify bmc type ipmi handle protocol force ipmi re prov pass verify bmc type redfish handle protocol force redfish re prov pass verify bmc type dynamic handle protocol learn persist pass verify sensor model delete relearn ip address change pass verify sensor model delete relearn bm type change change pass verify sensor model relearn username change pass verify bm pw refetched re provision change pass verify bmc reprovisioning soak testbmcreprovisioning sh loop pass verify protocol change handle file cleanup model recreation pass verify endend behavior bm type change redfish ipmi pass verify endend behavior bm type change ipmi redfish pass verify endend behavior bm type change redfish dynamic pass verify endend behavior bm type change ipmi dynamic pass verify endend behavior bm type change dynamic ipmi pass verify endend behavior bm type change dynamic redfish pass verify sensor model creation wait server power pass verify sensor relearn provision change model creation soak regression pass verify host power on pass verify bmc access alarm handle assert clear pass verify mtcagent hwmond log add value pass verify core dump seg fault pass verify mtcagent hwmond memory leak pass verify delete bmc provision host pass verify sensor monitor alarm degrade clear cycle pass verify static analysis report change modules pass verify host level bm type bmc function dynamic selection pass verify batch provision deprovisioning nod pass verify batch provision different protocol nod pass verify handle flaky redfish responses pend verify install changeid icaceabccab closesbug signedoffby eric macdonald eric macdonald windriver com 
__label__objective __label__testing  changeid icdaedfeafabaddcd 
__label__objective __label__quality  new feature add drivers hard maintain code work need refactor code work contain follow define new class name huaweiconf parse xml config file external xml file store san info config parse code different function parse adjust function structure rename function variables docimpact implement blueprint refactorhuaweidriver changeid ibeeafccecedfafdea 
__label__objective __label__quality __label__testing  want add function difficult test additions make because code isnt cover uts patch add unit test change confidently change functionality changeid idcffdfbbcfccebba partiallyimplements bp addressscopes 
__label__objective __label__quality __label__testing  set testscenarios match test methods validate input output data test class describe type setup copy scenarios methods mixin class set those changeid icedcadabcbdeaacdbbf 
__label__integration __label__objective  refactor methods api cli tiller operations separate handler function uniform rest code changeid idddfffadbdceedd 
__label__objective __label__quality __label__testing  investigate reference story bug notice wait for status openstackclient test functional compute test aggregate aggregatetests lot need it probably get copy somewhere place call need check output openstack aggregate show try get create aggregate synchronously need delay retry commit remove helper method inlines check time addcleanup aggregate delete directives move respective create defensive best practice make sure cleanup happen fail soon actual backend create as fact case reference bug story unknown impact reference bug changeid idffbccdcadacadfcbabbfa story relatedbug 
__label__objective __label__testing  test upload bug boot instance encrypt volume create image changeid iecdebafdacca 
__label__objective __label__quality __label__testing  goal follow test client validation serialize deserialize resource management addcleanup client return object attribute dict members access instance variable syntax change allow abstract definition client interface allow decouple where test live what client use clients tempest client official client direct api call project changeid ibefbecebcdfefcbbdcebec 
__label__refactoring __label__testing  refactors test use image behavior functionality changeid iefdeccdaadfeedb 
__label__objective __label__quality  static methods class methods secure registries insecure registries class attribute dont need pass arguments class methods abstract class imageuploader go wasnt add value implementations extend baseimageuploader upload image static method instance method argument uploadtask object value calculate source target name calculate uploadtask create result maintainable understandable easier pass value upload image require disruptive change changeid iafbbbcdaeacfdddccdd 
__label__objective __label__quality __label__testing  action definition combine action module workflow single engine delete task single engine delete unit test test workflow delete delete workflow step extract combine common part scalable single engine changeid ifbbbfdeceebbfadb 
__label__objective __label__refactoring  move functional test os security group os security group rule compute network directory align refactoring command changeid iefabcdebefdfadddb partialbug partialbug relatedto blueprint neutronclient 
__label__objective __label__quality __label__testing  break directive separate function easier test individually start add unit test changeid ibecadbecbafacbfeab signedoffby doug hellmann doug doughellmann com 
__label__objective __label__quality __label__testing  refactor test base stackservicetestbase like test clear mock validation inherit heattestcase inherit lot stuff base class isnt need test fix bug changeid iadecffbdfffcecf 
__label__integration __label__objective __label__quality  code change permissions function couchdb service py refactored addition translation add runtimeerror message miss underscore translation replace shell call respective operate system service command start stop enable disable change permissions modify test necessary create operate system service command change user group associate test changeid iaafaadceddfcfabca 
__label__refactoring  ps pull helm install logic function jenkins its timeout chart changeid iedcaaecfeeebbfaded 
__label__objective __label__testing  function write facts to dir add function get dir deployment info add appropriate test add changeid icdbacefefaef cherry pick commit dbcabadeedabdbaa 
__label__objective __label__quality __label__testing  draft testobjcontroller refactoring relate change ecduplication swift couple test class ec policy normal ec ec duplication test unit proxy test server py enable class relate change abstract ec test case ectestmixin class gather test methods place worse testobjcontroller test case replication ec hard understand test class structure hence patch attempt refactor structure from ectestmixin testobjcontroller testobjcontrollerecduplication for replication ec for ec duplication policy to basetestobjcontroller testobjcontroller basetestecobjcontroller for replication testecobjcontroller testecduplicationobjcontroller for ec policy for ec duplication policy todo sure set unpatch policies testecobjcontroller testecduplicationobjcontroller unpatch policies methods patch policies class reason item set ec policy class variable better set ec policy index retrieve policy test method relatedchange iddaccbafbd changeid ifddfaebbccfabed 
__label__objective __label__testing  wait for scrubber shutdown function catch assertionerrors retry refactor retry specific error namely glance scrubber run daemon mode test execute change function return value instead rely test assertions function pass it refactor test wait for scrubber shutdown check return result instead assertions function pass wait for scrubber shutdown followup changeid iedeffbafcb 
__label__integration __label__objective  fake ldap api emulate pythonldap api possible ldap test invalid pythonldap api accept utf encode string however fake ldap api accept python type properly handle type conversion ldap api exercise fake ldap api test currently type conversion inside ldapwrapper call pythonldap api mean unicode issue appear test live ldap server ldapwrapper fakeldap logically different providers api behave identically ldap api run time configurable option need mechanism substitute ldap api wrap call api type conversions type conversion wrap replace python type keystone type need ldap api call ldap api type convert result ldap keystone patch establish ldap api interface ldaphandler modify fake ldap support it replace ldapwrapper interface invoke pythonldap add ldaphandler instance common location type conversions prior call configure ldap interface ldaphandler class definition detail patch exclusively refactoring patch anticipate subsequent patch properly handle unicode value significant change functionality patch refactoring cleanly seperate api boundaries test exercise unicode disable patch work patch add correct unicode handle idea separate refactoring need support unicode actual unicode change review easier partialbug changeid idbabfabd 
__label__integration __label__objective __label__testing  tempest job run timeout often so need test complete sooner now currently test simple share creation share protocol difference usage different microversions influence view so combine test verify microversions test create share case generic driver test things reduce expanses share creations changeid ifefdafafcf 
__label__objective __label__testing  refactor availability zone list functional test json format output changeid ibcbeeeedcbfacdeceb 
__label__integration __label__objective __label__testing  partially implement blueprint supportcomputeapi changeid ibfdfcfdacfafebddb 
__label__objective  past couple weeks change neutron pypowervm affect neutron powervm longer send message agent and fix crash agent change set fix follow send message properly agent change cadence check slightly slower work mtms host update mtms format new pypowervm function changeid iaafbccafadedcbfb 
__label__objective __label__testing  wip create appcommon replace tlog function tlog add elapse function replace print end timestamp replace get image id app glance id replace run time command prun remove use exit status replace argument test test prepended docker unittest prun remove comment code cleanup changeid ibdcdddbcdcf 
__label__objective __label__quality  post method trigger controller currently bite complex break code conceptually meaningful submethods simplify it changeid idbfacceacfbded closesbug 
__label__integration __label__testing  make easier add test different controllers changeid iebddacaccffcc signedoffby zane bitter zbitter redhat com 
__label__objective __label__quality  eventing model need update handle delay events and future need logic handle resume target lpm go additional complexity events change set move class grow long driver py file changeid ieadcdaafbfcdffddbbb partialbug 
__label__objective __label__quality __label__testing  majority setup testcase isnt subclasses mean extra cpu work test waste changeid ifcfebeddbdaaeacd 
__label__integration __label__objective __label__quality  network yml playbook reduce complexity perform validation include role specific os family host networkredhat networkdebian allow network configuration diverge os families add excessive conditionals currently content roles identical story changeid iaaeeebaaeedc 
__label__objective __label__quality  rename dvr router class distribute centralize reflect functionality refactor code distribute router dvrrouterbase class allow centralize router class inherit dvrrouterbase distribute router class changeid ibdeeebbeeea signedoffby ryan moats rmoats us ibm com 
__label__objective __label__quality __label__testing  transition new transformer class cleaner smaller code refactored test easily handle multiple transformers test modify basetransformer ensure data pass custom function changeid iaccdaeebfecdcbdfbbb cherry pick commit cdbabebbecfeebabe 
__label__objective __label__quality  resize migrate refactoring fix patch fix construction scp command join space add parameter driver finish migration create lpar instance refactoring need order launch instance destination host patch fix bug bug changeid icbfecdeacffdcfcefd 
__label__objective  refactor expirers task shuffle implementation objectexpirer shuffle order expiration task avoid delete object certain container continuously review expirers task queue update patch easy patch refactors implementation shuffle patch shuffle divide function patch rebased patch merge changeid ibfebfacbddefcacfdde 
__label__refactoring __label__testing  refactored test key pair function changeid ibcdacbebeab 
__label__objective __label__quality  remove unused security group info refactored smaller function block easier understand partially implement blueprint refactoriptablesfirewalldriver changeid ifadebdadeecfe 
__label__objective __label__quality  reduce cyclomatic complexity magnumexception remove exception handle optimise log kwargs match message changeid ifdbabedffcddbdefdcec closesbug 
__label__integration __label__objective __label__testing  run puppetunitlatest master nonvoting goal job test latest versions puppet provide early feedback master current newton stop run unit test recent poll show recent community stable mitaka master current newton start run unit test latest version vote coverage summary liberty mitaka newton latest nonvoting changeid ifbadcbfaee 
__label__objective __label__quality __label__testing  change separate creation permision set etc neutron reuse functional test setup rootwrap deployment changeid ibadbacadffcbbfecd 
__label__objective __label__quality  patch add base controller class common methods base class blueprint vapi changeid iaefbadbededebecbb 
__label__integration __label__quality  commit refactors code compliant dry rule ive change comment readable correct changeid icacbbdcfdacbbbf 
__label__objective __label__quality  refactor ssh know host line ssh authorize key line easier maintain rstrip per function changeid idbbeafddadabad 
__label__integration __label__objective  patch refactors api version check min max versions define openstack apis previously definitions place global scope incorrect partialbp apimicroversioning changeid iababdabdafabdcffeab 
__label__integration __label__objective  promote api version status alpha beta adopt openstack release name lieu arbitrary version changeid idfaccebdefabcbd 
__label__integration __label__testing  test context elevate instead pass correct project id instance create function changeid ibdcbadabddccaecdfb 
__label__objective __label__quality  improve error report incorrect structure yaml miss indent detect add information file problematic structure code extract expect single item collection extract get the only one subitem function increase readability add test miss indent exception changeid ieebcfcfcffdd 
__label__objective __label__testing  jsut try repo gate refactoring tempest fail changeid iffbbedadaccdaf 
__label__integration __label__objective  script divide block correspond version instal plugin add options specify image type hadoop version option choose image want test instead create all changeid ibeeacaeaafdcd 
__label__integration __label__objective __label__quality  refactor manila shareexportlocation api patch shareexportlocation readable maintainable changeid iaefbcdffecddcbedb 
__label__integration  wip changeid ieeaaedcbedd 
__label__objective __label__testing  remove multiple approach use verify get test method changeid idabcaeddaccaca 
__label__refactoring  changeid ifdbadaaceefabacdfefc 
__label__objective  refactored script code add common function library refactored configure api sh changeid idffdefcdbadbefbb 
__label__integration __label__objective __label__testing  moment test manila test api test share metadata module mock db request lead failures main code use dbspecific things so refactor test module use test db unblock usage dbspecific things changeid iaeebdfdfaddcfcf 
__label__quality  creation cellsv rpc vhost bury restart function make hard extend break helper method move conditional logic nova module itself changeid ibeaabecbbcecaceebd 
__label__objective __label__quality __label__testing  currently method duplicate code db look complicate hard read patch refactors reuse code db add need dvr relate handle new methods introduce parent patch know dvr agents router delete from need remove explicit bind dvr agents routers later patch patch remove useless mock all kind test replace functional test partially implement blueprint improvedvrlagentbinding changeid ifbebffebecaefccd 
__label__integration __label__objective  support method respond enumeration modify encrypt generate data encryption key use support refactor bunch confuse kek meta tenant kek metadata kek meta dto things modify plugins support new method signatures abstract base class unit test error condition changeid icffcfffbbf implement bp cryptorefineissupported 
__label__quality  linearize control flow remove nest function remove nest loop filter algorithm kn dictionary longer require hash tuple changeid iddcffdfaacc 
__label__integration __label__objective  refactors image model add image class correct key change member id member obj to json method refactors image client fix serialization deserialization issue list image method refactors member test fix string date object conversion issue changeid ifcaefacf 
__label__objective __label__quality __label__testing  refactor organize code follow rpm family execute yum repo setup binary install binary tool source install source tool yum family install source tool test build fairly solid possilby rhos long term goal patch allow add repos execute yum repo setup section base file base openstack infrastructure yum repos changeid ifbfcccbbdeeabb 
__label__integration  use patch extra spec action api ref update soon changeid ifadfcabacbbffe 
__label__objective  verify refactor htmloutput reason use oop simple method patch replace class htmloutput method generate report also add improvement skip reason number bug replace link it changeid iaaafebbbbdabeef 
__label__integration __label__objective  simple change pass bdms follow compute utils function avoid database lookup get device name for instance relate bp nodbcompute changeid ibdebdaafcccdeefbb 
__label__integration __label__objective  present interfaces service data manipulate admin interface novamanage extensions contrib service py servicegroup api layer have different interfaces manipulate source truth lead severe data inconsistency useful store nova service proposal follow common path interact service data interfaces mention above common path servicegroup layer whos primary purpose manage check service liveliness help overcome tight couple nova service database consistent view service data service liveliness etc changeid iddedaefbbcbdeeadb implement blueprint servicegroupapicontrolplane 
__label__objective __label__quality __label__testing  possible create sriov device rp functional test capability subsequent patch changeid iaaacacffdebceebdb blueprint bandwidthresourceprovider 
__label__objective __label__quality __label__testing  need session role information test code test complicate dont feel point need new test case class test also utils api test directory confuse so roll base test class helpers py changeid ifddefebcfdfdd 
__label__quality __label__testing  remove fuelagent dependecy functional test changeid iadecdeeacdecfecee 
__label__integration __label__objective  patch pair mac pci slot device vf instead search pci slot call extension delete change port id mac pass agent extension require mac key identifer vf port extention port delete api allow remove know port list qos extension changeid iccacdadecbdfabcda 
__label__objective __label__quality __label__testing  patch move pki pkiz specific test pki specific test class pkiz test class inherit test pki test class uuid test class longer override parent class skip irrelevant test changeid iafbdefeabfbceddacb cherry pick commit beafaefdcbbcfef 
__label__integration __label__objective  drop sourceassoc table data accessible api drop resource table data retreive sample table changeid idacafceaadceee implement blueprint bigdatasql closesbug closesbug 
__label__objective __label__quality __label__testing  change icacabdeadcabdedfe refactored keystone test case use six move http client http status cod instead integers change refactors method name follow pattern changeid ibafaaccaefceb 
__label__objective __label__quality __label__testing  use config fixture explicitly different config init unit vs functional test changeid iebfcdedcbfd 
__label__objective __label__quality  refactor abstract columns datalist image volume object test case columns datalist set test case image volume object necessary patch abstract remove redundant code changeid ieaafaabacdac relatedbug 
__label__quality  pass function parameters startup code look need class hierarchy changeid idcccfdeabcfaeeb relatedbug 
__label__integration __label__quality  bp virtdrivercleanup xenapi driver consistent name driver instead connection changeid ibbffddfdcfbfcbfb 
__label__integration __label__quality  patch move wsgi api module merge json serializers deserializers module easier maintenance changeid idecefebebdcade 
__label__quality  shuffle function reduce size be bootloader load move logic new function changeid icbfdcebbfdbfacffb cherry pick commit dabcecdddcefbeb 
__label__objective __label__quality __label__testing  wip improve ovsagent initmethod currently method create specific configurations dictionary accord cfg conf ovsagent structure remove method pass oslo config directly initmethod ovsagent avoid confusion make easy track refactored unit functional test ovsagent accordance change initmethod remove createagentconfigmap changeid iedefccdcac closesbug 
__label__integration __label__objective __label__testing  change run playbooks script core cli tool longer special case script run bits outside simply run deployment tool theyve design script execute playbooks scriptslibrary function install bits ensure gate success have retry playbook execution case transient failure notice add script exit notify deployer work playbooks directory execute runplaybooks sh script again notice link documentation add ironic service remove integrate gate theyre ready general consumption test time test configuration add tempest role runtempest sh script changeid iccdabdcedccda signedoffby kevin carter kevin carter rackspace com cherry pick commit becfddbbbbd 
__label__objective __label__quality __label__testing  pull authentication token manipulation image functional test replicate place single helper subsequent functional test crossowner copyimage support changeid icffceaeadeebcbd 
__label__integration __label__testing  common pattern helper class refactor test use base helper changeid icddaddcfdafdfceebffa 
__label__refactoring __label__testing  changeid ifdbeaeaceefbfc 
__label__integration __label__objective  use openstackaodhconfig package package service script file openstackaodh package deployment test pass service script file check pass story task dependson changeid iccfdfaddcdfbdbad signedoffby zhipengl zhipengs liu intel com 
__label__quality  refactoring code reuse functionality possible changeid icfdcafacbeaed 
__label__objective __label__quality  network manager create network function verge too complex pep check error change refactors cidr validation code private function preparation fix bug changeid iddddacccfaaeaecfbdca 
__label__objective __label__quality __label__testing  test hand centos ubuntu simple mode test patch changeid idecafbdcd 
__label__objective  refactor orchestrator support network function device cluster framework granular events changeid ifebdacefcadeeebdbfcba coauthoredby ashutosh mishra mca ashu gmail com closesbug 
__label__integration __label__objective __label__quality __label__testing  commit add general framework test data transition db migration base test migration framework nova commit update exist individual migration test use new framework changeid icfefeafcacafddda 
__label__objective __label__refactoring  fix bug changeid icdcedabeebaead 
__label__integration __label__objective __label__testing  add ntpconfig package config customize ntp conf ntpd change ntp srpm drop replace rpm ntpconfig configure depend ntp ntp include iso automatically ntp package instal type node change filter test do build deploy multinode confirm ntp conf ntpd keep before story task changeid iffdbccacdcfedcb signedoffby slin shuicheng lin intel com 
__label__quality  original logic intuitive change code better readability changeid iddffeededaffaddd 
__label__quality  list users excess loop consolidate gain performance improvements change consolidate excess loop list users utility function changeid iaaaadcfedfdbafd relatedbug 
__label__objective  patch refactors nsx logical switch port function rest client resource model update refs function use nsx client patch add support pass switch profile ids lport create functionality leverage subsequent port security change set changeid icfafffadebedac 
__label__objective  use new generic transformer class fix bug image id extraction image ref changeid iefdfcbddcdedfcbdaa 
__label__integration __label__objective  discuss ptg session remove image api changeid iecfdffbcbadaccbf 
__label__integration  way dont plumb halfdozen options onebyone changeid iafbeffbecbbecce 
__label__integration __label__objective  refactor sysinv data collection use new sysinvdbdata api instead scrap cli command output story task dependson signedoffby kristine bujold kristine bujold windriver com changeid ifecdcfcecaacabaacd 
__label__objective __label__testing  create fake test data bonus fix data id id return network data network id changeid ibacbcbacbaadeccefa 
__label__objective __label__quality __label__testing  situation weve line code file contain different test case reasonably divide smaller file patch include test case connect capabilities get volumes active window test case changeid iffbfeebcbffafefce 
__label__integration __label__objective __label__quality  currently part user list group list command actually function role list counter intuitive mislead refactor change role relate logic single place role list command allow role grant list user group domain project combinations user group specify list roles system default behaviour changeid iceddfbfddbadfffcc 
__label__integration __label__objective  previously runonce suffer follow limitations run once hardcoded parameters patch add idempotentcy allow tool safely run once additionally config options parameterized provide flexibility different dev environments exist default persevere backwards compatibility changeid idaefbefaaaedbfdbbd 
__label__quality  change refactors mkservice function easier maintainance usage outside resource function changeid ieeaaeadceeafaa 
__label__integration __label__objective  task attach stories make sense list stories available stories story id task endpoint current webui treat task firstlevel api resource available task changeid ieebcafefb 
__label__objective __label__testing  propose change allow use case parse method handle dynamically generate string addition file yaml load method handle string file handle current implementation yamlparser parse method exclude string remove open yaml load method move buider load file method yamlparser support broader set use case test driver need update load file directly changeid ibbedcfccce 
__label__integration  changeid idaefcaaffbf 
__label__objective __label__quality __label__testing  change rework lot flavor relate fake api test common fake module reuse different test modules changeid icdaecabaae 
__label__objective __label__quality __label__testing  create test methods create property use id execution change pretend simplify return data reduce number line creation test data execution unit test osloversioned object changeid icfcadeeaacdc partiallyimplements blueprint adoptosloversionedobjectsfordb 
__label__objective __label__testing  improve coverage dvr schedule allow safer bug fix refactoring followon patch changeid ideadcabaeebacbfcac partialbug partialbug coauthoredby swaminathan vasudevan swaminathan vasudevan hp com coauthoredby carl baldwin carl baldwin hp com 
__label__objective __label__quality __label__testing  check run as root root helper execute function utils py rid test require run as root false simplify disk partitioner we dont need exec function update test reflect root use changeid iededddbfacfdcc 
__label__quality __label__refactoring  split long function smaller ones normalize ipset normal security group rule generation add log error nottohappen condition changeid ifcececaccafac 
__label__objective __label__quality __label__testing  need unit test test things like pagination work glanceclient image detail call glanceclient glance unit test that unit test glance image service detail method nova need test code boundary exist detail method verify call glanceclient helper methods right parameters patch pull unit test testglanceimageservice test class test class use mock verify code path detail method create update delete methods glanceimageservice class final piece rework download unit test which arent unit test functional test second run changeid iffaaafbaacbcfbb relatedbug 
__label__objective __label__quality __label__testing  exception throw fail test need catch it reduce complexity test changeid ibdebefccace 
__label__integration __label__objective  neutron api allow users specify security group create port moment horizon modify security group port edit port row action edit port workflow refactoring creation port form workflow support creation port assignment security group change more patch contain reconstruct form support security group submit patch createport changeid ieeccbebfbdd relatedbug 
__label__objective __label__testing  add service be up test utils service be up scheduler changeid iabbdafbddabdadcfc 
__label__quality  work progress figure refactor request code readable patch include small refactor set options add novamanage networkcreate command direction community want go continue changeid ifccacaddecffbff closesbug 
__label__integration __label__objective  current ovsdbswitchapi provide ovs command sometimes output result directly sometimes make hard use also ovsdbswitchapi use neutron framework execute ovs command sometimes use idlutils directly sometimes idlutils directly reconnect ovsdb timeout patch follow things create dedicate ovsdb api sub class ovsdbidl neutron ovsdbswitchapi execute ovs command remove explicit execute consumers remove directly idlutils ovsdbswitchapi remove obselete methods ovsdbswitchapi remove duplicate command class defination neutron changeid ieafcbaddecbec closesbug 
__label__objective __label__quality  refactors network topology angular elements important wip general outline there review debug test settings angular topology true enable feature new tab network topology panel settings angular debug model true enable model debug ui instead live server data note series debug components exist development mean final version patch visualisation divide separate compoments networktopology serve central component tie functionality topologygraph wrap display code general and generic possible potential reuse different contexts popupballoon contain logic relate popups display click individual nod graph buttonbar checkboxbutton utility components ui addition visualisation elements data handle refactored move angular elements topologymodel service contain code handle reception data server its map comparison cache data diffing support data modify delete create synch service mean central model store single source truth data store modify outside server synching mechanism components need modify data create local work copy data immutability topologygraph factory factory function take store model data create graphlike data structure nod edge display elements bind data display purely visual operations network collapse carry level model level intend continuation work changeid ibcdeeabcbcdcd implement blueprint curvaturenetworktopology 
__label__objective __label__refactoring  replace lbaas templates addvip html addpool html addmember html addmonitor html one fix bug changeid iafedeacdbdabf 
__label__integration  changeid iadecceebffdfbc coauthoredby caio carrara ccarrara thoughtworks com 
__label__refactoring __label__testing  refactors test use image behavior functionality changeid iadcdccadfaeadc 
__label__objective __label__quality  futurist call introduce code difficult understand example local variables like global code easier understand usage local variables scoped commit introduce wrapper function futurist threadpoolexecutor convert inline function normal methods believe improve code readability lot changeid idbaceccdffdcb cherry pick commit aeacafedcefeeafcce 
__label__integration __label__objective  redis driver bring new db api process ha call apinb module abstract db api layer change private method redis driver remove check connection redis driver use changeid ibceecfeadffcbdedbabb 
__label__integration __label__objective __label__quality __label__testing  test file nearly line long change split series smaller file test type functional change changeid ibaececebdadcfcebdab 
__label__integration __label__objective  ovnmacaddressnetwork resource network resource special network want create internally have network nest network resource interfer work relate create composable network nonheat tool changeid iafbcfbedbfbdabadbadcabb cherry pick commit afddabdefa cherry pick commit bfbabaabfdadfcde 
__label__objective __label__quality  large boilerplate code datastore manager managers add time involve maintain code wil continue grow alleviate this base manager class add common code reside initial refactoring move obvious code such rpc ping update status base class define properties abstract functionality go forward issue have instance inandout active state fix add flag file write base class prepare finish successfully closesbug closesbug partially implement blueprint datastoremanagerrefactor changeid icfddebabdaccdfaaeed 
__label__objective  bug patch add color onscreen neutron log output way nova cinder heat engine do aim log configuration instructions move function reason refactoring instruction project exception target configuration file changeid idfdbbbabcefdedfcbfdfd 
__label__objective __label__quality __label__testing  network relate methods upgrade controlplane env module collect yaml file nod bup info present extract delete overlay network action separate function changeid ifecbacbfecbefaaffe 
__label__integration  changeid iacaaadbaacfcbacaaf 
__label__integration  refactoring api extensions change include better use python idioms improve support load extensions changeid icefabeefaedafc 
__label__integration __label__objective  api fip update dict tenant id id anymore floatingip db pass function need fip dict come api orginal be refactor redundant log message fips port tenant id check ip version check changeid iccdfaecfcbfbfdeedb partialbug 
__label__objective __label__quality  funtion create graph generic function need know parameters pass plugin constructor patch generalize parameter pass patch need upcoming patch eliminate globals block device handle changeid ibedbfadbefcfdfeb signedoffby andreas florath andreas florath net 
__label__objective __label__quality  dry set primary controller reuse couple change set set deployment pirorities readable replace prior priority prior mean previous lead confusion read code changeid iddbfdfdddb 
__label__integration __label__objective  current implementation create floatingip result api call twice pass cause additional attribute populate second call patch convert single call get parameters need continue recursively changeid ieaadfdebcefeb closesbug cherry pick commit eacfadafbecaff cherry pick commit fddcdbceddcdcb cherry pick commit fdcfafabfbbabccececaea 
__label__integration __label__objective __label__quality  use fsm place initation move utils tool function changeid idbbbfbdbebfaccafefedaa 
__label__quality __label__refactoring  return false instead errors correct package status process changeid icafebcccafcdbffca closesbug 
__label__objective  relate blueprint xenapivolumedrivers xenapi access require cinder change extract lowlevel xenapi session management pool base class move novacommon later changeid ifcffdcfeaa 
__label__objective __label__quality __label__refactoring  move code update record default data change code call data pull remove unnecessary code bug changeid icbffbfeceefd 
__label__objective __label__quality __label__testing  allow test class mixin base test advantage mock notifications changeid iaccaabcfedaff 
__label__objective __label__quality  simplify token process code little attempt reduce complexity follow auth token review remove logic change it changeid icfbaadddcbdfbfed 
__label__objective __label__quality  methods complex comment appropriate way changeid icaeacaeccdadaacbba signedoffby andreas florath andreas florath net 
__label__objective __label__quality __label__testing  refactor test volume file situation weve line code file contain different test case reasonably divide smaller file patch include test case connect with availability zone policy changeid iefbcebfebabfb 
__label__objective __label__quality  fix bug introduce commondbmixin include utility methods manipulate model query changeid ibcbfeeccefd 
__label__objective __label__quality __label__testing  refactoring neutron configuration options tempest test config neutron conf test tempest allow centralization config options provide easy way import changeid idcbcbbaccdcdc partialbug 
__label__integration  add db adstraction api db operstaions sqlalchemy implement orm changeid iecccdababffbcad 
__label__integration __label__objective  currently lot unnecessary log line generate api invocation image transfer patch make log print statement change reduce noise log file changeid ifddaddcbdbbebdaf 
__label__objective  switch selfcontained django openstack auth package proper django contrib auth pluggable backend notable functional improvements include better overall security use standard django auth code wellvetted security experts token expiration check user enable attribute check support range django auth attribute be anonymous be active be superuser etc improve hook rbac permissionbased ace control rbac permissionbased access control patch move role service orient check permission check transition policydriven check easier fully land openstack implement blueprint movekeystonesupporttodjangoauthbackend changeid ifafaffcceccaaed 
__label__objective  create lvm image check free space volume group order create iamge check volume group large contain image well add new function call volume group size check volume group size raise error lvm image creation fail changeid idebffffdbddffacfa signedoffby chuck short chuck short canonical com 
__label__objective __label__quality __label__testing  unit test iser inherit tgtadm mean time run test iser tgtadm test run too chache add targetfixture test allow decouple test delete duplicate code change delete init test class init work replacement setup setup instead protocol write test counterpart teardown init no replace stub mock changeid iaafefbbfcaaeacfdeeca closesbug cherry pick commit bddffcacdfacdfaadad 
__label__integration __label__objective  wip api methods class staticmethod rallymanage stuff rally api todo restructure unit test changeid icafedacc 
__label__integration __label__objective  wip refactor chassis northbound api methods changeid idaccfebcadeecea 
__label__objective __label__quality  patch change format alarm definitions cache eventalarm evaluator dict reduce complex code update alarm entry cache case alarm fire fix bug occur start evaluation debug true whith bug evaluator start evaluation failure generate debug message changeid icdcbcccbeabaccfcfaab 
__label__objective __label__quality __label__testing  single interface pass instance match profile instance now flavor to profile use map function generate config devices instance network block device info unit test add add before begin refactor break functionality refactor that increase test coverage changeid idfaafacfbecf 
__label__integration __label__objective  refactor attach volume workflow taskflow split workflow volumemanager separate task create task perform individual require action accomplish desire outcome volumemanager workflow compose follow task extract volume reference database validate volume status availability update volume status metadata verify driver initialization update volume status attach notify volume action changeid iefedccaeeceddbfa 
__label__objective __label__quality  duplicate code fetch specific value stack output add get stack output item fetch name stack output refactors function type action changeid ifdcfdfcccbdc 
__label__integration  patch refactors placement api class generic service class service package management simple note fix incorrect stop httpd service nondebian system changeid ifbaadddcb 
__label__integration __label__objective  get host for server function utilites functionality retrieve osextsrvattr host attribute servers admin api implement multiple place api scenario environments well move get host for server fuction tempest common compute refactored test use new generalize function changeid ibeccbcfcfafacbaddeea 
__label__integration __label__objective __label__testing  refactors uwsgibased log filter encapsulate better add redaction filter api log change include bring stray test correct location changeid idedabdefdbbccaebe 
__label__objective __label__quality __label__testing  new ref function confuse base new ref function ones use remove field anyways new ref function didnt use new ref all new ref remove function create dict need changeid ibdeafeccdcafc 
__label__integration __label__objective  add generate vpn file cert rpcapi use cert rpcapi call crypto directly change file modes generate zip file changeid ifbbebceebbff 
__label__integration __label__objective  ovnmacaddressnetwork resource network resource special network want create internally have network nest network resource interfer work relate create composable network nonheat tool changeid iafbcfbedbfbdabadbadcabb 
__label__objective __label__quality __label__testing  set apiversion base test class instead derive test class changeid ifbcaffecadcbdefb coauthoredby andrey kurilin akurilin mirantis com 
__label__testing  todo changeid iabdbeffefbfaffedacb 
__label__objective __label__quality __label__testing  test case combine use single server instance instead create dozens servers bug changeid iafccfcbafceabede 
__label__objective __label__quality  image transfer unnecessary complicate buggy patch replace complex usage block queue thread simple read write loop performance code cleaner nfc lease update loopingcall utility changeid ibcdccdefbceba closesbug 
__label__quality __label__testing  wip refactor ownership check delete change refactors project id user id choose delete operation check refactored new helper function duplicate code replace say helpers note futureproofed openstackcommon name tenant user instead nova project id user id id like hear think this changeid iacabdfbfaadcbfcfbe 
__label__objective __label__quality  instead try figure proper imagemodel instance image use get model function result imagemodel actually represent proper imagemodel instance downstream mount function able intelligent decisions mount instance disk possible use get model instance boot volume use localblockimage its case simply expose block device changeid ifcdfaffbffaacdffd 
__label__objective __label__quality __label__testing  submission refactors unit test pertain powermax cinder driver single unit test file split multiple file ease use changeid ifbffecaebefeddddacd 
__label__refactoring  rebased master branch latest fix tox ini resolve configerror substitution key envbindir find error run functional test add infoblox openstack license info comment section change variable name use camel case use low case underscore baserequestfactory changeid ifeaddbbbcf 
__label__objective __label__testing  refactors service test different ways remove unnecessary call test test instead test cover make testlauncher test test service random port do require db changeid icdfbcdccfafbdcdafbf 
__label__objective  puppetopenshift origin module recently go refactor preperation oso release patch change necessary puppet parameters template continue function changeid iaebfeeecafdad 
__label__integration __label__objective  pacemaker vip resources able automatically detect configure correct iface netmask parameters base local configuration unit switch hash base name vip resources drop configuration nic cidr netmask params hash base char sha hash vip deterministic readable base gits short hash default support deployment container base environments interface subnet connectivity consistent container instance application note change somewhat bumpy original iface name vip resource stop delete prior creation new short hash name vip resource closesbug changeid icccabbffdbaaddb 
__label__integration __label__objective  support params list params order value check value inside them patchset make set instead tuples changeid iabfcdabdccafdfeaedf 
__label__objective __label__quality __label__testing  refactoring allow addition fibrechannel drivers netapps cinder drivers continuous development nearly years necessary houseclean commit split long file contain multiple class normalize class hierarchies enable subclassing different driver class iscsidriver fibrechanneldriver rename class begin process move unit test file match hierarchy test tree implement blueprint netappcinderdriverrefactoringphase changeid ibaaccdcbebebab 
__label__objective __label__quality __label__testing  preparation add resize support resource tracker claim class factor resource tracker break claim test logic easier reuse patch prework ease add resize claim resource tracker bug changeid ibbfdcedfaaba 
__label__objective __label__quality  compute change function which handle cloudcompute relation change hook event configchanged updatecharm hook mean lot work wasnt necessary hook patch split function separate function deal thing introduce new function those mean usages compute change use actual feature need changeid iebeecefad relatedbug 
__label__objective __label__quality __label__testing  share code detach detach all easier read time improve test coverage changeid icdebbecebcefaad 
__label__quality  get manager for store weird function switch base class type parameter odd throw pre object orientate days object define want refactor class object changeid ibcaaefbdacdfbbbeeaad 
__label__objective __label__testing  significantly refactored test improper authorization check match new style test changeid idfcbabbeaafdcbcf 
__label__objective __label__quality  lot common code function ironic conductor utils validate port physnets ironic drivers modules network common get physnets by portgroup change refactors code add new utility method get physnets by portgroup id return physical network associate portgroup physical network presence multiple cause portgroupphysnetinconsistent raise changeid ifdcceaacceedbe relatedbug 
__label__quality  tweak generation envvars catalogue airshipctlcatalogues function itself result vanilla catalogue import resource phase need it changeid ifeaddfbfacdbafd 
__label__objective __label__quality __label__testing  refactor unit test case driver py specially remove vm conf mock mock vm conf host fakemini vm conf dpm physical storage adapter mappings map override testcase module remove test case vm py host py try write test case module variables get override anyways need change testcase zhmcclient mock framework time delete test case delete conflict module changeid iddfcfbdaecaedbdcfebaca signedoffby prabhat ranjan pranjank in ibm com 
__label__objective __label__quality __label__testing  patch refactors logic model abstract sfc specific ovs driver move ovs driver update ovs driver manage ovsspecific resources abstract plugin resources allow service function path ids identifiers manage generate networkingsfc plugin itself instead inside ovs driver driver reuse sfp allocations wip workinprogress miss follow time update test work update port chain plugin driver interface ideal carry update exist port chain split abstract plugin resources specific ovs resources such discussion team hold decide best way approach this potentially modify plugin driver interface handson validation instantiate portchain plan code change closesbug changeid ibcacbeaeeabdfedef 
__label__integration __label__objective  current implementation create floatingip result api call twice pass cause additional attribute populate second call patch convert single call get parameters need continue recursively changeid ieaadfdebcefeb closesbug cherry pick commit eacfadafbecaff 
__label__objective __label__quality __label__testing  logic relate secure transport trace info osprofiler utils py add methods sing pack sign unpack hide complexity pack data generate hmac validate hmac data cover osprofiler utils py separate test remove mess wsgi middleware add trace id header simplify web test disable possibility setup hmac key cause security reason changeid iebbffafeddaea 
__label__refactoring  common function provide load drivers method load drivers easily change changeid ieaefeebcf 
__label__refactoring  old check function functionality preserve check call changeid ibfccdebbfcbbdbeb 
__label__integration __label__objective  base current design instance volume back image ref code nova api openstack compute servers py ll reasonable anymore patch remove if check closesbug changeid idebeedbfbcf 
__label__integration __label__objective __label__testing  remove job ansiblerolearaapiubuntupostgresql replace araapipostgresql job design single database server multiple api servers different linux distributions order test coverage ubuntu fedora soon centos changeid iffabedeafafeebbbe 
__label__refactoring  move storlets installation install storlet install storlets sh changeid idceeabdeadaddac 
__label__integration __label__objective __label__quality __label__testing  wip todo test multithreading fix eventlet execution it hang now whats do single graphaction parallel revert executor taskactions method split parallel task executor parallel engine minor cl stufff changeid icabddbfdadabefaccfb 
__label__objective __label__quality  rewrite revoketree be revoke method readable use dynamic object recursion use changeid ifeaeefcacacdcbcbdfb 
__label__integration __label__quality  reduce repetition mock patch call changeid icbbbddfcecec closesbug 
__label__objective __label__testing  call create project api test patch prepare create project method test use changeid iacdcabedcffbebb 
__label__objective __label__quality  changeid ieaabdecaebadea 
__label__integration __label__quality __label__testing  patch fix input helper function update alarm require alarm data its input refer alarm id patch delete unecessary get alarm changeid ibefecadacebdbacf 
__label__objective  refactory query user id code quotasets need use consistent api code changeid iffaafebeaebdfebdd 
__label__objective __label__quality  patch add follow code handle qos driver abstrct class avoid code duplication chace poclies reduce pull rpc call server support delete rule type delete rule partiallyimplements quantumqosapi changeid iadbbaacbbdf 
__label__objective __label__quality  authenticate token method complex keystone refactored extract complex piece method check trust info new method allow maxcomplexity reduce changeid idafdadedfdecc 
__label__objective __label__quality  previous code huawei iscsi driver lot trick code support autoswitching controller fail example change server ip sshpool runtime use sshpool get instead sshpool item suggest use python patch refactor code cleaner way include allocate seperate pool controller failure need switch pool use need lock pool change ip exist pool use sshpool item instead sshpool get suggest eventlet refer cleanup sshconn create dont need manually close client its ok use infinite socket timeout use create method sshpool cleanup unused function utils py sshpool remove create huawei driver its bugly fix grizzly master dont need it remove it utils create channel create driver replace client invoke shell width xx height xx changeid idcbdafcbafefcbfacbcafa 
__label__objective __label__quality  currently export function create export implement individual target code common feature target patch move methods parent iscsitarget class commonalize target simply inherit methods parent class result change lioadm inherit iscsitarget class directly instead inherit tgtadm class simplify dependency target improve maintainability refactoring methods patch fix follow issue fix bug transition new driver target model iscsi target add table create export phase however remove export lio target reffering iscsi target table cause notfound exception remove export skip remove iscsi target result iscsi target remove target continue grab volume logical volume inuse status patch fix problem reexport volume chap current tgt target recreate iscsi target chap ensure export volume export chap previously patch change bahaviour recreate iscsi target previous chap store volume file state path dir raise correct exception delete iscsi target fail terminate connection lio target raise iscsitargetattachfailed delete iscsi target fail raise iscsitargetdetachfailed delete ensure iscsi target methods dead code tgt py transition closesbug changeid ieadeaceddafcbedfbcf 
__label__objective __label__quality __label__testing  instance action notification sample test need instance work with test boot new instance patch refactors test use common instance possible optimization speed test execution significantly commit sum execute time test sec commit sum execute time test sec note action test right notification transform use speed future well changeid iafcfbbcfabfbbaacbac 
__label__objective __label__quality __label__testing  fix bug add better retry support make sure need retry request glance cycle host potentially attemping host fail old random selection cause immediate retry host fail add log host port fail fix bug retry test didnt actually successfully test retry test new code add changeid ieebcaebedaabf 
__label__objective __label__quality __label__testing  test share create fail check check create complete raise resourceinerror exception necessity create resource resourceinerror raise heat try recreate stack thereforce test share create fail run second test check correct raise resourceinerror check create complete also refactor way test share create unknown status changeid iabdacefdffecfbedbac 
__label__integration __label__objective  test masquerade compute api test validate instance security group associations however its convenient place create instance complement things depend behaviors be move slat irrelevant remove novanetwork meantime closer test bits exercise way follow patch changeid ifddcdafdaddbbffffcd 
__label__objective __label__quality  work collect verify planfile content cause appcreate code bloat approach reduce complexity changeid iaffdedccdce 
__label__objective  change split conductormanager do node deploy new function validate node start deploy small behavior change validate fsm action possible make change previously end potentiall modify node changeid iafdfdcfeabfe 
__label__objective __label__testing  rt refactor test dupe filter unit test testmoveclaim test dupe filter unit test poorlywritten unit test actually isolate particular piece code test properly assertion make prove filter code actually work patch refactors unit test testmoveclaim testupdateusagefrommigrations test case class isolate area test code function question put assertions unit test actually verify correct migration filter any migration changeid icffeccadfea 
__label__objective __label__quality  simplify postrun play deployers want gather log machine simply shell script zuul playbooks postrun define multiple time inherit job oshinfrafunctional postrun definition move base job finally gather log once avoid ssh issue previous log gather remove job script convert changeid ieffffbcdbbe 
__label__objective __label__quality  sevral similar logics handle microversioning cinder api wrapper commit refactors introduce cinderclient with feature function parent commit fix bug introduce logic easy backport fix changeid iecaedaebfafca relatedbug 
__label__integration  patch modify parameters name admintenant inc changeid iceadaacbcfeaaaaeb 
__label__objective __label__quality  commit refactors opendaylight ml mechanism driver handle race condition sync issue attempt address atomic thread synchronization model track sync retry success fail state neutron object send opendaylight partially fix bug changeid iaabadeebb 
__label__objective __label__quality  commit change follow fix nova qpid module path fix bug cinder zeromq rpc point nova module add zeromq set heat rpc work base work isaku yamahata yamahata valinux co jp changeid iebfbefad 
__label__objective __label__quality  call qemuimg version version qemuimg directly patch code readable simple trivialfix changeid idcdeadcdcbebacb 
__label__integration __label__objective __label__testing  api test dont use api test creation event focus that test api class test middleware move back changeid ifefcadfbaffdfa 
__label__integration __label__objective  refactor test server cfn init access stack output use new wrapper get stack return request output provide useful function test parse stack output longer need stack test server cfn init remove get duplicate check create complete changeid ifdacbeebecfcfee 
__label__quality __label__testing  check data table service data reusable changeid ideaffcdbaabdffdcd 
__label__objective __label__quality  bug patch remove iteration get port extend dict bind use unify way plugins kind stuff ml enhance bind different bind port accord port host mlnx exception dynamic bind info changeid iaebeaeffabfe 
__label__objective __label__quality __label__testing  patch set implement new action class shipyard improve shipyard handle action internally refactor surface level shipyard functionality remain unchanged goal refactor eliminate repeat code increase test code coverage help simplify future shipyard feature action code unit test code coverage shipyard airflow unit test coverage prerefactor miss statements postrefactor miss statements changeid ibffcdeacfadfafbb 
__label__objective __label__quality  method approach complexity limit pep gate refactor allow continue make change changeid ifdbdfecffbcfe 
__label__integration __label__objective __label__quality __label__testing  segment storagerelated operations rest inventory management tool support better maintainability testability future support alternate storage options changeid iaaaacfcbad 
__label__objective __label__refactoring  color store module output color factor separate utility function state color map implement dictionary instead multiple conditionals signedoffby jiri podivin jpodivin redhat com changeid ifcdfdddecceeadcd 
__label__objective __label__quality  registernodesdialog connect registernodesform use selectors action creators access form state registernodesform use reduxform list node form fieldarray add horizontal field components use reduxform upload nod file extract separate component use reduxformvalidators provide validations field update driverfields components reduxform add fieldset component change nod registration logic function handle form submit replace thunk action simplify work reduxform return promise reduxform expect validatenodes mistral action call explicitly act standalone server validation register nod workflow successfully start form reset app redirect nod page registration continue logic prepare work individual nod introduce subsequent patch implement blueprint uireduxformmigration changeid idfbfbdebafadbcdd 
__label__objective __label__quality __label__testing  use ssh manager instead context manager remote delete remote variable function methods execute master node necessary change accept cli test test cli base create backup reset restore and deploy via cli test changeid ibafffcfccfb closesbug 
__label__objective __label__quality  if else check choose right function conduct vif operations better set alias vif type getattr nessesary function obj enter commit message change line start changeid ibbafdebdcfdaeda 
__label__objective __label__testing  workinprogress commit change aim remove blanket skip test volume test first test change problem class skip succeed implement code necessary determine volume endpoint version ensure volume present skip test skip current practice changeid iadeccdcabfbff 
__label__refactoring  changeid iccdcebfebfedaab 
__label__objective __label__refactoring  minor refactor wsgi py minor refactor code file suggest termie henry review comment fix bug changeid icddfdfdbabadcc 
__label__objective __label__refactoring  introduce new function umount all partition reduce size install grub changeid idbdfadaecabfccba 
__label__objective __label__refactoring  behaviors refactoring glange default functionality image creation value tag protect visibility default set glance changeid ifbbdfbdefdbfccdeb 
__label__quality __label__testing  pull duplication setup test function setup instead changeid icbffdbdbbbefbad 
__label__refactoring  small change fix spell issue log mistake simplify small function changeid icdbbaddfbddeeebede 
__label__objective __label__quality  spec helper file cargocultcopied puppetlabs puppetopenstack modules adjust slightly infras particular need hard read make adjust hard hard review refactor move code name function condense main setup code loop host list changeid iadcdecafcbeca 
__label__objective  revert commit aefffbbfedfdea refactor break rpclient api closesbug conflict oslo message rpc client py changeid ibabefaaddfdb 
__label__integration __label__objective __label__testing  refactor libvirtvolumedriver test step attach detach volume add test changeid ibecbadafdfbbcffbb 
__label__objective  switch time sync prefer chrony client instal here refactor slightly setup function rather timer start function like setupy thing do iecbcfaddccdbfc chrony install systemconfig changeid idbdaceaecafcbecc 
__label__objective  currently use vm snapshot resize fail volume attach vm support snapshots change use vdi snapshot instead vdis attach nova need xenapi detach reattaching volumes migrations revert migrations fix bug changeid ieacdeecbbe cherry pick commit eabaedbcdfeadbc 
__label__integration __label__objective  change extract get stream funct for function like support tar gz compress raw image stream function different plain ones relate blueprint xenapisupportedimageimportexport changeid idabacdeffedacafae 
__label__objective __label__testing  add vm connectivity check test vms subnet add vm connectivity check test vm resize changeid ibefaacebdcdddea 
__label__objective __label__testing  webui test refactoring bunch test creation deletion apps appincubator remowed change ui form appincubator lead failure muranoci job avoid intersection change repository test remove lately create test application test changeid icaccaedbbedfcf 
__label__objective __label__quality __label__testing  refactor test dbaas py user testcase member refactored test dbaas py change instead variables test function testcase class inherit user member usable test close bug changeid icaebdfcdbdbbccfc 
__label__objective __label__testing  preparation work share unittests easier changeid ibdfdfcfacbbbb 
__label__objective __label__testing  change test check oswl stat function get oswls by resource data closesbug changeid ibfbababccdca cherry pick commit adaaedbcfbbbffadddae 
__label__objective __label__quality __label__testing  test miss attribute actually test null value miss key able explicitly provide alternative result hacky workarounds avoid simply expose kwargs reasonable default test redundantly assert expect response status handle test framework changeid icadbbcfcaefefeafa relatedbug 
__label__integration __label__objective  number methods api object handle request specifics create event method api test independantly middleware changeid iefebfafcdabbaee 
__label__objective __label__quality  float ip local controller local port add need assocaite floatingip add local port aslo change code readable changeid icbefbffdfcafb 
__label__refactoring  bug changeid ifcbaeabbdae 
__label__quality  fuctions read astute yaml directly break lot things function use data provide arguments rallyid us changeid iefaddbaddfffafbdededb 
__label__objective __label__testing  refactor compute controller index start refactoring compute controller methods long add better unit test actually unit test functional test changeid ieadfbdddededfb 
__label__objective __label__quality __label__testing  previous command leave getattribute definition model oneviewobject enter infinite loop call argument isnt attribute map instance im remove legacy test shoudnt remain code refactors duplicate code from json methods changeid ibddecccdcc 
__label__objective __label__quality  patch remove drush site build function groupsdev instance directly fetch release tarballs repository advance multislot deployment architecture prevent typical drupal wsod issue randomly cause site malfunction request arrive installation simplify deployment step standard drush aliases drushdsd extension support local configuration variables local settings php file changeid iaedbfdbfeebcfe 
__label__objective __label__quality  add condition format validate parameter function fail pep validation complexity go limit separate constraints base make it simpler changeid iaacdfceeaaafeccebddd 
__label__objective __label__quality  string repeat code constant form refactored global configuration change handle function enhance code readability changeid idecdaabefabaedfdd 
__label__objective __label__quality __label__testing  unit test sh lot duplicate statements commit introduce run test function clarify differences selenium test sh update clarify positional arguments use direct usage easy understand changeid iefadbcbddaaddad 
__label__objective __label__refactoring  minor refactor code file suggest termie henry review comment fix bug changeid icddfdfdbabadcc cherry pick commit fdcfacadfcdbcfcdec 
__label__objective __label__testing  fakevolume class add fake py volume patch refactors volume command unit test fakevolume class changeid iccadbffdfaeeacabb 
__label__objective __label__quality __label__testing  patch refactors monasca role bring consistency openstackansible roles main change include install service specific cointainer monascathresh monascanotification monascapersister instal configure be tempest test run monascaapi service fully functional add documentation extras directory contain change necessary openstack ansible setup monasca changeid ibdcbaaccdfbeba 
__label__objective __label__quality __label__testing  remove duplicate code closesbug changeid idbbccdecbcadffdfdd 
__label__refactoring  unfinished fuelclient refactoring package structure implementation ideas lot work function changeid icefafbdeacfccbabaaed 
__label__objective  currently override need update resources replacement require base tmpl diff prop diff patch refactors add specific function need replace need replace with prop diff need replace with tmpl diff overidden require changeid ibefceedbcddfdeb blueprint stackupdaterestrict 
__label__objective __label__quality  downgrade assignment table complex keystone refactored embed function out allow maxcomplexity reduce changeid iaebfcdaecca 
__label__objective __label__quality  wip patch move code relate yaql jinja specific modules isnt module work both make easier understand code relate technologies work custome builtin function yaql jinja separate module its easier whats relate expression framework whats integration part function themselves rename base module expressions similar package style change changeid ifabcedfaedc 
__label__integration __label__objective  simple refactoring contrib test network test order easier share unittests api follow changeset partially implement blueprint vonvapi changeid ieacdaabacdcceaafbaddc 
__label__objective __label__refactoring  bug fix and contain functional change bug stable diablo fix master changeid icaddecfbaaebbaa 
__label__objective __label__quality  init instance resume guests state complex relate patch necessary refactor new method relate patch attach comment changeid icbbbcebaccbfafdf 
__label__integration __label__objective __label__testing  refactor integrate test refactors integrate test class api test actual test add changeset partially implement vapiunittests partially implement vapispecification changeid icdbcbcaccabefbc 
__label__integration  changeid idfedfddffbbf 
__label__objective __label__quality __label__testing  review helper method identify duplicate patch move code common location update users use new version theres functionality change patch refactoring changeid iacbffbdafdd 
__label__objective __label__quality __label__testing  addition function get request object data remove repeat line methods refactoring partially affect line code mostly deletion code line aspects remain refactor more bug action item track review comment raise steve kowalik changeid icfcfbedddebaeafd partialbug 
__label__objective __label__testing  patch refactor rsync unit test changeid iaebecfecdda 
__label__refactoring  preparation skopeoimageuploader wont need create docker client operations changeid idcfaddcecccbadfabf 
__label__objective __label__testing  add update case method testrail client pull parse custom case field get custom case field method add get field to update method test case uploader change log message uptodate case add new file datetime util py add method convert duration testrail estimate format register new file doc testrail rst change duration regexp pull compile instance pull test discover test plan creation create test plan from registry function pull case check be case processable function pull test case getter action get test case name function pull case not include verification be not include function pull case exclude verification be exclude function pull docstring getter action get docstring function pull docstring parse action parse docstring function add support multiline title test case step changeid ibebabdfbedaddb closesbug cherry pick commit acdadbfdbeaeaaddfdc 
__label__objective __label__quality __label__testing  im replace implementation notifications blinker library order properly want define interface couple test test unaware implementation thing test implementation change later changeid icdcbfbcbbfbaac 
__label__objective __label__testing  rpc api test definitely need refactoring different implementations testcase go its direction test case arent assert lot little possiblities write test commit initiate refactoring effort simplest api backup move test case generic cinder test rpcapitestcase class enhance check there follow commit repeat efforts scheduler volume rpc apis changeid iededdbeae 
__label__objective __label__quality __label__testing  neutron instead nova segment type choose env var neutron segment type vlan default context manager ssh sessions assert cluster ready call remove assume network verification ostf check changeid iebacfebddfbdad closesbug 
__label__integration __label__objective __label__testing  add expect attrs none call self compute api get add expect attrs none setup mock test case patch aim share patch test case test case port patch follow partially implement blueprint vonvapi changeid ieabcccefdadeb 
__label__integration __label__objective  wip glancescrubber pendingdelete image clean tool admin actually need authentication all patch remove relate registry logic let glancescrubber visit db directly changeid ifbbaacdfb 
__label__objective __label__quality  deploy utils module code share deploy methods function specific iscsi deploy changeid iccfedfdfdfdfdbbbdbd 
__label__integration __label__objective  wip refactoring methods db model preparation optimize api layer need rid redundant data coversions like db model dict rest resource directly db model rest resource changeid icfdcececbefabfaf 
__label__objective __label__testing  add function upgrade master possibility choose rollback refactoring test case use upgrade master method changeid ifefddfaacfada closesbug 
__label__objective __label__quality __label__testing  change novanetworkmanager neutrontun test case add readd cinder compute cinder ha cluster add compute node cluster ha mode flat novanetwork check ha mode scalability backup restore master node cluster ha mode optimize code change repetable code function neutron tun case new file neutron public network case new file changeid iedcabbfeaafefdaafde relatedbug 
__label__integration __label__quality  refactored variables pull method call variable boost readability changeid ibbaabfbeecbcce 
__label__objective __label__quality  function create keystone auth plugins saml reuse federation protocols support future propose move keystone contrib federation utils changeid iddaafeeae 
__label__objective __label__testing  fix bug add common function test list resources resource list changeid ibffcbcffbddb 
__label__objective __label__testing  add test case spawn ensure correct methods call partial blueprint vmwarespawnrefactor changeid iafeabfacddddaed 
__label__quality  need expand validation code include branch continue grow logic large function start split up changeid iebfeccebbdceedee signedoffby doug hellmann doug doughellmann com 
__label__integration  wip currently rest api start action plan watcher update action plan patch action plan need easy understand post action plan action action start case changeid ieaaddafbbeadba closesbug 
__label__objective __label__quality __label__testing  factor common allocation check code functional test case nest provider tree aware prepare servermovingtests class reuse nest rp tree nest allocation environment changeid ifaadbbeabcfdac blueprint usenestedallocationcandidates 
__label__quality  todo verify zuul change id add new playbook reuse infra roles maybe complex compare standard approach changeid ibbaeedccbffbfefead 
__label__objective __label__testing  refactor timeout policy test changeid iabeaadbfacfa 
__label__integration __label__objective __label__quality __label__testing  refactor hitachi block storage driver fourth patch drivers support fc iscsi protocols drivers storage interfaces name horcm snm drivers support kinds drivers code horcmfc snmfc snmiscsi hard maintain present code refactor code drastically submit follow patch refactor base libraries delete exist test driver break exist unit test refactor snmfc drivers base libraries change refactor snmiscsi drivers base libraries change refactor horcmfc drivers base libraries change patch one class relationship patch follow upper class hbsdfc class inherit volumedriver class class hbsdcommon hbsdcommon class common methods horcm snm hbsdhorcm hbsdsnm class inherit hbsdcommon hbsdhorcm class characteristic methods horcm interface hbsdsnm class characteristic methods snm interface hbsdhorcmfc class inherit hbsdhorcm hbsdhorcmfc class characteristic interfaces horcm fc hbsdsnmfc hbsdsnmiscsi class inherit hbsdsnm class characteristic interfaces respectively changeid ieeadadecfcdeaad implement blueprint refactoringhbsddriver 
__label__objective __label__refactoring  calculate batch size separate function independent resource itself suitable move library changeid ifeaabfdfffb 
__label__testing  patch refactor create delete server with instance update functional test changeid ibcfaeccafffebefadedbd 
__label__objective __label__quality  method efficient query novaconductor once limit fallback instance query host only preparation fix bug changeid idefffdacfffddb 
__label__testing  changeid ifbddabededfdadead 
__label__refactoring  better use meet object refactoring function apply object methods clean superfluous argument value copy cli py well changeid ibcecceccbbadfda 
__label__integration __label__objective  patch refactors placement api class generic service class service package management simple note fix incorrect stop httpd service nondebian system conflict manifest api pp backport note backports doesnt include deprecation shouldnt deprecate parameteres stable branch changeid ifbaadddcb cherry pick commit fbcbaefcbce cherry pick commit dbafccbfde 
__label__objective __label__quality  instead pass repositories constructor controller class factory function call changeid ibffecbcfcdffca 
__label__quality  merge exception remove unused exceptions humanreadable view changeid iabfaaadeefcfaacbabe 
__label__objective __label__quality  patch refactors vdu server profile kill pep errors reduce network validation complexities it reach changeid ibfbdabfcccceaeea 
__label__testing  complete resolution function snippet specify individual function resolution methods call changeid ifadaaebdada 
__label__objective  ancient stable branch support get node vifs let remove unnecessary check changeid ibbeefbdcecacccedb 
__label__objective __label__testing  changeid iadbfaeeeabeaaff 
__label__refactoring  function start service corosync upstart module command upgrade controlplane py module util maintenance py changeid iadebfdbffccabeabc 
__label__objective __label__quality __label__testing  refactor router delete process discussion indicate lead orphan items error case refactoring replace optimistic approach follow separate delete code path execute operations place namespace remove operations place outside namespaces perform ensure orphan items result comment add functional test explain case test conversation start conflict neutron agent dvr edge ha router py neutron agent router info py neutron test functional agent test dvr router py changeid iffbbaacedbf signedoffby ryan moats rmoats us ibm com cherry pick commit fdcebacafebfab 
__label__objective __label__testing  patch change functionality argument parse function easier test argparse test standard library args function theoretically exclude include simple test provide coverage need introduce possibility skip code add later changeid ieecaefefccbadedac 
__label__testing  changeid idaadfeaacfaabfe 
__label__integration __label__testing  description collect resources attribute expand cover different versions api os components correspond statistics utils function update support new format unit test update expand changeid idffbefefebcaecbf implement blueprint openstackworkloadstatistic 
__label__objective __label__refactoring  function useful hardwaremanager interact disk subclassing generichardwaremanager ideal hardware manager interact specific devices changeid ibeacaeacfbb 
__label__integration __label__objective  refactoring db transaction component ensure autonomous db transaction create new cluster db read write access call db model db api update db unit test test model composition db api test add separate commit changeid ibbeaadacaaeeccfabafbaf 
__label__integration __label__objective  remove direct post api add evacuate server helper changeid ifcfadbcbfcddeefcbca 
__label__integration __label__objective  api method write manila perform policy check relevant policies etc policy json method authorize introduce manila api openstack wsgi py commit efecacfecabcc perform policy check patch refactors authorize method decorator consistency easy usage apis choose implement policy check prior core logic prior unit test modify apis impact change changeid ibeabffcfca closesbug 
__label__integration  wip refactor lports northbound api methods changeid ifaffabaeceeffbefacbfead 
__label__integration __label__objective __label__quality __label__testing  refactor hitachi block storage driver second patch drivers support fc iscsi protocols drivers storage interfaces name horcm snm drivers support kinds drivers code horcmfc snmfc snmiscsi hard maintain present code refactor code drastically submit follow patch refactor base libraries delete exist test driver break exist unit test refactor snmfc drivers base libraries change refactor snmiscsi drivers base libraries change refactor horcmfc drivers base libraries change patch nd one class relationship patch follow upper class hbsdfc class inherit volumedriver class class hbsdcommon hbsdcommon class common methods horcm snm hbsdhorcm hbsdsnm class inherit hbsdcommon hbsdhorcm class characteristic methods horcm interface hbsdsnm class characteristic methods snm interface hbsdhorcmfc class inherit hbsdhorcm hbsdhorcmfc class characteristic interfaces horcm fc hbsdsnmfc hbsdsnmiscsi class inherit hbsdsnm class characteristic interfaces respectively changeid ieccbfabdbdcdbffefaaefb implement blueprint refactoringhbsddriver 
__label__integration __label__objective  change perform refactoring remove internal db dpenedency eswitch db device db remove libvirt dependency altoghether introduce embswitch object manage port operations embed switch introduce eswitchmanager object manage muliple embeddes switch spearate infiniband specific functionality utils module eswitchd api modify use pci address port identifier reduce mac address dependency changeid iffdeefbfacdcbaddfa 
__label__testing  dependson icadacafbbecfcad changeid ibffadedaddcdfbe 
__label__objective  order support senlin driver vnf autoscaling management need add autoscaling backend switch function openstack infra drivers source cod inner methods difficult read feasible change difficult test patch refactors source code step changeid ibddcfcdaefabecfbfda 
__label__quality __label__testing  addition function get request object data remove repeat line methods recheck bug bug action item track review comment raise steve kowalik changeid ibffbdaeaabceede partialbug 
__label__objective __label__testing  dockerfile build once run time mean docker config pass env variables follow principles factor refactored web interface run test env add kick py script run docker web app cherry pick basic docker buildthenrun logic changeid ibaffeecaeccbd confirm theyve source credentials changeid ibecbcfdfcdfebc cherrypicked change use env docker test run changeid iadeceebcdefceda test execution use env variables argparse changeid idcfbaefbafaddfcab kick py need app context changeid ifeeeeffceddff 
__label__objective __label__testing  function reorganise break function deal file handle allow better unit test prepare get file use function changeid idcfcdabe 
__label__quality __label__refactoring  function get cfg file db actually return table rename backendagnostic changeid ieaecbebedeafcac 
__label__objective __label__refactoring  main step split function add error handle changeid ifaeaeffea 
__label__integration __label__objective __label__quality  ethercalcrelated code db module start make lot complex changeid iacbbeecffbbbfdcfcaed 
__label__objective __label__quality  currently metadata parse dict split metadata place better refactor common function readable easier use future changeid ibfcaacdbefcdcbecccfbefc closesbug 
__label__quality __label__refactoring __label__testing  add unit test model avoid default method arguments mutable value simplify object serialization unserialization model object selfcontained use global function hardcode specific image metadata code rename os key standard image meta key os image meta store db backward compatibility changeid iedeaaaecfbdebee 
__label__testing  wip changeid icaefafcccbb 
__label__integration __label__objective  add task object api handlers refactored changeid iffcbcacaaebdfdaacf 
__label__objective __label__quality __label__testing  long rambly its need unittesting split class test input output sensibly changeid idfebfaafaebbeb 
__label__objective __label__quality  patch refactor config py remove duplicate functionality also add argument pass tempestconfig allow future change config cli arguments changeid ibbedfaedababbebbfc 
__label__objective __label__testing  previous neutron worker refactor break networkingovn revert patch set test update refactor ensure doesnt break networkingovn again changeid iddedeeecfbeaeedb dependson iaafdeefdcdf 
__label__integration __label__objective __label__quality  patch make scheduler stats api cod readable maintainable changeid iaebeabcdeeecbaedcc 
__label__integration __label__testing  interface api unit test refactored use basehosttestcase class story task changeid ibcafacdbbeadd signedoffby teresa ho teresa ho windriver com 
__label__integration __label__objective  source patch remove patch add support wrs install uuid dhclient script add script copy content dhcliententerhooks follow script part hook script hook exist etc however hook file exist etc dhcp folder call sbin dhclientscript well id like use dhcp config package creat etc dhcliententerhooks soft link etc dhcp dhcliententerhooks dhclient script need add patch supportdisablensupdate patch remove fix port conflict issue deployment test pass relate script file check pass story task changeid ifaeadcafbccfaaaec signedoffby zhipengl zhipengs liu intel com 
__label__objective __label__quality  currently check example test functional compute sum error tell developer difference sum confuse error prone lead false positives sum correct exact number medium high different case test test xml test secret config option changeid icdfbcaaadfddb 
__label__objective __label__quality  originally raw cache feature enable stxglance upstream cinder raw cache feature refactor code leverage this patch things add parameter cinder raw cache gib system storagebackendmodify get generate tenant id sysinvconductor tenant id cache size cache switch yaml file update puppet file write information cinder conf verification do verify code starlingx storage dedicate deployment run system storagebackendmodify cephstore cinder raw cache gib verify cinder raw cache gib add db table storage backend field capabilities verify tenent id internal project id internal user id image volume cache enable image volume cache max size gb add tmp puppet hieradata system yaml verify info add etc cinder cinder conf verify starlingx run system cache feature enable volume cache matter big cache size specify starlingx cinder pike version bug verify community version openstack info cinder conf work expect cinder cache feature story task changeid idefaacadeccdea signedoffby liang fang liang fang intel com 
__label__integration __label__objective __label__testing  remove job ansiblerolearaapifedoradistributedsqlite replace araapidistributedsqlite job test support distribute sqlite database backend fedora ubuntu simultaneously allow addition centos future changeid ibfdefedacbeadc 
__label__objective __label__quality  commit encapulate cdh plugin config helper class better extensibility change config helper create sahara plugins cdh config helper py general part confighelper provide instance confighelper minimize change outside remove function prepare value use lambda instead add method load and init configs load file convert dict config object long string file change outside config helper change mudules depend config helper import config helper config changeid icccfacaaaedae 
__label__refactoring  changeid ibeafeddfcedaacadceeae 
__label__objective __label__quality __label__testing  test suppose prove pass exist flag update stack merge exist parameters new ones pass update atm strangely start stack contain zero exist parameters use convolute mock prove new parameters use afaict its test require its pretty hard read refactoring look environment pass stack constructor mock mock enable compare before parameters ensure exist new ones correctly combine expect changeid iadfdfccfdacafd 
__label__integration __label__objective  commit small refactor xenapi glance plugin remove use locals improve readability changeid ideacfffdccdaff 
__label__objective __label__quality __label__testing  patchset combine test group update with few field test group create update get exact update scenario second test test group update with few field update field check field remain unchanged unique test case niche shouldnt test case combine test group create update get patchset add better comment add assertions check domain id group correct changeid ibaaccddfdbdcbaa 
__label__objective __label__quality __label__testing  refactor remove duplication test code changeid ifbebefacba 
__label__objective  muranotype muranoobjectparametertype smart type merge single smart type functionality overlap large degree new smart type call muranoobjectparameter smart type rename pattern thisparametertype thisparameter interfacesparametertype interfacesparameter muranoobjectinterface instead say obj data propertyname syntax obj properties propertyname changeid icdbaaacaecfa 
__label__quality __label__refactoring  wip code paths thing code paths thing support region name not move functionality single function prevent happen future refactored make client create connection remove unused sdk py changeid ibbceafbedcfdbf 
__label__objective __label__testing  add functional directory store functional test add unit directory store unit test move fixtures functional directory changeid icbccbacccceecb 
__label__objective __label__quality  block device handle somewhat complex especially take things like md lvm encryption account patch refactors creation local loop image changeid ibaeeaeeebcaafcfcb signedoffby andreas florath andreas florath net 
__label__integration __label__objective  patch follow remove unused db api change sdn journal data text add monitor state sdn journal state add api row monitroing state changeid iaceeddadcccedfadccd 
__label__integration  patch refactor ips api error log message format add server id log message changeid iecbfecbeafbadeadfd 
__label__integration __label__quality  deduplicate code test instance py test volumes api py update test attach volume method add method wait for volume status base py add method get volume property base py changeid ieeabedbccf 
__label__objective  move project domain logic function inside plugin object changeid iaacbfaecfeddecc 
__label__objective __label__quality __label__testing  change refactors pinger class by remove testcase attribute order reduce couple testcases pinger instance define client namespace pinger init instead assert methods its require daughter change changeid iaefbcaaabcdbfbbcfccb 
__label__objective __label__quality __label__testing  consolidate unit test fake interface global instead implementations fake interface use share globally define implementation use create old net instead write dict add subnet id property fix ips fake interfaces use network instead deprecate uuid relatedbug changeid ifaebcfccbbbdeeccdeaf 
__label__objective __label__testing  use ddt share instance tempest test use list share instance instead get instance of share trivialfix changeid iaebebbafabefc 
__label__quality  patch refactors instance reservation id reservation id code readability changeid iebffcadadfeacdf 
__label__quality  wip changeid ibcdaccdeefcaadbeec 
__label__integration __label__objective  helper methods plugin notification setup previously define neutron test base basetestcase import require support helpers prevent api test consume tempest configuration conflict result neutron tempest change move helpers new module test unit basetestcase safely type test implement blueprint neutrontestingrefactor changeid idbcdadafba 
__label__objective __label__quality  handle ssh key know host relation novacompute units unit pass utility function purpose unit param derive consistent remote service string create pair associate know host authorize key file however its obvious do read code patch refactors function remote service param pass benefit make clear its remote service unique for know host authorize key optional user param derive remote service reduce where possible changeid ifefbbbeccaecb 
__label__integration __label__objective __label__quality  refactor manila shareinstanceexportlocations api patch make shareinstanceexportlocations api readable maintainable changeid ibbbefcfcaefecb 
__label__objective __label__quality  code relative action move respective job object factory function create correct type job object accord action request replace long if chain main loop main loop call job object execute method changeid iecacfebafbdddc implement blueprint freezermainrefactor 
__label__integration __label__objective __label__quality  wip present interfaces service data manipulate admin interface novamanage extensions contrib service py servicegroup api layer have different interfaces manipulate source truth lead severe data inconsistency useful store nova service proposal follow common path interact service data interfaces mention above common path servicegroup layer whos primary purpose manage check service liveliness help overcome tight couple nova service database consistent view service data service liveliness etc changeid iecbaffbaddfaa implement blueprint servicegroupapicontrolplane 
__label__objective __label__testing  ilovalidateparameterstestcase test create node test function change move setup base commit icdeaacccbdfdbe changeid ibccbfaefdbdaffefa 
__label__objective __label__quality __label__testing  change test ha one controller base use neutron change test ha one controller use neutron deploy ha one controller vlan test delete duplicate deploy ha one controller neutron changeid ifffecefddcccacfd closesbug 
__label__integration __label__objective __label__quality __label__testing  segment storagerelated operations rest inventory generation management tool support better maintainability testability future support alternate storage options operations manage py slightly update use common code changeid ifbccedeefcecbaffdbaf 
__label__objective __label__quality  function refactored build ipset non ipset iptables rule separate function partially implement blueprint refactoriptablesfirewalldriver changeid iddabfbddeebdfbfef 
__label__integration __label__objective __label__testing  change address old technical debt refactoring stag relate interoperable image import utilize locations mechanisms track user stag data process handle stag host location metadata preparation distribute image import tht need track host user image data stag avoid share filesystem service nod hide stag host api user select stag loction direct url provide api address beofre merge remove refactoring test skip irrelevant likely code test remove say modules fix test skip break need eye break rely code test module mock rest additional api test insecure deprecate locations api locations present changeid ifdeeaadeaebcbe 
__label__objective __label__quality  remove verifiers directory code readable reduce unnecessary complexity changeid iecbadfdeadbbcc 
__label__objective __label__refactoring __label__testing  changeid ifeceeafbcfcadbdeabebf 
__label__objective __label__quality __label__testing  new snapshot module code vss lvm backup py create snapshot remove snapshot module contain code relate shadow vss new snapshots new openstack module code osclient restore backup backupos module contain code relate cinder nova backups new utils module code utils win utils bandwidth config exec cmd validator stream module containd code relate extract module new test modules snapshot utils openstack apiclient test scheduler daemon locate scheduler module backup py delete code place openstack backup backupos job backupjob changeid ibbacbcfbdcfdd 
__label__objective __label__quality  current cleanup mechanism awful its hardcoed repeat failures contain lot mistake place fast in case deletion vms slow like deletion users mix cleanup mechanism resource cleanup mechanism resolve issue patch introcude cleanup engine resolve issue above its resource base add new resouce subclass base resource probably override methods like list delete be delete thats all complexity manage wait unit async deletion finish repeat failure logic greaceful failure handle parallelization plugin support hide deep inside cleanup engine bonus able specify single resource without clenaping service add new generic cleanup engine fix bug broker queue multithreading access add retry method rally utils allow repeat time method failures bp benchmarkcontextcleanuprefactor changeid iffbbbbdffdeefafb 
__label__objective __label__quality  cyclomatic complexity sync bay status greater hard comprehend patch reduce complexity make task open refactoring maintence partialbug changeid ifaabbedbcbd 
__label__integration __label__objective __label__quality __label__testing  manila cdot driver single file exceed line contain multiple things driver code protocol helpers zapi invocation code options split apart allow easier maintenance readability add potential code share reintroduce mode driver add singlesvm cdot driver etc recently refactored netapps dot cinder drivers layer structure interface library client api separate concern achieve goals set forth above commit satisfy plan thing manila implementation step be update directory structure match cinder netapp drivers create driver interface shim driver code library with base cmode class allow mode code share later protocol helpers separate file already organize base cmode class split zapi code client layer with base cmode class allow mode code share later implement netapp driver factory cinder implement common netapp options file cinder implement cdot api optimizations update unit test need note patch appear treble total number code line addition unit test plus large fake controller api data fee api client test implement blueprint netappmanilacdotdriverrefactoring closesbug partialbug closesbug closesbug closesbug changeid ifcdadfafaaccfce 
__label__objective __label__quality  clean refactor identity docs bug changeid ibeecceebdaeaf 
__label__integration __label__objective __label__testing  unit test coverage odl driver refactor review partially fix bug changeid iffdafaabbfdcfe dependson iaabadeebb 
__label__integration __label__objective  refactored unittest build code api focus behavior define method name add new launch api unittest build workflow worker api signature cleaner add test info build info dicts changeid icaaaedbdfdcbf 
__label__integration __label__objective __label__quality  refactor file read reader context manager ahead diskfile refactoring work define yet internal api see refactor diskfile create diskreader class akin diskwriter class allow encapsulate file read implementation detail also refactor diskwriter reference threadpool disk file field misc exception syntax use as changeid iefbbeaadabfffcfdabfac signedoffby peter portante peter portante redhat com 
__label__quality  static path code refactored improve readability subsequent patch add support baremetal vnic type changeid ifdbbccbbfaaffcfd 
__label__objective __label__quality __label__testing  test methods test compute pollsters test diskio py look similar cache different patch add class atrribute name cache key reduce methods one changeid iaadbdcbaeebbaeba 
__label__integration  add refactor neutron restful api refactor resource map driver neutron restful apis changeid ieaadbecacbf 
__label__quality  change refactors arg build logic contain dedicate function docker run docker exec instead split main loop docker arg map minor change behaviour dont affect test include longer force ascii encode arg value extra check ensure command list extend cmd remove unicode emptystring list value check changeid ifdeedeadaafebba 
__label__quality  patch move unility function relate nova call base class changeid iebfdceebaefebadeca 
__label__refactoring  changeid ibdebbecfcdfdd 
__label__objective __label__testing  break basic smoke action test class prepped fixtures drive data generic test todo patch break singe test method test class distinct test methods changeid iabdbeaddbffdfbba 
__label__integration __label__objective  apis call compute manager use instance uuid now allow refactor cast compute message use it remove extra db lot case instance object pass instance uuid cast compute message host look object again changeid iaefcabcacbbcdcbff 
__label__objective  changeid iabecadcdceabaecbf 
__label__objective __label__quality __label__testing  prior change cli usage hardcoded config opt fixture test cli usage describe require positional arguments actually argument parser foo bar instead validlooking usage description trouble cant extend argument parser additional real arguments test configuration arguments inspect real usage help output argparse example unit test assert argparse configure correctly oslo config theres simply way know usage statically set arbitrary value foo bar patch move specific unit test coverage override usage arbitrary dedicate unit test remove arbitrary usage unit test instead unit test assertions argparsers real configuration options like configdir configfile appear test options include instance cfg configopts changeid ibadafcbdfacbda 
__label__objective __label__refactoring  simplify convention class move special name process code specs possible special function suffix conventions apply to example prefix name do something remain intact prefix name do something convert prefix name dosomething later implement properties changeid ibcbccbfafbdcefb 
__label__integration __label__objective __label__testing  remove job ansiblerolearaapiubuntumysql replace araapimysql job design single database server multiple api servers different linux distributions order test coverage ubuntu fedora soon centos changeid iacfbeebceca 
__label__objective __label__quality  patch add new function get phys port name read physical port sriov port get phys switch id read physical port switch id sriov port addition refactoring get representor port use new function decrease call get pf func netdevs associate pf process loop match phys port name ensure correct behaviour addition update unit test linux net remove need mock relatedbug changeid ifdbeafcbebfdadaeccafba cherry pick commit fbedafeebef 
__label__objective __label__testing  wip changeid iceedeabacfbadcfab closesbug 
__label__quality  reduce complexity group check changeid iabdbdcbbebaaebfeeb 
__label__integration __label__objective __label__testing  pass test run osx stub kernel fact test wait cycle start thread reimplement netrings properties gather ruby class changeid icbcebdffdbbbeae closesbug 
__label__objective __label__testing  add order assertion partialbug changeid ieccefecbfbeebacbed 
__label__integration __label__quality  patch couple things remove dependency nova rpc nova flag step decouple nova rpc rest nova move openstackcommon refactor nova rpc configuration object pass need instead depend nova flag flag avoid change nova rpc api possible exist usage nova rpc touch so instead config object get register cache pass rpc implementations need get rid global config reference nova rpc require change public api want avoid better reason this changeid iafabdcedceefefbe 
__label__objective __label__quality __label__testing  come review comment change cebcbdbcebcfabcbad test move arent relate operations shouldnt servermovingtests class move separate class use distinct fake virt drivers avoid monkey patch compute manager code functional test conflict nova test functional test servers py note mriedem conflict have change ccdcadeafec pike changeid ieddcecdbebddabfa cherry pick commit fbcbcfbefef 
__label__quality __label__testing  refactor tox reduce duplication update envlist run tox cli run vote gate test reduce duplicate definitions command remove reliance run test tox add locale paths set settings py tox manage makemessages function correctly document django settings docs havent duplicate docs changeid ifbddddcfdebaacfce implement blueprint enhancetox 
__label__integration __label__objective  give ovo work progress kind block miss support sqlalchemy query like first one etc helper method patch refactor get object order support one one or none query pass method argument object patch need ovo patch progress link below changeid iadafecaccaccabacf 
__label__objective __label__quality __label__testing  preparation support deploy glanceless undercloud change refactors upload command mqove glance interact logic glance adapter class allow adapter abstraction upload adapter copy file local disk change follow move repeat updateorupload logic adapter method reduce complexity take action clean mock usage consistently use patch decorator current approach cause unit test failures environments remove glancev implementation api remove newton support maintenance burden changeid iedabafedadbefcacfadcc blueprint novalessdeploy 
__label__integration __label__objective  api package create common store api base class request response class api validation schemas process request responses add follow patch changeid ibfffdeddacaedbb partialimplements blueprint crosstransportapispec 
__label__quality  patch refactors volume snapshot delete function split different helper function easier debug read maintain volume snapshot delete flow changeid idcfdffbdca 
__label__testing  add teaddown method cluster test fix method delete job executions changeid icbfdedabfddccecdedeab 
__label__integration __label__objective __label__quality __label__testing  separate network topology graph reusable networkspecific part reusable implement topologygraph directive take care initial render accord data provide data attribute rerenders content time data change scope provide onelevel group convex hull contain array node contain subnodes expose api controller customize reusable graph specific node glyphs size affinities callbacks etc specific network code place network topology controller include initial data transformations mark different nod different type server network extnetwork router work conjunction configtopologynode directive provide graph customization legacy code relate popups creation behavior copy networktopology js be work work here break break significant change original curvature topology graph code simplify data containers no usage function constructors type key object typechecking refactored group collapse expand logic intensive use js data join node hide collapse group move separate hiddennodes array nod group expand js handle rerendering stuff drawgraph method apply redrawing link hide nod refactored typedispatched render nod drawgraph use typespecific attribute in situation specific type style know advance selection filter function commit step angularizing topology graph merely claim current refactoring didnt break lot things things work network topology work feature fix be add test documentation ensure propose level directive abstraction work consumers workbook graph mistral workbook builder hot template graph hot builder possible stack topology exist heat stack implement blueprint curvaturenetworktopology changeid ifeddcbfaaecbc 
__label__integration __label__testing  scenario test need group class break allow interleave different part test gate finish reasonable time runners however need main group allow state preserve group feature creation runners refactored allow this module test modify use new paradym allow removal global varaibles runner dependencies test api remove changeid ifcbbceccbccffced partialbug 
__label__integration __label__objective  instance usage audit cronjob generate periodic compute instance exist notifications particularly scalable run server take longer number instance grow change move generation events periodic task compute manager add api extention administrators check errors generate events changeid iddccefdefaae 
__label__objective __label__testing  request check outside custom match use bug completely close patch refactors code use custom match far possible add check closesbug changeid icddabdceaeddfdabcbb 
__label__integration __label__objective  misc change include improvements oslo db clean db api layer alembic support db migration fix pep issue new code new api health verify new db api changeid ieddcbdfeadedbf 
__label__objective __label__quality  add function filter duplicate delete host case duplicate record present delete nod file changeid ibccceeedfedfdcdb 
__label__integration __label__objective __label__testing  order pass workload test cant skip networker roles upgrade controlplane once ceph osd case update ceph mon cause outage changeid iaffacacfbccedcebfb cherry pick commit dcdbbbfecad cherry pick commit cfbcccbdcabddfdecca 
__label__objective __label__testing  mon creation teardown test retested here changeid iecbbbdefcffda 
__label__objective __label__testing  extract base class api higher directory code scenario directory scenario base event rbac now normal test await event well admin test need promote credential connect admin client split nova glance test code individual file future add new code separately object storage middleware use base class scenariofieldguide changeid ibdcacdecfbaaaf 
__label__objective __label__quality __label__testing  change add constants trust id domain swift helper refactoring oozie edp workflows use proxy configs necessary add test exercise proxy domain usage workflows remove credentials requirement datasource model proxy domain prune duplicate mapreduce test add test datasource creation credentials partialimplements blueprint edpswifttrustauthentication changeid ifdcdcdedcdcb 
__label__integration __label__objective  advance task deployment feature deploy detachedkeystone middle controller deployment longer require separate database plugin consequence fix ceilometer deployment well require rabbitmq function changeid icdbfeedfdafffedb closesbug 
__label__objective __label__testing  in preparation container sharding feature changeid iabbacffcdbdede 
__label__objective  change set provide refactoring utility module simple function instead heavier weight class agent adapter line powervm code openstack project change set change single quote double quote method comment consisten project changeid ibbcafaceffadfe 
__label__quality  patch functional change merely remove code share vdict list get schema changeid ifdcceaddbefcdaceaa 
__label__objective __label__testing  instead have list schedule object meet object let dictionary parse yaml file store attribute meet object add test validate datetime mock datetime module changeid iafeedbedefefb 
__label__objective __label__testing  keystone token test move refactoring fix name test match latest tempest changeid iadedcccbdcfdb 
__label__refactoring __label__testing  changeid idfacbbdffacfbadebacfd 
__label__integration __label__objective  unlike nova scheduler consider serve compute volume schedule cinder scheduler serve volume schedule theres need generic interface schedule instead schedule create volume add if miss manager driver class chance simple scheduler driver implementation patch change interface api service scheduler allow information volume pass scheduler advance schedule changeid ifaceebedceefdefceed 
__label__integration __label__quality  api monolithic difficult maintain patch separate controller code separte file simplify overall structure make code readable moreover simplify integration substitution api clearly state file inject controller new source changeid iaebedbcebeecfffeae 
__label__integration __label__objective  prepare code easy add vpn rout process prevent update rout explicitly associate subnets case default vpc route table reassociation sequence api parameters natural changeid ifcbbdaffdaacb 
__label__objective __label__quality  better trove pluggability need modular low couple code commit goal decouple instance model code main change single model trove instance different view not model view separate manager controller mvc term code level model return save state business logic move manager instance model interface refactoring optimization if want state save state need request correspond method attribute ather logic load save cache attribute hide model level adaptation trove code test new model changeid iaefddeafacffebf implement blueprint troverefactoringforbetterpluggability 
__label__objective __label__quality  clean step methods deploy utils identical implementations agent py iscsi deploy py changeid iabfcebcafdfed 
__label__refactoring  address follow minor review comment nova test functional db test allocation candidates py nova object resource provider py nova object resource provider py changeid icdbfcfeaafaeebbce 
__label__objective __label__quality __label__testing  method bloat proportion bring line way target fix preparation fix db lock timeout errors observe deal dvr routers test coverage provide adjust reflect new structure introduce partialbug changeid ifbabfadbccbbf 
__label__quality __label__testing  refactor dl rpms sh script simplify maintenance development new file utils sh create store common function script also unit test add util sh file story task changeid iaaceaabbfcfefbdad signedoffby marcela rosales marcela rosales jimenez intel com signedoffby erich cordoba erich cordoba malibran intel com 
__label__integration __label__objective __label__quality __label__testing  rework test list resources explicit test resource list return expect exactly resource assertin explicit assertequal refactoring code read validate resource list enable test easily reuse resourcelisting code changeid iccbdfeeddfdceefe 
__label__objective __label__refactoring  move instance client compute namespace move ping client compute namespace add instance client base class simplify functionality provide instance client changeid ieddcafaebaeeeedc 
__label__objective __label__quality __label__testing  test user update look little mess easy distinguish test step continuous line refactor readable changeid iccacfbaacaaeacfad 
__label__objective __label__quality __label__testing  change exist functional test job use common job template follow step take job nonvoting dont break gate mean reviewers need check nonvoting result prior remove experimental functional job previously create neutron neutronvpnaas repos job go replace exist ones but thing abort approach remove experimental api job separate commit add in use new common template work get api job work partialbug changeid ibbabdfcfdaab 
__label__integration __label__objective  refactor code use common time conversion code object strip timezone info datetimes need database of blueprint makeinstanceactionuseobjects changeid idfbdadedceebeeea 
__label__objective  however doesnt build yet work it idea extension dev guide build long allinone pdf html dev guide contain call fix bug bug bug changeid icdbbdeeafaafab 
__label__objective __label__quality  redefine variable multiple time service run check set fact increase readability generate playbook add block strep service changeid iadfeccbdec 
__label__integration __label__objective __label__quality __label__testing  manilas test framework pretty old require update change usage nose replace testr test thread safe add new options run test sh concurrency debug etc new concurrency option run test sh default examples run test sh run thread run test sh concurrency run test thread add tool colorizer py colorize output testrun run test sh test run tox use thread core available default add database class manila test module conveniant db test update policy file manila test policy json allow sharenetwork action remove noserelated requirements add new requirements testrepository subunit merge change old instal virtual environments incompatible remove rm rf tox venv testrun implement blueprint testrwithunittests changeid iecdeddbcadcdccfcb 
__label__objective __label__quality  export functionalities backup new methods prepare backup backup chunk finalize backup original backup function call function allow drivers combine different logic rbddriver changeid ifbfcdcddaaeccdaf 
__label__objective __label__refactoring  add main function process project change time help reduce hold memory once changeid icdaeecffaa 
__label__objective __label__quality  remove duplicate code stop legacy nodesets changeid iadeeafecee signedoffby paul belanger pabelanger redhat com 
__label__integration __label__objective __label__testing  refactor change rbac utils test pass partiallyimplements bp initialtestsidentity changeid ibabbcafaabac 
__label__integration __label__objective __label__quality  wip patch refactors iscsi connect code change approach rely primarily sysfs instead cli tool retrieve require information devices connection multipath device name multipath name wwn block devices so fix good number bug improve reliability speed mechanism good example improvements benefit achieve patch be clean leftovers exceptions connection parallelize logins multipath increase speed flaky network connections long good path work multipath return multipath device instead single path device help temporary flaky connections dont use rescan retry parameter log retry multipath connections single multipath case consistent longer rely device wwn look multipath problematic flaky connections query iscsi devices wwn page remove delay issue flaky connections its longer problem mechanism fact device exist accessible longer use symlinks dev disk bypath dev disk byid dev mapper devices multipaths leftovers previous run longer need rely wwn determine multipath session lun trace devices belong multipath stop pollute log unnecessary exceptions check node session exist action retry log final exception instead log exceptions warn multipath form single device use performance degrade longer global rescans single connections bring unrelated unwanted devices iscsiadm iqn portal rescan fix scan mechanism request scan iqn share portals send scan request wrong ip share iqn single pathed connections end multipath didnt clean unfruitful connections its worth mention patch touch extend operation changeid iacbfaabcafebaaafaffbd 
__label__objective __label__testing  unit test pull testmoveclaim class refactor test claim abort this simply add extra line test claim abort behaviour test resize claim same host test method introduce previous patch series note patch remove exist unit test test tracker testmoveclaim test claim abort test same host refactored testresizeclaim test resize claim same host contain assertions unit test contain changeid iddfaeefffdadd 
__label__refactoring  refactored rabbitmq py suppress html output rabbitmq management add function changeid iefbeaeaceafffbd 
__label__objective  view class theres overload function call overload function return result remove theses function changeid ibfbedabdadddeeaeceb closesbug 
__label__quality  patch make share network documentation readable maintainable changeid iadbaaffddefabfaceadaea 
__label__integration  changeid iaeacdecdefeafffb bp reportapirefactor 
__label__integration __label__objective __label__quality  patch refactors ceilometer alarm api maintainable readable changeid ieeeeaffdbadcbfaf 
__label__objective __label__quality __label__testing  refactors gen resource inventory suggest simplify remove unused field duplicate default set placement itself patch introduce previously absent test suite conductor manager iaacafcbbbeefdaecd changeid iffeacadec 
__label__quality __label__refactoring  load auth method function extract load auth methods its easier modify unit test bp stevedore changeid iaaebfeaaeaabdfa 
__label__objective __label__quality __label__testing  wip refactor host api unit test host api unit test refactored use basehosttestcase class story task tbd changeid icaefecdaebacbef signedoffby teresa ho teresa ho windriver com 
__label__refactoring __label__testing  refactors test use image behavior functionality changeid iafcdababecaf 
__label__integration __label__objective  refactor initialize connection workflow taskflow split workflow volumemanager separate task create task perform individual require action accomplish desried outcome volumemanager workflow compose follow task verify driver initialization validate connector export volume return update volume reference remove export failure allow connection connector return connection info add qos specs connection info return update connection info changeid iddcebcdbfbeeedbf 
__label__objective __label__testing  add common timeout sec test test suite test perform long runnning cluster action add proper cleanup test test independent optimize test suit setup need variables populate changeid ifbaebaffaafbfbcfff 
__label__objective __label__quality __label__testing  refactors client get client function separate client get client with token client get client with credentials refactors dict manipulation test test utils raise valueerror client get client kwargs meet requirements add test client get client with token add test client get client with credentials add test client get token and endpoint add test client get client add test client client changeid ieddfbcdcbdcddecfcdfde 
__label__objective  refactor change functionality function add crypt encrypt decrypt resource properties data dicts note encrypt decrypt things params user creds which string intermediate json conversion value dict take place encrypt decrypt changeid idbcccbfacedece 
__label__quality  robust readable changeid iffbfaefcacbbfa 
__label__integration  changeid ifdcffbfddbdecdaf 
__label__integration __label__objective  copypaste copypaste everywhere change reduce number place essentially check apply api code changeid ifeabfffafffadc 
__label__objective __label__quality __label__testing  refactor test volume file situation weve line code file contain different test case reasonably divide smaller file patch include test case connect volume manage test case changeid icbcbcaabbdcdbfed 
__label__objective __label__quality  useful method fernet utils py module create directories reuse jwt provider implementation commit generalize logic move common place fernet utils use subsequent patch introduce jwt functionality use utils bp jsonwebtokens changeid ieaceafdeec 
__label__objective __label__testing  remove original admin flavor test class add test delete flavor module fix pep issue exist code modify test use autogenerated ids changeid iabfccfabbbcdaced 
__label__objective __label__quality  improve code readability get cinder volume backups scenarios standardize changeid iabcdaafaebcffcffe 
__label__integration __label__objective  create store happen api controllers move verification default store exist necessary binaries changeid ifdbddabebba 
__label__objective __label__testing  split manager class file at code change size initially add base manager class fuzz default clients add base test case class derive base smoketest class add smoke test basic server operations compute add nonsmoke test advance server operations compute changeid ibdafdaaafebfaaef 
__label__objective __label__quality __label__testing  refactor reconstructor probe test share common setup helper methods changeid iffbcddaaebbdb 
__label__objective __label__quality __label__testing  change instance storage client storage behavior blockstorage client blockstorage behavior remove parameters function call set default changeid ibdcddbbbccdd 
__label__refactoring  bug changeid iedfdebaeaeadafe 
__label__objective __label__quality  work patch notice issue code coherence difficult readability unnecessary code class change refactors code issue like ifs statements cohesion unnecessary condition unnecessary continue statements extract method large methods like node nodescontroller patch little bite complex understand changeid iffafebbbadceedcecb 
__label__objective __label__quality __label__testing  explicitly state info warn error result expect functional test test single helper method reduce copypasted code changeid idafaeaafadcaceee 
__label__objective __label__quality  cleanup instance fail old get connection refactors use xenapidriver fix bug changeid ifbbfeafbefebcffffc 
__label__objective  instead have pass context data recursive function call create object hold context data contain flatten functionality itself allow flatten function easily extend have selection function match item type flatten function add pre post flatten function which extend inherit different activites need changeid iffeddeeabfb 
__label__objective __label__quality __label__testing  patch remove current wsgiserver place keystone use basically identical congress reason switch keystone copy keystone integration keystone congress easier addition patch add mutiworker support use multiple process run api server though currently default patch include test case eventlet server changeid iabdabdcedaeaa closesbug 
__label__integration __label__objective __label__quality  variant neutron agents share database model store basic information configurations dynamic workload data neutronserver depend apply correct operations produce api response schedule ha also maintain transport data performance factor neutron believe db model need refactor base think scenarios first currently attribute identify agent logical status initialize ready data sync error agent connect neutronserver admin state liven check server side mean neutronserver apply operations agent blindly second agents send heartbeat message transport data however carry parse static data write db everytime inefficient wed like static dynamic data decouple agent db model agent need send static data once subsequent heartbeats carry dynamic data changeid ibdaaedceacdedfaa blueprint agentdbrefactor 
__label__objective  theres function inside service instance network live inside linux interface driver code patch refactors help allow noop driver changeid ibaefaccdabeb cherry pick commit eadbfcdaaaaaafceacdb 
__label__refactoring  behavior change use utility function instead roll own changeid iccdffcdfaddffa 
__label__objective  wip partiallyimplements blueprint refactornbapi changeid idcefaccaddededbcce 
__label__objective __label__quality __label__testing  test code heat test test volume py lot duplicate code logic extract common method reuse methods changeid icaeebffcddfbeeaffe 
__label__integration __label__objective  increase flexibility function parameters pass session parameter changeid idcbddccbadcbc 
__label__objective  securitygroupsrpccallback rpc refactoring patch commit fce move get port from device method plugin rpc callback class plugin layer mellanox plugin rpc callback forget update result rpc call agents mellanox plugin fail changeid iaaaccaaafcaefeefb relatedbug 
__label__integration  patch refactors cluster create api use action crate method changeid ibfafbdcfecdeb 
__label__quality __label__testing  refactor test network info refactor test helper its easier add new variant test change test order its easier possible combos changeid idabeddfcdcafbd 
__label__objective __label__quality __label__testing  add collectd ceilometer ceilometer dir add collectd ceilometer common dir test file collectd ceilometer test ceilometer common add base code collectd ceilometer test changeid ibdacfeebfdcbbbdaecc 
__label__integration __label__objective  merely pull load global cells cache helper function later patch depend this its code exist test exercise path like move move patch reorder dependencies relate blueprint cellsawareapi changeid idbffececcdfefb 
__label__objective __label__quality __label__testing  post live migration method huge hard review test maintain isolation need break complexity end change refactors source host volume connection cleanup code method allow simplify couple unit test target specific set code error handle new method test functional test class livemigrationcinderfailure changeid idebcdeaceca 
__label__integration __label__testing  wip refactor api test fixtures changeid ideeadaafcfaabadc 
__label__integration __label__objective  patch fix input helper function get alarm history alarm data refer alarm id patch delete unecessary get alarm changeid ieaffbcbc 
__label__objective __label__quality __label__testing  method test image rename check image check image test step list node group templates cluster templates remove sanity test check message correct sahara platform test rename changeid icacedeecacaebf 
__label__objective __label__testing  change add keylistener navigate test rectangles timeline outofview test select timeline refocus bring view functionality leave right arrow key support to navigate workers key support add future patch changeid iaacdeddbcaafe 
__label__quality __label__testing  patch refactors previous object method scheduler report client compute node inventory modulelevel function call compute node to inventory dict spurious toplevel inventory key remove return dict payload rp uuid inventory construct explicitly now refactors unit test report client handle inventory remove unnecessary mock correct improper stub value mask mock changeid iebebfefaeacec 
__label__integration __label__objective  patch refactors source support file use level package vmware nsx tempest plugin better match project plan publish pypi discussion sample release publish test pypi repo ensure work changeid icdfcebfbecbee 
__label__integration __label__quality  blueprint bp bp hypervtestingserializationimprovements patchset contain major refactoring hyperv driver main reason refactoring provide proper component abstraction decouple replace entirely remain preessex code previously available lead considerable semplification test framework entirely base stub mock mox serialize stub mock architectural perspective main driver class delegate operations ops class vmops volumeops etc contain main logic delegate os specific action utils class vmutils livemigrationutils etc wmi win api os specific code reside additional attention better pep code format include compliance mandatory check like changeid icbcbdcaadcdff 
__label__objective __label__quality __label__testing  draft far complete fail unit test need major change post early comment currently change dependant thiagos versioned write middleware change rewrite server copy object post copy feature middleware simplify method object controller code copy longer verb implement public method proxy application change change funcionality exist behavior assert almost change require exist functional test note for operators middleware require autoinserted versioned write slo dlo turn server copy configurable object post as copy longer configurable option proxy server middleware todo fix write unit test documentation figure testcopyaccounts functest fail changeid icaeafaddafdfceb signedoffby prashanth pai ppai redhat com 
__label__objective __label__testing  refactor test use template base approach refactor test use template drive engine add new nod config controller compute add new test configs vlan vxlan net providers that use new controller compute nod config changeid ifbabaabddfb 
__label__quality  function use cleanup routines use separate routine them changeid icedacdaadcfcb 
__label__integration  changeid icdcddeaedbfda 
__label__objective __label__quality  refactor check latest version remove code duplication add unit test prove comment osbaremetalapiversion command line argument give replacelatestversion call changeid iafbeacffadfbfee 
__label__objective __label__quality  introduce new function umount all partition reduce size install grub changeid idbdfadaecabfccba cherry pick commit efedfcfcadfbcacff 
__label__integration  changeid iafacdfbefdbebf 
__label__objective __label__quality __label__testing  change add module list configuration options set default change key manager base class incorporate configuration creation default key manager continue use global conf object oslo config package part change backwards compatible exception creation sample configuration file previously import castellan sufficient add options global configuration object now options need apply castellan options list opt function add mean create sample configuration file similar apply set configuration instantiate key manager change add castellan options list opt set default function change keymanager abc include configuration option init change babrican not implement key managers accept configuration parameters add test set default function fix barbican test accomodate new configuration parameter add documentation configuration usage changeid idddabeaaefeced implement blueprint improvedconfigurationoptions 
__label__objective __label__quality __label__testing  provide large collection update refactoring improve development environment cookbooks testkitchen primary change provide addition minimal suite replicate integration test job run zuul useful test debug issue ci job switch run list roles better match zuul job work update ubuntu instead attribute kitchen yml file environments update multinode dokken testkitchen use mariadb default deprecate upstream ubuntu use osuosl mirror its stable upstream dont disable epel rhel systems synchronize attribute within reason testkitchen file update roles run list create openstack test cookbook update etc apt source list osuosl mirror improve stability ubuntu changeid iedbaffadbdedaaccebd signedoffby lance albertson lance osuosl org 
__label__integration __label__objective  nova migration config apply base nova profile assume libvirtd novacompute run host config didnt apply nova api host disable flag approach compatible containers hieradata containers combine perhost flag longer work longer assume libvirtd novacompute run context change refactors profile base nova profile client profile target profile include appropriate changeid iaaedaaebcfaedfadc implement blueprint tripleocoldmigration 
__label__integration __label__objective __label__testing  rbac policy default create public share update exist share public change stein release let stop assume regular users perform action manila safely remove policy rule deprecation support apis changeid iafdefbbdabdbaabed signedoffby goutham pacha ravi gouthampravi gmail com 
__label__objective __label__quality __label__testing  refactor helper function build map http status cod local http exceptions dont explicitly list single exception add exceptions represent http status cod previously represent improve consistency exceptions name prepending http necessary exception name use httpexception instead clientexception deprecate old http exceptions those arent prefix http deprecate clientexception deprecate unused notokenlookupexception endpointnotfound add test module spotcheck from response helper changeid ibcfefeabbdddfda 
__label__integration __label__objective __label__quality  move console log temporary file clear race nova try access file there need readable file place time atomic operations like mv fine file open mv operation linux content available file close novas plugin changeid icfffdfbebfcbadcdd fixesbug 
__label__objective __label__quality  change make parameter validation robust eliminate custom validation function neutronlib facilities instead minimize usage neutron api import changeid iafdcfedeccfabfd 
__label__objective  function check valid auth options function rely check set require options cause errors external auth plugins somebody define auth plugin plugin name footoken check function check token option plugin define option change try improve situation cheking options define plugin changeid ifeddcbeeabbf 
__label__objective __label__testing  change fix translations correct translation function contain log level drop high log level ps address log change modules glance store new repo request store move repo new ps submit those ps touch test code separate ps submit log lever raise withing codebase request spec review relate bp refactoringglancelogging changeid icfacedbeffedcddebdbbfe 
__label__integration __label__quality  wip sqlalchemy api implement complex patch try simpfy changeid iacbdfbacfcbccb 
__label__objective __label__quality  merge duplicate code deepsix inpubrep logic readable changeid idacacaaeaafbcbbbb 
__label__objective __label__quality __label__testing  refactor sg sgr event hand add code coverage patch rename methods stylictic things improve readability add code coverage changeid ibebaeeccbfcecfb 
__label__objective __label__quality  review request rawtgzimage class move common territory reuse later fix bug changeid ifcfedbdcadebcb 
__label__quality  patch share metadata documentation readable maintainable changeid iddeadabcbbaeedfc 
__label__objective  order handle reauthentication request time let tenancity trigger it change create session helper class wrap get patch push put action use image uploader perform single reautentication action registry previously let reauthentication occur tenancity retry function function perform muiltple request exceed ttl authentication tokens lead failures prevent reauth time request retry entire action changeid ifcfabbabfcbcacc relatedbug cherry pick commit dbafffeadbfdeccedac 
__label__objective  rename deployment filename use command order use file use subcommands task refactored move code new generic function check use command file exist check rally configuration dir exist self update env var use comand file update attribute in use file self attribute value changeid idfbbdfdedadecd 
__label__objective __label__quality __label__testing  rework address flavor image servers view builders share logic previously duplicate viewbuilder class also rework viewbuilder class general persist longer mean new viewbuilder create request single viewbuilder create deal request need refactor issue test servers py link contain project id like should fix test update overall good test coverage test update refactor changeid iefdfeffc 
__label__objective __label__testing  test refactor generalise test case way configure run multiple storage backents different configurations sqlite mysql postgresql changeid ibdfbadccacecbafbeb 
__label__integration __label__objective  what problem core opt move neutron common py neutron conf common py migration lead py test failured tricircle test base py whats need fix import common py neutron conf common py instead neutron common py what purpose patch set fix py check gate test error introduce neutron config file refactorying changeid icabdaecceeeccbeee signedoffby joehuang joehuang huawei com 
__label__objective __label__quality __label__refactoring  function create keystone auth plugins saml reuse federation protocols support future propose move keystone contrib federation utils changeid ifbadcdaaeffaffbedaa 
__label__quality __label__testing  global refactoring include drop icehouse support improvements nodepools slave instal script remove deprecate job create config template old integration test create config file pypi improve refactor function sh execution test script changeid idbcddffbfebfcfcafca 
__label__objective __label__quality  change include code cleanups improve way developer create interact clustercomplexnames changeid ifcfcadbfdbcacdbaff 
__label__objective __label__quality __label__testing  preparation newer development time eliminate redundancy file test cisco nexus py split content file test cisco nexus base py contain share information test cisco nexus events py contain test incoming events test cisco nexus replay py contain test focus replay activity changeid idadacbbeffadba closesbug cherry pick commit fbacfbeeccba 
__label__integration __label__objective __label__quality __label__testing  change run playbooks script core cli tool longer special case script run bits outside simply run deployment tool theyve design script execute playbooks scriptslibrary function install bits ensure gate success have retry playbook execution case transient failure notice add script exist notify deployer work playbooks directory execute runplaybooks sh script again notice link documentation add changeid iccdabdcedccda 
__label__quality __label__testing  changeid ieebdaeeeccffb closesbug 
__label__objective __label__quality __label__testing  fullstack test file test apps py big maintain patch break smaller applicationspecifi chunk changeid idaebecbfdeaf closesbug 
__label__objective __label__quality __label__testing  remove duplicate code handle kerberoserror get host and realm toplevel method add integration test ipa connection code run manually current installation moment default ipa retry actually retr changeid icbedeffcdfbafbe 
__label__objective __label__testing  api version check utils like field provision state also api version relate check management verbs management verbs check utils contain api version relate check code add relate test case changeid idcbfeadeafedbbddba 
__label__objective __label__quality __label__testing  class inherit architecture network unit test different test class lead lot redundant code patch test class convenience come refactor changeid ifddbffbbcfffdebaf implement blueprint oscnetworkunittestrefactor 
__label__integration __label__objective  series attempt havent able sufficiently solve issue call path args past somewhat relic time proxy layer path args lot sense resource usage entirely classmethods it commandline example script primary example usage things grow yearplus time bolt great higherlevel interface lowerlevel interface stick older usecase recently problem resource prop type accepeted resource type mean significantly harder impossible nest resources example serverinterface resource depend server approach strip resource public api create get update delete head find list methods resource subclasses construct manner name prop slightly different clear additionally change come clear user experience uri parameters aka path args pave way clarity query parameters work way havent fully explore change class pretty far reach effect exist temporarily resource module change introduce module standalone change service independent others subsequent change disruptive form rename things like resource prop resource body like fairly major effect implementation class behaviorally different initial resource implementation previously anyandall data send resource initializer track internally resource instance send server even correspond resource prop class ultimately problem servers strict receive implementation make allowance socalled loose data enter component attribute argument send server receive server exist attribute resource currently say data drop entirely log strict loose mode engage warn fail unexpected data enter ultimately behavior happen near term mean sdk doesnt work exactly previous versions mean update resource definitions match truly expect give server changeid ifdbdfbeacceedad 
__label__objective __label__quality __label__testing  patch eliminate duplicate code deliberately leave place ec review avoid major churn diskfile module prior kilo release focus obvious deduplication shuffle code class deliberately attempt hammer piece deduplication introduce complex change come later code move module level ecdiskfile class new basediskfile class concrete class replication ec policy retain exist name diskfile manager writer reader ecdiskfile manager writer reader respectively knockon change fix bug get hash ignore self reclaim age default arg value replication diskfile manager delete tombstone older reclaim age newer meta file replication diskfile manager longer raise assertionerror meta file hash cleanup listdir fix stale test test auditor py test with tombstone didnt sense verify tombstone remove auditor test setup convolute think date object put clean object dir try harder create dir tombstone data file todo name get hash get hash need fix call modules heritage diskfile get hash call diskfilemanager get hash diskfilemanager get hash diskfile get hash move class diskfilemanager get hash call replicator need both get hash little check wrt get hash replicator info need get hash instead let build partition path changeid iedaedaddeccbbfa 
__label__objective __label__quality  previous refactor introduce namedtupled send ip mac address information port instead regular tuple commit advantage break position dependence code linuxbridge use information maintainability add little bite readability code changeid icddccffbfbaf 
__label__refactoring  changeid ifebeeeeedbeaac 
__label__objective __label__quality  code select particular key indices attribute value get attr intrinsic function attribute module separate function changeid iccedaabfcad 
__label__objective __label__testing  adapt test icehouse horizon delete test deprecate functionalities prepare basis new test changeid iacffaaffcffee 
__label__integration __label__objective  abstract get format instance function format instance db call get format instance format instance simply format input instance prepare work implement bp vapipolicy add policy check ec api layer changeid icefbfcdcffeececadca 
__label__quality  generalize combine individual database check mysql postgres have database function pass backend changeid iaedfaefcaaabd 
__label__objective __label__quality  remove unnecessary flag detach volume stop double detach report bug changeid icabedfedbacbbcbad 
__label__objective __label__testing  series change run with timeout strange case timeout doesnt raise timeouterror define module instead return default argument its impossible distinguish timeout reach user press ctrlc thread interrupt main raise keyboardinterrupt main thread let rewrite run with timeout function raise timeouterror keyboardinterrupt case default argument need raise exception case error fix usage function add unit test ibadeecadaecccb change changeid iebedecdfecedea 
__label__quality  patch refactors function relate process launch spawn subprocess wait for daemon to initialize process start daemon utility function manage storlet daemon changeid ifbfefbedacfeb 
__label__integration __label__objective  replace update default capabilities init function connection class base py instead connection class db driver available capabilities dict divide case mongodb db drivers common capabilities list pymongo base py common available capabilties update capabilities dict affect db drivers pymongo changeid ieabcfdaabecbcdbbe 
__label__objective __label__testing  combine test module list no options test module list with all option test modify test all option changeid ifeaacdeecefedddfd 
__label__objective __label__quality __label__testing  fix refactoring authtication move pecan configuration oslo config refactored functional base test get rig thread local relate code mistral context py add new exception applicationcontextnotfoundexception fix example configuration file minor cosmetic change blank line name changeid iceaebafacbdffcdd 
__label__objective __label__testing  refactor flag operations uniform increase unit test coverage changeid iafffcebbdcd 
__label__objective __label__quality __label__testing  patch change mainly focus post section spec file comment patch mention dont want change custom binddn bindpw nslcd conf however spec file source variabe assign valid file conf file etc folder test etc nssldapd conf source etc nssldapd conf elif test etc nss ldap conf source etc nss ldap conf elif test etc pam ldap conf source etc pam ldap conf source etc ldap conf change nslcd conf remove code grep base blank source dev null comment package default base replace it sed base blank target grep base blank source target fi grep binddn bindpw port scope ssl pagesize blank source dev null target use rpm instead srpm nsspamldapd package relate patch anymore deployment test pass story task dependson changeid iafadaffaafcdbafeceab signedoffby zhipengl zhipengs liu intel com 
__label__objective  support stand settings service lookups create common feature area local settings py create common utility function access it changeid iaebbddbbadcecad partialbug 
__label__refactoring  split function changeid ibecffbafaca 
__label__integration __label__objective  update openstack host specific kernel modules task longer need skip ansible lint check kernel configuration file slurp search provide list modules valid loadable test openstack host specific kernel modules test var assertion add changeid idbfebffedaabfb 
__label__objective  patch refactors status function instead have function output format output format simply parameter new status endpoints add imagelist json requestlist json endpoint nodelist json accept node id parameter filter changeid ifdfccccabdcba 
__label__quality  changeid ieedbaafcaeceeaabb signedoffby tan heng yeow nus edu 
__label__objective __label__testing  unit test test multiple case methods patch refactors unit test follow methods vmdk module fix this backup volume restore backup restore back create back from stream optimize file changeid iaedeecbccbafc 
__label__refactoring __label__testing  refactors test use image behavior functionality changeid idfbbbeabffbeebc 
__label__integration __label__objective __label__testing  unit test coverage odl driver refactor partially fix bug changeid iffafadddfaaebbfb 
__label__objective __label__quality __label__testing  hack check sure asserttrue instead assertequal true something regex likely need fix its overly complex try match see pep failures flag instance assertequal compare tuple happen contain true value easier path failure reevaluate hack check regex reformats test code longer get match exist regex changeid ifdfddaabfddafef signedoffby sean mcginnis sean mcginnis gmail com 
__label__refactoring  function dynamic ui helpers changeid ibaddadefecfdfffbcd 
__label__objective __label__quality  code check port du active couple code run check du attempt number time couple incorrect du attempt number port end check port patch fix situation decouple check port try check du attempt time maintain list successful port du attempt check port successfully reachable changeid ibedabdfbed 
__label__objective  refactor code manage wait lb backends commit introduce couple class function allow user specify load balance checker wait changeid iaefbcccbdaeff relatedbug 
__label__objective __label__quality  refactor huawei volume driver blueprint attempt refactor huawei volume driver liberty add base dirver implement basic function cinder driver require subclass inherit base driver accord different storages changeid ieadebebeef implement blueprint refactorhuaweivolumedriver 
__label__objective __label__quality __label__testing  auxiliary method set mock correctly complex thing test patch split auxiliary mock setup methods pxe ipxe case respectively changeid iafcbcfeeddebacfbc 
__label__objective  changeid icdafeddfdfafebdeefee 
__label__integration __label__objective  separate api test workbooks executions add test scenarios optimize methods realization test changeid icbceceeeeeabaebdadea closesbug 
__label__objective __label__testing  common bits compute common computetestcase class available need call test class changeid iafccbabbbbecacf 
__label__quality  refactor function read astute yaml directly fuctions read astute yaml directly break lot things function use data provide arguments rallyid us changeid iefaddbaddfffafbdededb 
__label__objective __label__quality  block device handle somewhat complex especially take things like md lvm encryption account patch implement minimal compatible partition handle changeid icaaaeadbefeeeefc signedoffby andreas florath andreas florath net 
__label__objective __label__testing  test set release config removals inside tripleoquickstart dependson changeid idabfadcfbcad 
__label__objective __label__quality __label__testing  come review comment change cebcbdbcebcfabcbad test move arent relate operations shouldnt servermovingtests class move separate class use distinct fake virt drivers avoid monkey patch compute manager code functional test changeid ieddcecdbebddabfa 
__label__objective __label__quality __label__testing  code pre live migration check live migration config drive support case complex heavily comment move separate function help code straightforward follow also this create separate test new function allow test logic isolation have probe condition context pre live migration changeid icefdfcbfdfddaeead signedoffby mark mcloughlin markmc redhat com 
__label__objective __label__testing  create new base class call basescenariotest provision resources way similar api base class allow allocate server class scope ie inside resource setup method new class barebone new methods rewrite scrach keep backward compatibility old basetempesttestcase test case for example help create resources login create server create server method return server detail instead nova api client answer body add create ssh client method handle ssh connection distruction end test sure server ssh connection create advance image settings require pass simple method parameter advance image true set test class level changeid ifedaeadfadecefe 
__label__objective __label__testing  test swap volume volume api usage method test compute mgr py test case normal errors devide follow test methods test swap volume volume api usage test swap volume with compute driver exception test swap volume with initialize connection exception changeid icaababc cherry pick commit afadaaacfecee 
__label__objective __label__testing  wip return value port network subnet creation methods unit test return helper methods manage lifecycle item concisely refactors test test db plugin leverage new object changeid ibabdddcfddbcddb 
__label__quality __label__testing  refactoring functional test break long test py file smaller file attempt improve maintainability functional test break functional areas commit pull test slo dlo tempurl middleware file changeid idacdbecfbaccfceeaa signedoffby thiago da silva thiago redhat com 
__label__objective __label__quality __label__testing  fix expand blockstorage test fixtures add work auth integration add blockstorage data drive test dataset list generator class add volume type dataset list generator add volume snapshot datadriven smoketests update osvolume attachments api integration reflect upstream change update compute volume integration test reflact upstream change changeid iebaafdeadcdc 
__label__integration __label__objective __label__testing  refactors store image file method signator add content type new parameter order test upload image file different from default application octetstream content type changeid idcfcccefcbeefcedca 
__label__objective __label__quality  convert relevant function use helpers insert function instead specific import changeid icaefeeecacce 
__label__objective __label__quality  resource manager support nest stack update story add nest stack support valet miss heat resource orchestration ids nest resources generate subset heat stack lifecycle scheduler hint resource advance store opaque metadata valet leverage metadata nova schedule time additional accommodations anticipation complexities bring add support stack update changeid ifedbfecafeffddff story task 
__label__quality  install pythonsolumcline source configed libs from git pip install gloal requirements changeid iadfdcecbfbcdaafd 
__label__quality  duplicate line zun service js patch refactors this convertmemorysize function unnecessary memory size unit fix mib also patch remove it changeid ieeebbceabbcccfe 
__label__objective  patch series patch unify code property parameter validation base common schema class current patch refactors implementation parameters schema subclass common schema class constraints py schema validation code share property parameter validation different code paths indentical functionality exist changeid iadceebbdfabacaab closesbug implement blueprint schemacodeconsolidation 
__label__integration __label__objective __label__testing  use dnsmasqconfig package add init script folder remove relate patch deployment test script check pass changeid idbfedbcdcfacb signedoffby zhipengl zhipengs liu intel com 
__label__objective __label__quality  fix delete instance link action allow ajax context fix bug changeid iccdbfeaedcecdfdb 
__label__objective __label__testing  change assertion message move container object creation setupclass add teardownclass changeid iafdddefacdfecbccaaadbf 
__label__objective __label__quality __label__testing  rework address flavor image servers view builders share logic previously duplicate viewbuilder class also rework viewbuilder class general persist longer mean new viewbuilder create request single viewbuilder create deal request need refactor issue test servers py link contain project id like should fix test update overall good test coverage test update refactor patch set update set request get request request property set request method override patch set fix test break update patch set change id network key id network patch set feedback change bcwaldon move controller wsgi py instead common py leave viewbuilder common py wsgi py cant import common circular dep viewbuilder need common logic update resource name collection name update controller view builder controller view builder class default none remove prepare wrapper request pass lot remove need decorator clutter code bite create test utilize float ips sure logic old address builder transfer changeid iefdfeffc create test float ips changeid idefacfdeae 
__label__integration __label__testing  target api test conudctor manager now changeid icbbedacbdcccdb 
__label__refactoring  log string use format function signedoffby jiri podivin jpodivin redhat com changeid icfedacaafcbdd 
__label__integration __label__objective  available ips represent number assignable ip address network currently network ip availability api provide total ips use ips case cant accurately figure rest ip address accord value example subnet ip allocation pool ip allocation pool update allocate ips closesbug changeid ieaafccdfcebdca 
__label__integration __label__objective  goal commit reduce average time spend retrieve validations deckhand currently wait time commit configdocs significant unnecessary api call change reduce number api call process utilize revisions revision id validations detail endpoint expose deckhand test introduce decrease cumulative time commit configdocs note commit introduce usage official deckhand client address future change changeid icfcabaeaafabccfa 
__label__objective __label__quality __label__testing  test test migrations start obtuse possible bug slip which already create general framework test data transition db migration hook walk versions code upgrade migration point attempt run prerun function follow check function afterwards create utility function things prerun check function pretty concise make check db independent theyll run run walk versions so uncover bug migration fix inline retroactive fix destructive data nuke hit already partially implement blueprint migrationtestingwithdata changeid ibdebfbdfdaababf 
__label__integration __label__objective __label__quality  wip create base tool refactoring configuration class create base class eredited new configuration class pythonic way collectd ceilometer import attribute class configuration attribute hasattributes verbose attribute boolean false configuration parse sue like this configuration configuration assert configuration verbose false configuration verbose assert configuration verbose true changeid ibbdbeedbfadfeaeeffd relatedbug 
__label__integration __label__quality  method convert api parameters boolean value useful parse show delete api parameter create separate function name extract bool blueprint stacklistsoftdeleted changeid ibcebacdcdb 
__label__integration __label__objective  web service management wsmanagement wsman request command fail return invalid result issue integrate dell remote access controller idrac lifecycle controller remote service ready specifically apply wsman enumerate invoke operations dell technical white paper lifecycle controller integration best practice guide state lifecycle controller firmware later the lifecycle controller remote service ready state run wsman command apply workflows use case document paper support openstack pythondracclient project document describe determine readiness lifecycle controller remote service project commit implement that refactors patch preparation change internal implementation project apis follow best practice implementation be idrac ready wait until idrac be ready relocate stack idrac specialization wsman client define class dracclient client wsmanclient methods continue available api provide class dracclient client client change project apis functional behavior changeid ibbcafcebdbccfedeea partialbug 
__label__objective __label__testing  move test separate test case improve test assertions blueprint dbapitests changeid idacbdbfadcdfb 
__label__objective __label__testing  mos murano package default patch add skip test user request package murano patch add test import package test murano engine nessesary sure murano fork correctly mos close bug changeid iabbfeecefbfedfd 
__label__integration __label__objective  refactoring log use oslo log standard openstack log refactoring log message enable in translations refactoring exception message enable in translations new requirement oslo log changeid iffcbadbcffbafeec 
__label__objective __label__quality  refactor layer relate modules order ease add new layer agent similar structure patch add couple contract class contain base functionalities agent changeid ieecfddbadaeafb coauthoredby paula cr maru pcrismaru cloudbasesolutions com implement blueprint hypervnetworkvirtualizationsupport 
__label__objective __label__refactoring  previously keystone common authorization module contain function flatten transform dictionary possibly nest single level dictionary give flatten dictionary general concept relate authorization think intuitive keystone common utils module changeid icffaadeeeeccdadacfdb 
__label__integration __label__objective  wip idea be like things time frequency send notify backend let backends decide send notify ideally make pool manager code simpler backend code easier understand avoid send unnecessary notify require change minidns rpcapi notify zone change get serial number host port instead nameserver object changeid idcebeecceaefeafdfdd 
__label__integration __label__objective  break module class load schedule filter schedule weight cell schedule create base plugin load class novaapi extension load benefit code base filter code move nova filter py cells schedule use it changeid ifdeafdbaabbfbdbbb 
__label__objective __label__quality  separate module avoid explosion size adapters class module refactor principle subordinate class correct super class provide install configure source helpers function class type split ghost share action mixin everywhere add triliovault charm class main module all changeid iccafaabfc 
__label__objective __label__refactoring  diskfile take lot arguments value instantiation pull stuff utility method functionality change intend changeid idfbeddcbeddeeeea 
__label__quality  changeid ibbfcdfcef partially implement blueprint apiuriformatchange 
__label__objective __label__quality __label__refactoring  refactor db model access function get collection get collection query function bite messy name conventions extensibility wise patch refactors function purpose reduce codeduplications improve extensibility prefilter function allow custom filter currently support framework also miss unregister model query hook add name conventions mixup code collection query be query proper sql query model query select collection actual result give query my query all custom filter retrieve resources model for example port filter certain column for example specific port name complicate try filter relationship field for example foreign key patchset add prefilter callback allow custom filter field code duplication get port function basically duplication get collection specific filter insert prior normal filter prefilter callback feature eliminate need code duplication straightforward implementation changeid ibbeebbfffcfadbcdec closesbug 
__label__integration __label__objective __label__quality  ps refactors endpoint function reduce code repetition improve readability changeid iadcafceecbdec signedoffby pete birley pete port direct 
__label__objective __label__quality __label__testing  test base class inherit outside exist source tree higher stack testtools anti pattern make far clear go on need understand base class setup test unwind tempest lib specific ways like build clients decorators timeout log capture piece pull inline end end base test define self client nova api client self flavor workable flavor boot guests self image workable image boot guests self cli clients tempest lib cli clients changeid ibeddafbfdcfdd 
__label__objective __label__quality  override paramikos ssh client return status code create strongly type response exec command create new base ssh client handle bare essentials create base ssh behaviors encapsulate functionality client changeid iebeadaeedabccd 
__label__objective __label__quality  separate validation structure function validation arguments pass remain initialisation method move validate method consistent intrinsic function instantiate hopefully lead confusion kind result bug changeid iebcbdeddbbefdcafaebedd relatedbug 
__label__objective __label__quality  libvirt driver py class grow larger complicate circular dependencies class libvirt class work aim split functionality new class changeid iecbcdfbbffacbaf 
__label__integration __label__objective __label__testing  add tempest scenario testcase taas refactor exist api test add new api testcase test newly add vlan mirror input parameter tapflowcreate api patchset extension follow commit add sriov driver support taas changeid idfddcaceee commit 
__label__objective __label__quality __label__testing  columns datalist set test case compute necessary patch abstract remove redundant code changeid ieeafdcedceddeab closesbug 
__label__objective __label__testing  changeid iaaabdebddaaaff fix bug 
__label__objective __label__testing  refactor case test storwize vdisk copy ops let assertion explicitly test vdiskcopyops admin metadata dictionary changeid idebdebcacfdebb partialbug 
__label__objective __label__quality __label__testing  vmware spawn refactor image handle examine exist vmops spawn coder asyet unmerged patch undergo review impact it anticipate additional change propose blueprint apparent high branch factor result inefficient attempt address permutations follow different type image spawn sparse flat iso streamoptimized ova different ways obtain image http download datastore copy direct use different ways prepare download image bits usable image image cache replace flat vmdk extent convert sparse pick import vm different ways employ image available fully copy base cow disk direct use patch attempt tease apart main areas responsibilites imagehandler class obtain bits kinds image imageprocessor class process bits usable form cache iamge cache image user callbacks deal prepare cache image vm ways hope allow selfcontained additions change behaviors areas avenues test different aspects spawn operation isolation todo try break smaller patch add couple test partial blueprint vmwarespawnrefactor changeid ifbbaefbbadfdebb 
__label__quality __label__testing  addition function get response object data remove repeat line methods the code space get automatically add the space remove recheck bug bug action item track review comment raise steve kowalik changeid iafbbadfdaffbbfee partialbug 
__label__objective __label__quality __label__testing  commit address bug user unable retrieve manifest name simplify internal logic reorganize unit test changeid ibacaffcbeaeeaeafca signedoffby ruslan aliev raliev mirantis com close 
__label__integration  eliminate nsxapi call database transactions changeid ifafecdfbfcddce 
__label__objective __label__testing  change test check oswl stat function get oswls by resource data closesbug changeid ibfbababccdca 
__label__quality __label__refactoring  commit refactors reusable piece tripleoci common function sh common vars bash preparation add ovb multinode support changeid iedffbddcbcadfacd 
__label__integration __label__objective  patch move content adminendpoints parameters yaml parameters yaml modify parameters name changeid iecddfbddfcccaea 
__label__objective __label__quality __label__testing  api request separate methods update setup create stable background test close bug changeid iaecbdaddfebfcafe 
__label__quality __label__refactoring  options relate driver driver class use class add new class encapsulate logic policy cache use helper methods interact global instance cache refactoring nice sideeffect clean unit test fairly significantly need teardown methods reset state easily disable load policy file stub load policy function changeid iffcefaadbaedccc 
__label__objective __label__refactoring  refactoring function chekers py part follow function change get ceph partition get mongo partition folowing function move utils py get mongo partition get ceph partition relate test modify implement blueprint sshmanagerintegration changeid icbbeadcabbeecadfedd 
__label__integration  change switch machine changeid iefdfcbcdefcbabeefa 
__label__integration __label__objective  network relate cod dir initialize network api interact neutron changeid ifaeeeacbfddebeccdb 
__label__testing  methods relate node list sort filter functionality role management move separate component closesbug changeid iedfcbdcfabfafbcea 
__label__objective __label__testing  cluster id field add test set migration script supply logic discover test set test move controllers testset controller nose plugin refactored test supply new feature test discover controllers model description discovery logic change new pure init revision alembic other delete nonmajor refactoring file refactored order support new logic discover test set test ostf runtime nonmajor fix fabfile unit test logic controlls data write db test add test nose discovery supply nonmajor fix nose discovery plugin unit test nose discovery finish deployments type test add purpose test new discovery behaviour intesions logic define dummy test unit test nose discovery fix new fake test add logic define dummy test unit test wsgi controllers fix unit test wsgi controllers finish fix wsgi contorollers now test set controller return non result query all test controller return test test run id present it nose discovery function fix search test set give cluster id check data db in case sqlalchemy merge prevent make dublicates methods nose storage plugin fix sake support new behaviour get description function with new addition value return deployment tag attempt rewrite functional test testingadapterclient modify nonmajor fix add new change nose discovery func check cluster redeploy implement finish change controllers mostly return value nose discovery test change order implement future change proper process debug test path add wsgi utils fix discovery logic different test basetestingadapter simplify functional test fix test class new element disable statuses enumerate add new initial migration add since model modify functional test fix support new logic smth strange wsgi utils test redeploy cluster add test wsgi controllers py multinode deployment test fix changeid ieacfcbccddeafbbfc 
__label__objective __label__quality  refactored os security group set command use sdk neutron enable continue use nova client nova network enable patch set fix compute bug ignore description set value changeid idcaaedfeecbdedcebd partialbug implement blueprint neutronclient 
__label__objective __label__quality  decorator generic able manage default id need add new default id add default name id id function set default id id func map dict id func map deploy id default deploy id finally want use it simply specify name id parameter decorator default id deploy id replace decorator decorator functools wrap method signature issue new implementation decorator default id remove pythondecorator dependency requirements use dependency else changeid ibffcfdfeefad 
__label__objective __label__testing  currently testalarms type test objectives include api alarm hitory alarm rule patch add new base class testalarmsbase split test mix testalarms different class changeid idabbdfbceebc 
__label__objective __label__quality  patch move test by project and user and role refactors test revocation backend instead spoof backend match changeid icaebeaeecaede 
__label__quality __label__testing  subsequent patch introduce test work oscollectconfig use common function changeid ibcebfdbfbbecb 
__label__objective __label__quality __label__testing  refactor tobiko package remove dependencies testscenarios testtools tempest pythonclient code tobiko openstack module parse tobiko conf file instead tempest conf rename pre test method create add delete method test float ip test case network case tobiko test neutron package wrap ping command refactor stackmanager separate user frontend pythonclient backend allow add backends ansible etc populate resources prefix stack name python package test case changeid ifedbfaaffdefbc 
__label__refactoring  refactor functional utils changeid iaececaabaf 
__label__objective __label__quality  revert commit fdcfcbbfdcecb work new change screen changeid ifeeecbffdbdcf 
__label__objective __label__quality __label__refactoring __label__testing  remove cfg wrappers keystone config idea cfg module project code config similar idioms familiar work openstack register wrappers dont add way convenience want them add cfg itself subsequent commit series remove global conf object option definitions closer option use end result worth consider initial baby step refactor password utils separate module code selfcontained shame lump generic utils module hash password use supply conf instance conf help remove conf completely subsequent commit conf instance attribute identity drivers default value crypt strength add keystone conf refactor sql options avoid conf pass conf instance sql function conf completely remove subsequent commit option definitions sql opt module sql core sql migration rely options theory easier copy reuse modules individually remove sql min pool size sql max pool size sql pool timeout unused memcache token backend refactoring trivial refactoring isolate memcache servers option memcache token class subsequent commit conf instance attribute token driver lameness config conf remove add default value keystone conf refactor ldap identity backend options options definitions closer use add default value option definitions rely them reconcile default code default config file refactor service driver options handle define catalog ec identity policy token driver options manager class use them base manager class register them supply conf instance constructor manager class global conf variable remove subsequent commit refactor admin token handle admin token option definition admintokenauthmiddleware class use also explicitly set admin token value test things clear refactor port options admin port public port options test keystoneall definitions wsgi module add helper method register them compute port option templated catalog backend definition there refactor policy rule driver avoid global conf options relate driver driver class use class add new class encapsulate logic policy cache use helper methods interact global instance cache refactoring nice sideeffect clean unit test fairly significantly need teardown methods reset state easily disable load policy file stub load policy function remove use global conf service drivers service drivers conf instance paramater constructor use instead conf use super self init avoid mess cause multiple inheritance kvs identity want identity driver supply conf instance preceeding constructor mro kvs base pass conf instance sql base constructor remove use conf common sql completely pass conf instance wsgi app constructors remove conf reference wsgi apps pass conf instance constructors need sure add rout call router app base class constructor call conf attribute set eliminate bunch conf usage cli test fairly random collection change wean code conf usage more add generic pastedeploy factories glance pastedeploy way pass parameters app filter factory constructor options config file want pass conf instance constructors lame trick stuff conf instance global variable factory run factory pass constructor duplicate lame hack bunch place single generic set factories there code copy straight glance eventually live openstackcommon remove use conf refernences conf exist point cli code test also need configmixin pretty eliminate point pass default config file list configopts constructor changeid idaadfceabffebf 
__label__objective __label__quality  changeid idffddcaddfbefbacbff 
__label__objective __label__quality  easier reuse gittree outside gitfixture reference instead treat function utils private indicate shouldnt rely outside package switch utils indicate rely clear ide warn use private function finally avoid use potentially mutable default params changeid iacffbdeebafbbddddb 
__label__integration __label__objective  split allocate for instance logical function group better use neutron api coalesce multiple call support support asynchronous operations appropriate changeid iaeecbabaeefab 
__label__objective  patch refactors status function instead have function output format output format simply parameter new status endpoints add imagelist json nodelist json changeid ideaaefeeeaacaccd 
__label__integration  changeid icffddbaefdffccaeaad 
__label__objective  do methods taskhelper class move object task rpc receiver code change explicit controll sqlalchemy session task object methods add miss taskhelper class use far hold common use helper function in future move utils module test update partial refactoring work state changeid ifffaddbcffae implement blueprint nailguntaskhelpersrefactoring 
__label__refactoring __label__testing  refactors test use image behavior functionality changeid ifffddebfdcdcdd 
__label__objective __label__quality  patch fix issue erase drive stop deployment provision execute dd nonexisting debootstrap shell option flag break check block device major code incorrect order arguments pass erase data function implement robust mechanizm detect provisining provisined node changeid icccecbadbeefbcbbbeb relatedbug cherry pick commit bffbeeddbadcf 
__label__objective __label__quality  patch change fibre channel zone manager utility decorators function function call manually intention unify fc drivers declare vs iscsi magic decorators fc drivers only changeid ieeebbafeaddfaedf 
__label__integration __label__objective __label__quality __label__testing  test password hash method define test backend identitytests bad place backends password hash for example ldap backend doesnt implement way call private method backend sql backend implement differently it require sqlalchemy session test password hash method move kvs backend test class current implementation specific kvs backend changeid iadebecbdddd 
__label__objective __label__quality  refactors graphite stanzas thats readable make simpler add new ones later lot copy paste changeid idcebabbcccecaffae 
__label__objective __label__quality  virtualbmc domain creation unreliable particular domains exist vbmc stop command function properly move domain management python module better control process creation improve performance story changeid icbcddcbfebcddaa 
__label__objective __label__quality  refactor get host stats method cleaner easier maintain patch change apis functionality changeid ibaccfefdfdcbbbefabcd 
__label__testing  merge dicts function wasnt cover need test issue code its refactored additionaly function merge list refactored changeid iffbffbbddffbaffff 
__label__objective __label__quality __label__refactoring  move phase relate functionality phase component document functionality currently doc pull document component refactors backend code ensure phase document message handle separate handlers changeid iffedeeafeacdbdeaad 
__label__objective __label__testing  change appear openstacksdk project face unit test errors openstack sdk profile remove openstack sdk execptions change commit try follow change changeid iabfeaefcabeaffafbdace 
__label__objective __label__quality  pypowervm task scsi mapper detach storage provide function detach storage element vscsi mappings logic previously inlined nova powervm virt powervm media add dlt vopt task change set replace inline code pypowervm call changeid icaedccabdabab 
__label__objective __label__quality __label__testing  swift test require random user creation test acl feature prepare special data reseller admins request occur code duplication especially assign role id code lengthy commit aggregate common cod remove unused cleanup statements changeid ibfceeecccdedffbca 
__label__objective __label__quality  previously testr artifacts tempest process cleanup functional job neutron neutronvnpaas add artifact process hook script work limitation duplication effort costly change refactors exist artifact process configurably target project testr artifacts devstack gate testr artifact target environment variable set repo path neutron ensure artifacts correctly process project changeid ideefbcdfedefdedbdbaec 
__label__objective __label__quality __label__testing  need patch rid code duplication test changeid ibcaacfccaebdfafcebb 
__label__objective __label__quality __label__testing  refactor add contrib heat gate test exist code run twice heat contrib add command tox break tox single run example tox py heat test test software config heat test test software config execute test case contrib execute patch add contrib discover list sure contrib heat gate test break single test run changeid idbcefdabafcedeaa 
__label__objective __label__quality __label__testing  patch rename testkuryrnetworkfailrues testkuryrnetworkcreatefailrues replace hardcoded messge test variable define flask exception changeid iacbfaaccfaab signedoffby taku fukushima tac mac gmail com 
__label__objective __label__refactoring  fix bug changeid idcefcdceddfedcb 
__label__integration __label__objective  relate blueprint xenapivolumedrivers extract connect volume attach volume test attach volume changeid ieaecfadaadfbaaeddadebe 
__label__integration __label__objective __label__quality  introduce json decorator change signatures api uris extract common js code separate static file renderers chart table timeline common function resolve bug changeid ifdabddcffccbf 
__label__objective __label__quality __label__testing  columns set test case testflavorlist necessary patch abstract remove redundant code changeid idebfacbdfdeacef implement blueprint improveflavorunittes 
__label__quality  patch refactors function daemon factory process kill process kill all utility function manage storlet daemon changeid ibacadbbafcebdcecc 
__label__objective __label__quality __label__testing  refactor instanceexists comment test refactored instanceexists relate notify usage exist method documentation test instance usage audit unit test unit compute test compute mgr py changeid iaeecffebcddcbdacc 
__label__objective __label__quality  wip refactor rest utils method rest utils get all compose efficiently enough apply resource function potentially load additional field specific field request user patch fix split logic method case specific field request not changeid icfceaecaeccbfcabed 
__label__integration __label__quality  wip code order reduce duplicate exception handle changeid ibfeefdeabbfcdfe 
__label__refactoring  rebased master branch latest fix tox ini resolve configerror substitution key envbindir find error run functional test add infoblox openstack license info comment section change variable name use camel case use low case underscore baserequestfactory changeid iccaccbcacadfdfdf partiallyimplements blueprint neutronipam 
__label__objective __label__quality __label__testing  fix lp bug cache management need refactoring refactors cache management middleware simplify middleware image cache call middleware contain call retrieve record image cache queue image cache delete single cache image delete cache image remove special call reap invalid stall image handle cache cleaner utility add functional test case cache cache management middleware enable slight change way functional test create config file add configuration file start servers test dir etc server conf test runner config file cause failures test todo add test case queue run prefetcher check image cache todo add docs cache management api todo bin glance gracefully handle cache exist changeid ieffeeabcbbceaebcbdbfde 
__label__quality  hook logic exist twice let refactor function reuse hook changeid idfdceefafceeffb 
__label__objective __label__refactoring  blueprint attempt refactor huawei volume driver liberty add base dirver implement basic function cinder driver require subclass inherit base driver accord different storages follow diragram show structure newest huawei volume driver iscsidriver huaweibasedriver fibrechanneldriver huaweiiscsidriver huaweifcdriver changeid ifdcfeeaecfccc implement blueprint refactorhuaweivolumedriver 
__label__integration  patch refactors placement api class generic service class service package management simple note fix incorrect stop httpd service nondebian system changeid ifbaadddcb cherry pick commit fbcbaefcbce 
__label__objective __label__refactoring  fix bug changeid icdeecafdcabecbfaaf 
__label__objective __label__quality  new feature add drivers hard maintain code work need refactor code work contain follow define new class name huaweiconf parse xml config file external xml file store san info config parse code different function parse adjust function structure rename function variables docimpact implement blueprint refactorhuaweidriver changeid idcedcdddfeb 
__label__integration __label__quality  commit refactoring base manager specific managers inherit chassis node port driver specific managers lot duplicate code methods like get create vendor passthru literally equal sense base manager inheritance avoid type problem change move duplicate code parent base manager specific managers simpler make base manager useful code reuse methods changeid icadbcdfaaeadaa closesbug 
__label__objective __label__testing  need common utility code change series break allow test coverage improve changeid idccfbddccbeaa blueprint containerprepareworkflow 
__label__objective __label__quality __label__testing  refactor dict get test assertion patch refactor test assertions dict get key explicit way dict key assert existence key directly assertnotin changeid iebcbcbecceedfaffebe partialbug 
__label__quality  split requesthandler init multiple function changeid idbdcaafca 
__label__integration __label__objective  wip change accomplish primary things generalize work enable eventratelimit admission plugin restructure anchor upgrade old anchor try coordinate injection new data configmaps secrets include ancillary change clean apiserver argument specification chart deduplicate realign apiserver arguments bootstrapping templates effect of add new field apiserver arguments genesis config prefer way configure bootstrapping apiservers go forward in lieu command prefix changeid icfeeeecdeaecafda 
__label__objective __label__quality __label__testing  openstackclient test network common py wont anymore remove it changeid ifdeecdabfbcfde implement blueprint oscnetworkunittestrefactor relatedto blueprint neutronclient 
__label__integration __label__objective  unify format result dict format stack output currently dont resolve data output value key isnt add result dict occurres keyerror patch unify format dict resolve data also refactor format stack output dont want resolve data method return list dicts output value key implement bp apicalloutput changeid ieccbaeacceabb 
__label__integration  work progress review submit feedbacks refactored launch script start api executor process transport oslo message fake driver share transport attribute add abstract engine class attribute reference transport object changeid ibebdedebfeeddd implement blueprint mistralinprocexecutor 
__label__objective __label__quality  change set provide refactorings code easier read maintain key change be support fixtures similar way nova powervm do reduce mock code require test rename powervm sea agent sea agent powervm namespace due folder in create long use change connection utility pvmutils simpler line function evolve changeid iccbfdcbacaaaefafffa 
__label__refactoring  changeid iaeadfafedbdcf 
__label__quality  reduce usage member variables favor dictionary contain detail detail set new function get detail good step work need followup patch changeid icfcdbebcbaff 
__label__objective __label__quality  difference task class task instance least different uuids task decorator produce task class instance commit attempt simplify things add attribute function instead wrap it changeid ifaedbbafefddeab 
__label__integration __label__objective __label__testing  refactor rabbitmq ordifing refactor service status rabbitmq pacemaker non pacemaker mode cmd check change rabbitmqctl node health check rabbitmqctl cluster status cluster status fail issue nod doesnt timeout operation hang up instead node health check check node check cluster success stag file modules merge specify order rabbitmq user permissions rabbitmq user write test verify service actual user changeid iabddcbffcc closesbug 
__label__integration __label__testing  test locate separate file test api package base class separate file also changeid idbbefbacaabeeaaaabdae 
__label__integration __label__objective  change things simple refactor allow pass bdm remove volume connection interface public remove volume connection easily change its rpc api call second new private method gain delete attachment kwarg tell method delete vstyle attachment bdm attachment id none prep work upcoming change go new private method locally rpc changeid icedbbdbafaa 
__label__objective __label__quality  change icdeadaecdfeedaee want able archive record certain date patch it require modifications record instance action instance action events migrations table handle separately table however refactoring archive workflow archive dependent table function archive if instance delete allow archive update row table cleaner changeid iffaeffcecadbfe 
__label__integration  wip add follow method handle request send nsx create resource update resource get resource delete resource changeid iaebccfabcddfbedecb 
__label__objective __label__quality  change update build page component use container build information render enable decouple network logic actual render changeid iccbefaeaffdeecabfc 
__label__integration __label__objective  blueprint logrequestidmappings require add log call openstack service need log request id return cinder current set api function call cinderclient individually litter code dozens log line refactor move cinderclient api function log point changeid ibfcbabaafa 
__label__objective __label__quality __label__testing  theres bunch code copiedandpasted json parsers auth type refactor code base class first though unit test code ensure regressions changeid iecdfcbecdcc 
__label__objective __label__quality __label__testing  squash commit consist follow change net summary change remove token formatters dependency token data token data helper trust api call module interface modules understand token data compose theres reason token formatters create method work complex data patch ensure token formatters primitive string of datetimes audit ids trust ids create tokens theyre free encode wish handle audit ids simplify theyre mutate strictly necessary remove expiration timestamp embed fernet tokens favor key rotation tune lifespan fernet tokens remove creation timestamp tokens payload favor extract tokens creation timestamp fernet token format itself move payload version part plaintext token prefix integrity verify portion token the payload drop doesnt serve purpose fernet tokens token format validate offline pki pkiz require bunch refactoring responsibility decrypt unpack disassemble payload content caller the provider add domainscoped payload format identical projectscoped tokens different version number better functional test reveal test intend exercise domainscoped fernet tokens didnt exist pass remove remain functional test unit test suite test fernet provider ensure coverage exist actual functional test suite test auth unit test require heavy refactoring refactoring require support item above easier dump test favor better functional test coverage agnostic implementation detail changeid ibbfebceccfeeaecd closesbug closesbug closesbug closesbug 
__label__quality  monolithic replace osd function work mon osds coexist metal change break function logically distinct function hook action independently other changeid idcccceeadfbbbcfde 
__label__quality  patch refactors sqlalchemy db methods relate service consolidate methods minimum number actually need reduce number db call operation reduce data retrieve db server method consolidation patch remove service get by host and topic service get by args service get all by topic service get all by binary include functionality provide methods service get service get all methods reduce number db call wont retrieve service db delete update service reduce data retrieve db filter nod db instead locally patch relate efforts support ha cvol nod job distribution patch dependent one specs implement blueprint cindervolumeactiveactivesupport changeid icdcbccbaecfdfe 
__label__objective __label__quality __label__testing  blueprint necplugintestcoverage commit refactors base class unit test nec plugin write new test easier add fake ofc manager change unit test use ofc manager mock fake fake dont need set return value side effect mock instance ofc manager test case fake keep resources ofc return existence resources properly fake attach ofc manager mock instance set side effect set raise exception nec plugin configurable test case configure nec plugin set string class value nec ini write temporal file load nec plugin setup callbacks necpluginvtestcase unit test use callbacks changeid iabbdcabfeaddcd 
__label__quality __label__testing  follow patch comment tim suggest implementation behavior code change implement suggestion detail changeid ifdafbdfccefffacf 
__label__objective  add new run update ansible action function utils upgrade update avoid repetition package update action pass utils function avoid circular dependency changeid idbeafafedfecabda cherry pick commit cfedfdaedeffbaac 
__label__integration __label__objective  add filtration service catalog endpoints public see changeid idbfdccefeffd 
__label__objective __label__quality  heatconfig run create json file output use jq fetch return code write file patch aim refactor task run script verification avoid task duplication ensure file actually exist file system retry delay mechanism order avoid race condition see bug report changeid icabdacedfcbcaa closesbug 
__label__objective __label__refactoring  fix bug changeid iadbcfdebaafeedfce 
__label__testing  function nova cmd modules duplicate reuse future modules add docstrings refactored function add unit test refactored function changeid iceeafeccaefbcddeb partiallyimplements blueprint getpolicysettingscli 
__label__refactoring __label__testing  refactors test use image behavior functionality changeid ieeeacdebcaf 
__label__integration __label__objective  use internal api reference storage backend remove need use stevedore changeid iadebeabfebcbadf 
__label__objective __label__quality __label__testing  refactors hideci code smaller function make thing bite readable fix go forward order add couple new feature smaller function code easier review refactor parse comment review classify be ci be trust ci easily compute result want go forward process additional feature add ci result show latest patch set ci report it accomplish ci latest patchset ci merge conflict thats display result box test result record lift total test result display panel set test result include date get from mean patch rechecked lot youll history test result current patch able quickly realize current test result older recheck comment ux different need tweak go forward merge result different run create lot confusion reviewers errors clarity largely inconvenient workflow development the fact basically need copy paste function definitions chrome dev console isnt break smaller patch should hopefully future patch easier code though changeid ifafdfcddcbdd 
__label__integration __label__objective __label__testing  change way db test run coope concurrent databases fakeurl dbmanager dbmanager context manager able create separate db test perform cleanup action need delete database preparational work add new database backends relate blueprint sqlunittestsonrealbackend changeid icbaadfacadeeacd 
__label__objective __label__quality __label__testing  patch set clean jsonpath replace method increase readability currently weird legacy code doesnt sense likely dead code fact change unit test validate missingdocumentpattern raise correctly jsonpath replace refactored inner private function do replace once perform data expansion populate data dictionary nonexistent nest key unit test add validate exception above changeid iccfccbdfaafeb 
__label__objective __label__testing  reason trove gate job move jobgroups allocation possible future modifications aroung trove yaml change implement group job group gatetrovefunctionaldsvmtestgroup cover nonheat heat test job templates different datastores gatetrovebuildimagegroup cover image publish job datastores changeid iadeefcbecdddefadbcdbcd 
__label__objective __label__refactoring  surface rax keystone authentication function config file necessary changeid idfcfdcedebd 
__label__objective __label__refactoring  review recommend updateglanceimage common library bug file deal refactors change fix part fix bug changeid iaebecadacbd 
__label__objective __label__quality  patch move test by domain domain refactors test revocation backend instead spoof backend match changeid iecdcadecdddddeafcdb 
__label__objective __label__quality __label__testing  refactoring test need wait little bite time execution success state thats need add extra method check execution state wait success changeid icdcdbddacfbfba closesbug 
__label__integration  wip monitor project project id table detail specify project changeid iacbddefdacfeccf implement blueprint bp monitoringapiurlrefactoring 
__label__objective __label__quality __label__testing  cr change client use keystone sessions exclusively authentication previously available barbicanclient remove defer authentication keystoneclient unit test client module refactored test new functionality readme file update example authenticate sessions client priority endpoint pass endpoints service catalog close bug helpful development run instance barbican locally use keystone instance authentication barbican service catalog docimpact implement blueprint usekeystonesessions closesbug changeid idcbcfcafeaaff 
__label__objective __label__testing  logic support automate execution unit test ci purpose add setup teardownpackage function test test init py file test start nose package setup function nailgunmimic server set separate process terminate teardown functionality provide unify way execute unit test changeid iacdcbacebcabf 
__label__integration __label__testing  like apis keystone keystone common provider api providerapis load managers instead self make change test modules find occurrences grep self api keystone test changeid icdcadecdeadfffaeaf 
__label__testing  changeid icdadccdbdacefc 
__label__refactoring  spec intend serve basis discussion refactoring glance image import functionality mitka summit apiimpact docimpact securityimpact changeid ifaaecdceebcdf implement blueprint imageimportrefactor 
__label__objective __label__quality  refactored create trust function keystone trust controllers module order readable addition function check require attribute request return appropriate error message miss empty changeid ifaeebabecba 
__label__objective __label__quality __label__testing  change request param generation respect param order assertion partialbug changeid iafddeabcebae 
__label__objective __label__testing  start split test version secrets controller test modules test im split out goal remove mock possible equation clean individual test bite changeid ifbfdcecaebdbdeafe 
__label__refactoring __label__testing  refactor proxyserver conf load utils function middlewares common pattern load proxyserver app config section patch move common code utils helper function add unit test changeid ibceefeebfadcbbfd 
__label__objective __label__testing  wip refactoring rpc namespace support todo test case implement blueprint coderefactoring changeid iaaeaddebfd 
__label__objective __label__quality __label__testing  columns datalist set test case volume necessary patch abstract remove redundant code changeid iadddbdabdcfbfcedd relatedbug 
__label__quality  help improve readability maintanence easier changeid ibdebbdaebbec 
__label__objective __label__quality __label__testing  refactor test validate ip address change test case use loop remove useless mock assert changeid iecadcdfcdacadeeb 
__label__objective __label__testing  remove unnecessary help test keystone shell test changeid iaedfbaafcecdedfff closesbug 
__label__refactoring  refixes bug changeid ifcfdcbdbfcfdfe 
__label__objective __label__quality __label__testing  test title originate novaspecs version novaspecs receive improvements worth bring over start write spec test code wouldnt let add additional section require ones heres list key differences new version instead hard cod list require section dynamically discover section read template ensure section template present allow additional section include include code ensure line wrap disable doesnt pass sure spec doesnt it sure spec doesnt trail whitespace changeid ieabbfecefcbaadceef 
__label__objective __label__quality  libvirt allow dynamically update filter parameters inside interface block theinstance xml address nwfilter paramters instance xml perinstance base nwfilter relate bug changeid iecdcffaffaeabaafce 
__label__objective  change include update starlingx docs land page conform new list available document follow starlingx introduction deployment guide installation guide developer resources operation guide project specifications rest api reference release note contribute socalled deadend link explanation content come destination associate exist story id link story reference existence current latest developer guide result toplevel list doc resources include developer guide developer resources bullets ideally developer guide include developer resources area latest be however current leave release there organization settle release launch finally focus write aspect pr clean go forward changeid ieddaaddebbddecaf signedoffby scott rifenbark srifenbark gmail com 
__label__objective __label__quality __label__testing  testcreatenetwork identity clients test result initialize identity client test function reduce redundant code patch split testcreatenetwork testcreatenetworkidentityv initialize identity client them changeid ifefbebefeddcbc implement blueprint oscnetworkunittestrefactor 
__label__objective  bug alarmthresholdrule py timestamp key define miss comma timestamp start start timestamp end end timestamp validation timestamp field not unclear current implementation new parameter timestamp be valid add validation function show timestamp allow use validate query fix bug cherry pick commit befcefcdaebbeed changeid iaaeffafebbdfaefaaaeab 
__label__objective  order handle reauthentication request time let tenancity trigger it change create session helper class wrap get patch push put action use image uploader perform single reautentication action registry previously let reauthentication occur tenancity retry function function perform muiltple request exceed ttl authentication tokens lead failures prevent reauth time request retry entire action changeid ifcfabbabfcbcacc relatedbug 
__label__objective __label__quality  add variable number arguments capability clean unused code allow variable number arguments help different vendors implement version license need additional information pass verify license function software version story task changeid icfbeaaeddcabbcdc signedoffby carmen rata carmen rata windriver com 
__label__objective __label__quality __label__testing  method utils create model from data avoid duplications code changeid ibbdddccdda 
__label__objective __label__quality __label__testing  add fixtures test controllers changeid iebcfebedceacdcac 
__label__objective __label__quality __label__testing  script keystone keystoneadmin keystoneauth copy initialization code handle options arguments start paste apps code duplicate test setup code code consolidate class create keystone server class start stop methods manage keystone servers handle initialize options arguments provide point entry keystone start refactoring log backend code changeid ieeaaaeccddbca 
__label__quality  move invocation update ansible action common utils function avoid repetition changeid idbeafafedfecabda 
__label__objective __label__quality  rare case process create puppet return wait child process finish lead issue pacemaker provider start work shadow xml copy create fix refactors provider start child process function instead fork exec pair test show issue go away leave function untouched changeid icdfeacbedddcceb closesbug 
__label__integration __label__objective __label__testing  refactor image api tenant permisions test test fixtures refactoring refactored test account change fixtures behaviors config image model non admin users implementation test add new test step improve implementation add admin user access data behavior image client fixtures distinguish privilege normal user alternate user both non admin admin user changeid iebbffebdabedbecd 
__label__objective __label__quality  cinder api methods accept volume id instead volume object remove redundant roundtrip volume pass methods fact need id fix bug changeid iefccbfeceefccedf 
__label__refactoring  add support update segment host bind agent topology trival refactor topology agent network ovn use function update segment host bind changeid ifeaabdfecbddcaa 
__label__integration __label__objective __label__testing  use iscsiinitiatorutilsconfig package package config service file iscsiinitiatorutils package deployment test ping test wms pass config service file check pass story task changeid ifccafbededa signedoffby zhipengl zhipengs liu intel com 
__label__objective __label__quality __label__testing  update linux net patch introduce new function get phys port name read physical port sriov port refactors get representor port use new function decrease call get pf func addition update unit test linux net remove need mock changeid ifdbeafcbebfdadaeccafba 
__label__objective  revert commit bbbbbffefcafed patch revert break api compatibility fix issue create patch revert changeid icedcabefdeddfa closesbug 
__label__objective __label__quality __label__testing  patch refactors rally plugin senlin plugin basic cluster profile operations merge rally repo remove duplicate util function test scenarios senlin repo relate test job change accordingly changeid icacacacbdcadbdacdfaba 
__label__testing  changeid iaeeeecadcadeaff 
__label__objective __label__quality  split extract driver info tiny methods reduce complexity complex new drivers add later changeid ibfdfdddded 
__label__refactoring  changeid iaeaaeedbbeeace 
__label__integration __label__objective  fake ldap api emulate pythonldap api possible ldap test invalid pythonldap api accept utf encode string however fake ldap api accept python type properly handle type conversion ldap api exercise fake ldap api test currently type conversion inside ldapwrapper call pythonldap api mean unicode issue appear test live ldap server ldapwrapper fakeldap logically different providers api behave identically ldap api run time configurable option need mechanism substitute ldap api wrap call api type conversions type conversion wrap replace python type keystone type need ldap api call ldap api type convert result ldap keystone patch establish ldap api interface ldaphandler modify fake ldap support it replace ldapwrapper interface invoke pythonldap add ldaphandler instance common location type conversions prior call configure ldap interface ldaphandler class definition detail patch exclusively refactoring patch anticipate subsequent patch properly handle unicode value significant change functionality patch refactoring cleanly seperate api boundaries test exercise unicode disable patch work patch add correct unicode handle idea separate refactoring need support unicode actual unicode change review easier changeid idbabfabd 
__label__objective __label__refactoring  preperation switch project time pull translations zanata refactor call tx pull common function changeid ifbdcfbdbaeabbce 
__label__integration __label__objective  allow policy file exist policy rule register code desire run project policy file oslo policy assume policy file exist raise error find fix change enforcer logic simple enforcer extendend improve add flag relate file move filerulescache class easy read code debug refactoring shouldnt break project enforcer api change changeid iaddbfaafbeccbefa closesbug 
__label__quality  changeid iedeeeaeccfebdeeebb 
__label__objective __label__quality __label__testing  retry decorator change require specify exception class exceptions wont catch retry decorator add devopsexception class remove retry minor libvirt driver methods remove redundant retry sshclient connect sftp add unit test retry decorator changeid iaaccccbcedebcbbc 
__label__objective __label__quality  refactor template rend code static function ensure templates entry point render execute global templates changeid idddddeabbaccaaaacdbdcbc 
__label__objective __label__quality __label__testing  refactors shell unittest helpers base class unit test class subclass extend correct problems host shell parameters didnt previous work wrong longer belong changeid ibdadcbffcedba 
__label__objective __label__testing  remove core plugin logic test dsvm gate fail commit efbbbbfb changeid idfecfcdaeababbaa 
__label__quality  remove duplicate code commit refactors networkdevicebyid method use format variables function resources utils changeid ibfbfddafacbcfdebb 
__label__quality __label__testing  make allocations object method schedulerreportingclient simple modulelevel function call instance to allocations dict make function match return result indicate function actually do changeid idafefbbaaab 
__label__objective __label__quality  prepare new sign backend implementations reuse exist functionality abstract current sign function signature generation replace changeid iafbcbfffafebc 
__label__objective __label__quality  patchset resolve minor nits include proper translation couple string exceptions order addcleanup test keystoneclient simple whitespace change line readable add bug reference comment change response comment deletion business logic refactor move business logic controllers api managers changeid iaafbbeaeedebdd bp assignmentcontrollerfirstclass 
__label__integration __label__objective  live migration passthrough disk attach instance need create plan vm set right disk paths accord destination host volumes accessible instance migrate moment retrieve disk paths remotely wmi fact wmi api methods break fc implementation use hbaapi dll function directly ctypes cant work remotely patch slightly change live migration workflow plan vm create prelivemigration step destination host update virtual disk resources changeid ibdcfabbbefbcfded partiallyimplements blueprint hypervfibrechannel 
__label__integration __label__objective  lot fernet token create validate logic end token provider methods theres apispecific it move its available use token provider code utilize subset available functionality no domain scoped tokens etc result change implementation detail fernet tokens end token formatters module changeid ifefbfdfcbeccdca 
__label__quality __label__refactoring  format trust expire at distinct place achieve result format expire at its function let function it necessary changeid icfdbcffddaabffbcda 
__label__quality  refactor cod reduce complexity refactor cod network calculation reduce complexity changeid iaebffabebcbecea 
__label__integration __label__objective  break image members controllers registry api restructure like glance api preparation future split changeid ieccfadebbbfdecd 
__label__objective __label__refactoring  remove specincludetischanges patch change set ldap conf runtime sudo conf schema openldap sudoersldif sudoconfig test build pass deploy multinode check sudo schema sudoersldif buildpkg edit sudo add stub function sudoers policy deserialize info plugins sudoers policy check variable path ldap conf value set configure option withldapconffile sysconfdir openldap ldap conf story task changeid iaebebacacfcfefdedf signedoffby martin chen haochuan chen intel com 
__label__objective __label__quality  volume util py originally intend general repository operations volumes fact arbitrary collection iscsi function exclusively call vmwarevolumeops vmwarevolumeops private data arguments change move function volume util py vmwarevolumeops volumeops py make simpler read understand code single place look iscsi function move storageerror volumeops py place use arguments update use private data directly have pass in addition function name update accurately reflect actual purpose functional change code change purely mechanical changeid ifbcedfdcaddc 
__label__refactoring  followup commit ecadfacecbaadcbd changeid iafccdbccfcfbbee 
__label__quality __label__testing  refactor provide module level function find sharding shrink candidates callers add unit test changeid iadaefbaaafaeeece 
__label__refactoring  make allocations object method schedulerreportingclient simple modulelevel function call instance to allocations dict make function match return result indicate function actually do changeid idafefbbaaab cherry pick commit acfcddadccfbfdbcbb 
__label__integration __label__objective __label__quality  initial patch aim decouple core plugin service dhcp metadata service abstraction introduce need code support model dhcp metadata service provide external rpc agents solely serverside plugin support blueprint nvpdhcpmetadataservices changeid ieebbcbdeedaebfecce 
__label__objective __label__quality  refactor way create client openstack service protect service include respect public config items common config list example auth insecure common config py service client opt need write cod clients file delete cod reregisters config options parameter conf conf cfg conf generally swift use individual config swift register opt config instance sure conf register opt need invoke create method protection utils py protection clients utils py file file clients besides add new way endpoint service utils py get url add new way create clients session solve bug token expire protect work create client use time worry token expire changeid iedfcffdafdfadedafddedde implement blueprint refactorclients partialbug 
__label__objective __label__quality __label__testing  ironic get job test different deployment scenarios support time add new optional feature add new conditional exist macro enable job add new variable job template use macro get unmanageable messy patch refactors configurations weve control conditionals builders pull jobtemplate require write optional script part file ironicextravars source main ironic macro patch take ironic job largely same refactors single template use jenkins job builder matrixing generate job instead explicitly define one changeid iefbddcfadbfee 
__label__objective __label__quality  function copy tuskarui diverge place attempt consolidate function eliminate code duplication modifications horizon utility view meter function possible delete duplicate code tuskarui changeid iebaeddbbfccfecffcbd 
__label__objective __label__testing  test test functionality mean to particular concern verify pass failures correctly calculate instead change order project fail modify concern calculate project data changeid icfebbbefedcffefadccb coauthoredby caio carrara ccarrara thoughtworks com 
__label__integration __label__objective  changeid iedeebebcadbff change name base volumes api model changeid iadefeeeeecadecab 
__label__objective __label__quality __label__testing  use distutils version looseversion cloudinit version check fix bug set follow modes var log heatprovision log var lib heat var lib cloud data cfnuserdata be test coverage name main file size go bytes necessary reduce size future short name work launch template regressions test write fix changeid ieaeceedbbcee 
__label__objective __label__testing  assign configure fake connections test class dynamically generalize event queue handle test pass upstream root fake gerrit explicitly dont pass fake gerrit fakeurlopener changeid icbedbbcbaafadfcc 
__label__objective __label__quality __label__testing  rationale patchset aim far easier add new test future include support run test parallel test runner support feature major additions include auth test suite facilitate new testhttpclient automatic teardown automatic setup perfect cleanup context managers message claim queue restructure queuetests queuecreate queuemeta queuelist update queue test handle metadata endpoint new dependency add yurl see pypy yurl simplify location parse message remove print statements exceptionhandling minor fix import configparser handle pyk friendly way changeid iceeebdeaeaaaade 
__label__integration __label__objective  refactor extract method to driver registry relate blueprint xenapivolumedrivers extract method create driver registries reuse xenapi similar purpose changeid ifddacadfeacabfffddfdb 
__label__objective __label__quality __label__testing  situation weve line code file contain different test case reasonably divide smaller file patch include test case connect migration retype volume operations test case changeid ibbbebbfeefbdaadaca 
__label__objective __label__quality __label__testing  slight refactoring tester run method slight refactoring test case utils tester run method remove code duplicate add extra assertion the method central rally carefully test blueprint testengine changeid ibcefbdddcffddeaac 
__label__objective __label__quality __label__testing  test refactored inheritance model share test code possible process test class name normalize changeid idecebfdfadebbddaf partiallyimplements blueprint apiv 
__label__objective __label__quality __label__testing  refactor barbican key manager test case different auth type inherit common base class changeid iafacbbcaaeadf 
__label__integration __label__quality  refresh streamline readme remove scenario involve separation cinder components locate charm cinderapi cindervolume add cinderceph charm ceph scenario unsure relation involve cinder imageservice glance imageservice add bug section changeid iafabfef 
__label__integration __label__objective __label__quality  patch make manila snapshot api readable maintainable changeid ifbfbbccabedcecce 
__label__objective __label__testing  patch set handle additional exception agent ovsdb connection py patch set contain minor fix unit test case prevent print warn errors output run unit test case also include additional test case improve coverage respect changeid ibdafedcddfad 
__label__objective __label__quality  rfc wip patch set refactors fix use keystoneauth load session cfg conf remove unnecessary wrap utility function class remove hand selection field but field form keystoneauth object lastly need read envvar handle cli account cli framework server utility function method invoke documentation handler code base changeid ibfbbbefeccffdee signedoffby tin lam tin irrational io 
__label__integration __label__quality __label__refactoring  refactor db model access function get collection get collection query function bite messy name conventions extensibility wise patch refactors function purpose reduce codeduplications improve extensibility changeid iffbebdade closesbug 
__label__objective __label__quality __label__testing  simplify setup code base class swiftfanctionaltestcase expeced common procedures add init py changeid idbddeadacccbedbffc 
__label__quality  clean code refactor snippets create log link launch ovsdbserver process function changeid idfbcececddefbeabbda signedoffby ryan moats rmoats us ibm com 
__label__integration __label__objective  use setupconfig package package config file setup package merge passwd group uidgid patch patch deployment test ping test wms pass config service file check pass story task changeid idacbbedefdbabf signedoffby zhipengl zhipengs liu intel com 
__label__refactoring __label__testing  patch refactors previous object method scheduler report client compute node inventory modulelevel function call compute node to inventory dict spurious toplevel inventory key remove return dict payload rp uuid inventory construct explicitly now refactors unit test report client handle inventory remove unnecessary mock correct improper stub value mask mock changeid iebebfefaeacec cherry pick commit edcbdabedbfabdddcafca 
__label__objective __label__quality __label__testing  test test create share with size bigger than quota verify fail try create share exceed gigabytes quota test create isolate creds redundant contain creation tenant user network subnet router exist approach take second test test create share with size bigger than quota use common client perform action quotas share creation request new approach take second changeid iabbfaeeaafec 
__label__integration __label__objective __label__quality __label__testing  test pv file reference write new api unit test refactored use mixin class unit test utilize allow api configurations permutations easily testable changeid ifcccebaceeafaecdb story task signedoffby al bailey al bailey windriver com 
__label__integration __label__objective  problem methods xjobapi share common functionality simplify it solution problem refactoring methods possible feature need implement tricircle realize solution trivialfix changeid iaedadbfccdae 
__label__quality  deduplicates code common waiters module baremetalscenariotest function changeid iacccdefbacaffeefedfe 
__label__integration __label__objective  update change cell instead user data project column table update remove project unnecessary api call ref openstack dashboard api keystone py cell name new cell value none avoid set email string ref changeid ibffaeefabbdeacbb 
__label__integration __label__objective  rename table portstats listener mean neutron listener portstatus api consistent apis add timestamp listener table changeid ifedcdadffbeeafffe 
__label__objective  add comment extract fix egress rule addition separate function partially implement blueprint refactoriptablesfirewalldriver changeid ifbbffefdddaeedeaae 
__label__objective __label__quality __label__testing  script update test swift cherrypick commit openstacks gerrit git repo add conditionally logic repo swift to build swift test env include puppetmaster add test mode puppet swift run basic swift smoke test add code run gerrit cherrypick command test patch gerrit review changeid ifdfccbbffdddeabfca 
__label__objective __label__quality __label__testing  change queue logic model little cleaner easier follow happen build complete run launch job queue collapse addchange base manager make read logic add change simpler hook provide dependent manager subclass extend method dependent change onbuildcompleted report methods base class simplify code path build complete generalize model update apply change receive search change ready report search job need launch also test check queue functionality assert queue end test format methods pipeline queue class add queueonly mode notification status screen changeid iacafebdacbcfaffac reviewedon reviewedby clark boylan clark boylan gmail com approve jam blair corvus inaugust com testedby jenkins 
__label__integration __label__objective __label__quality  refactor manila quota set api patch refactors manila quota set api readable maintainable changeid iababdcebabdffae 
__label__integration  partialimplements blueprint nicirapluginrenaming changeid idbcfbefeccb 
__label__objective __label__quality  wip present interfaces service data manipulate admin interface novamanage extensions contrib service py etc interface rely servicegroup layer api be up detail service liven proposal service data nova database nova service table fetch liven information configure servicegroup sg driver liven combination service liven rpc liven later compute base information nova service changeid idaaabbddaddefb implement blueprint servicegroupapicontrolplane 
__label__objective __label__testing  patch prepare port float ips share test case changeid ibaadebdfecedbcfcaeb 
__label__integration __label__objective  new snapshot module code vss lvm backup py create snapshot remove snapshot module contain code relate shadow vss new snapshots new openstack module code osclient restore backup backupos module contain code relate cinder nova backups new utils module code utils win utils bandwidth config exec cmd validator stream module containd code relate extract module new test modules snapshot utils openstack apiclient test scheduler daemon locate scheduler module backup py delete code place openstack backup backupos job backupjob changeid ibbacbcfbdcfdd 
__label__objective __label__quality  convert relevant function use helpers insert function instead specific import add commas entries map tuples changeid idcafaefcfbddfeaefdb 
__label__quality  devref refactor attach detach devref refactor attach detach devref readable changeid ifbeecdadfeead 
__label__integration __label__objective  effort consistent encode parameters request script generate electoral roll event invite list centralize call request module add benefit encapsulate retry logic potential reuse later additions script generalize query gerrit function flexibly handle gerrit rest api return neuter json gerrit gitweb query retrieve yaml special character encode challenge extract json decoder error handle reuse apis gerrits future feature additions changeid ibdadcebebecddcf 
__label__integration __label__objective __label__quality  refactor ironicinstall role centos add new template systemd configuration install run ironic service document additional step rhel centos users need bifrost run install gcc envsetup sh need install pip cant grant temporarily remove amttool redhat family dependencies its currently package rhel centos well handle separate patch change libxsltdev libxsltdev correct package changeid iabdcabadcbc 
__label__objective __label__quality  refactor root ssh config add admin network list host net ssh config root user use key auth regardless hostname enable deployment host ip address outside rfc range host network include admin network express wildcard add new function ipcalc network wildcard changeid ifebefcceffb closesbug coauthoredby dmitry ilyin dilyin mirantis com 
__label__integration __label__quality  handle description api duplicate handle create handle update methods patch define new method handle differences parameter name avoid duplication keep change restrict method extent possible changeid iaeeafedcbbeeabafeed 
__label__objective __label__quality __label__testing  use exist test ifrastructure better integrate rest neutron test change allow test ipam module work future db engine facade change changeid icccefddcfcefafbca relatedbug 
__label__objective __label__quality  patch move test revoke by audit chain id refactors test revocation backend instead spoof backend match changeid ibfaaddaccdcaabbe 
__label__refactoring  common cod function changeid idbbcaacebadfdec cherry pick commit dcadaceeefceeeddcab cherry pick commit efbdeddbbf cherry pick commit daddbedfffceabaada 
__label__objective __label__quality __label__testing  wip remove dependence glance glance registry changeid ibbbdaedfcbc 
__label__integration __label__objective __label__testing  moment test manila test api test share metadata module mock db request lead failures main code use dbspecific things so refactor test module use test db unblock usage dbspecific things changeid iaeebdfdfaddcfcf partialbug cherry pick commit efefcbfbfbbcaefecce 
__label__testing  add miss test case changeid ibceceafffdefedbac 
__label__objective __label__quality __label__testing  use fixtures instead selfinvented decorator proper name mock swift inline mock decorators split testprocess test case remove old style set side effect via iter changeid ifbabeadbcbddaef 
__label__integration __label__objective __label__quality  follow methods similar api call retrievepropertiesex consolidate avoid code repetition get object properties retrievepropertiesex get object retrievepropertiesex get properties for collection of object retrievepropertiesex refactored follow patch get object properties get object get properties for collection of object retrievepropertiesex closesbug changeid ifcfcfcbbcfbf 
__label__objective __label__quality  static path code refactored improve readability subsequent patch add support baremetal vnic type changeid iacdbfaecabceffb cherry pick commit dcbbefedabaedfadbaa 
__label__quality  refactor resource update funtation reduce complexity changeid iebcabdaadfdca 
__label__objective __label__quality __label__testing  utils create model from data method create model from data avoid duplications code changeid ifcdedfdabfdeae 
__label__objective __label__quality __label__testing  commit create paths test unit functional begin ensure proper unit test coverage want use conventions possible test properly separate conventional locations changeid iaacbaedcdbfbb 
__label__integration  order consistent rest api minor change need make have dashboard home endpoint changeid ifeebadadcecaaada 
__label__objective __label__testing  wip remain todos refactor test case rebase ongoing refactoring patch add assert request parameters changeid ifdbacebdeffcdfaeed 
__label__objective __label__quality __label__testing  its silly import package submodule directly case introduce module developer track of gain access solitary function patch hoist marconi test util helpers expect marocni test util reference naturally test author accordingly hack rst guide update allow sort thing with discretion implement blueprint grizzlydebt changeid iadefaadbecceaeb 
__label__objective __label__quality  refactors grenade code remove copy paste functionscommon devstack instead use function target devstack order accomplish need refactor devstack tree pull pull base target devstack tree extremely early need include small number function mostly relate git grenade able bootstrap tree inc bootstrap tree slightly unrelated function move inc upgrade consolidate upgrade function scatter codebase clarity inc contract library interfaces grenade mirror devstack grenaderc split variables set devstack function variables compute later later variables move project specific directories base plugin plan changeid iadafedcfbabedccda 
__label__quality  common code subunit upload code also make function class method depend internal state handler class abstract out changeid icdbeccbdedfdfafcadcf 
__label__integration __label__testing  test commit changeid ibfcaadefebdb 
__label__objective __label__testing  test kubernetes api need bay create magnum functional test create bay patch refactors code seperate methods operation place changeid idbcdccabbfeaeefc partialbug 
__label__objective __label__quality __label__refactoring  wip easier update resource api easier resources api prs rule security group verification framework fix bug changeid ifecaefecccbab 
__label__integration  changeid icdeafdbcbfceababc 
__label__objective __label__quality __label__testing  preparation newer development time eliminate redundancy file test cisco nexus py split content file test cisco nexus base py contain share information test cisco nexus events py contain test incoming events test cisco nexus replay py contain test focus replay activity changeid idadacbbeffadba closesbug 
__label__objective __label__testing  refactor locale test unicode issue issue use nonenglish locale include non usascii char case append unicode argument string fail error patch refactors exist test cover different case english nonenglish locales test currently fail master unicodedecodeerror fix gettext decode closesbug changeid iabacedfcfabfdec 
__label__objective __label__quality __label__testing  older unit test netapp driver code obsolete add new unit test time test mox place so rewrite unit test mox unit test right place test code tree add unit test improve code coverage changeid icbfbdebaff closesbug 
__label__objective __label__quality  patch perform small refactor metadata port creation code wait metadata service provision network port transition up also metadata disable error log try retrieve fetch metadata port instead check metadata enable point code function return service disable changeid icddbcffdbffecbbedc signedoffby daniel alvarez dalvarez redhat com cherry pick commit efacdebaaefcedcfcf 
__label__objective  nova virt image py define single function call qemuimg info robust manner avoid locale issue etc nova virt libvirt utils py define secondary function parse items return image qemu img info nova virt libvirt driver py use libvirt utils function nova virt disk api py likewise nova test test libvirt py remove longer need stub utils execute qemuimg info adjust restrictive qemuimg info format robust call signature changeid iddcfebdabfefba 
__label__objective __label__quality __label__testing  testdeletenetwork inherit testnetwork class architecture test class changeid iddbafdefcfcf implement blueprint oscnetworkunittestrefactor 
__label__objective __label__quality __label__testing  testfetchrevocationlist inherit test uuid token provider token providers dont support revocation list dont test it effort break smaller reviewable piece coauthoredby raildo mascena raildo lsd ufcg edu br coauthoredby adam young ayound redhat com changeid ibeccdcccfcdddcbbd partialbug 
__label__objective __label__quality __label__testing  remove obsolete keepalived pid file start combination commit commit message be keepalived refuse start claim daemon start process pid vrrp main process pid file happen case new process keepalived situation happen neutron node reset obsolete pid file clean neutron start commit add pid file cleanup keepalived start closesbug changeid ibbffefefceabbdebfa cherry pick commit efabbbbcabaeac nd commit fix test message be extract test fixture create new process leave run give time helpers fixtures functional test live keep fixtures place increase visibility fixture reuse test time fixture fix original code omit start process commit adjust kilos version fixtures modify setup method changeid iaebddefdefaeaccceb relatedbug cherry pick commit eedafbbbbfdfceff 
__label__objective __label__quality __label__testing  continue modularity movement main file pythonjenkins get big change refactors test configs seperate module changeid iaddbbfcbdfec 
__label__objective __label__testing  teardown logic update collect test items delete them closesbug changeid iadddbcbcecbfcddb 
__label__objective  patch replace type operations sensors attribute assembly component instead common type uri common type link operation sensor api resources consider resources attribute update operations uri operation link match attribute note wiki page update match new attribute name changeid icafbdfddccecafcbae 
__label__integration  changeid ibddfbecdfeeeca signedoffby dima kuznetsov dima kuznetsov toganetworks com 
__label__objective __label__quality  container driver code need refactor facilitate development new functionality patch improve error handle dont swallow exception method modularization common code private methods methods appropriate class methods live class encapsulate responsibility protocol helper access container obtain ip address invoke method container helper dont use share id everywhere code currently use instance id derive share export location make easier support instance id manage unmanage future implementations changeid ibacbacfebffaddde 
__label__quality __label__refactoring  config refactoring process prepare root level command future change optimize function signatures logic changeid iaceccaacfcaaad signedoffby ruslan aliev raliev mirantis com relatesto 
__label__objective __label__quality __label__testing  code style change test remove unused function optimize function remove dub code partially implement blueprint heatostftestrefactoring changeid iceadfbaaaadfaecebb 
__label__objective __label__quality __label__testing  situation weve line code file contain different test case reasonably divide smaller file patch include different test case connect volumes file volume directory changeid ibeadbcbfdecbbbbe 
__label__objective __label__quality  refactor api error handle ensure error message translate wsme error message doesnt need convert unicode wsme handle us relate bug changeid iecfcdafefdccb 
__label__refactoring  single invocation function leave utils general remove unused find by id direct py changeid idbbbcfeffcadca 
__label__objective __label__refactoring  changeid iefcbceacadb 
__label__integration __label__objective  exit refstack excetions transform valid httperror descriptive message closesbug changeid idaadaaedecfbcfdec 
__label__integration __label__objective __label__testing  need enable run test need specify dbmanager explicitly provide test use relate blueprint sqlunittestsonrealbackend changeid icfffbaddeccecbebf 
__label__integration __label__objective __label__quality  ironic get job test different deployment scenarios support time add new optional feature add new conditional exist macro enable job add new variable job template use macro get unmanageable messy patch refactors configurations weve control conditionals builders pull jobtemplate require write optional script part file ironicextravars source main ironic macro changeid icebabaecfadfdcee 
__label__objective __label__quality  patchset move role task main yaml file use conditional variable determine task play playbook call reduce number file readability changeid iadfdcaeaacaefeca 
__label__quality __label__testing  general clean removal duplicate code class variables add helper function changeid ibeeecfbdbfeecddaba 
__label__quality __label__testing  patch propose remove dependency paunch unit test refactor unittests focus function itself changeid ibabbebfebafaccdb task 
__label__objective __label__quality  patch set replace raise notadirectoryerror try parse repository root path normalize repo path pegleg engine util git better exception exceptions gitinvalidrepoexception better folder repo raise exception isnt apropos next patch set change exception raise normalize repo path itself appropriate function place intrinsic error handle avoid have wrap time changeid idcfebcdbacafbe 
__label__objective __label__quality  conditional logic create char devices spread methods make confuse understand condition char devices create guest virtlogd feature append sub element log first char device follow change refactoring conditionals future change easier understand change inlines method create serial console devices change unit test accordingly refactoring step make later easier understand functional change introduce condition blueprint libvirtvirtlogd changeid icaeffcfaffef 
__label__objective __label__quality  later oslo message patch stack watch functionality call separate place the endpoint class service class order result needle code duplication break separate class object pass around changeid iffaedacefcbddc blueprint oslomessaging 
__label__objective __label__quality  current implementation decorator allow all content type slightly confuse iterate mimetypes setdefault time object separate iteration set default value clear also iteration turn generator pythonic approach performance changeid iecbaebcaafafdbef 
__label__objective __label__quality  patch modify plugin code reusable manner add new file devstack glusterfunctions sh contain gluster specific function changeid ibedfeaebeaebe 
__label__integration __label__quality  reduce couple processmanager stop replicate api behavior processmanager introduce abstract monitoredprocess class reduce couple allow kinds external process monitor too partially implement blueprint agentchildprocessesstatus coauthoredby mike kolesnik mkolesni redhat com changeid idafccecbcfd 
__label__integration __label__objective __label__testing  order pass workload test cant skip networker roles upgrade controlplane once ceph osd case update ceph mon cause outage changeid iaffacacfbccedcebfb cherry pick commit dcdbbbfecad 
__label__objective __label__testing  test swap volume volume api usage method test compute mgr py test case normal errors devide follow test case test swap volume volume api usage test swap volume with compute driver exception test swap volume with initialize connection exception changeid icaababc 
__label__quality __label__refactoring  patch minor refactoring setup instance group method filter scheduler majority method inside conditional primarily reverse reduce nest depth use functional change patch changeid iabdacdcffdcafd relatedbug 
__label__quality __label__testing  patchset dry implementation auxiliary function mongodb unit test changeid ieabfcdddbdafececcc closesbug 
__label__objective __label__testing  implementations hash content file cli recon py common middleware recon py patch relocate implementation hash for ringfile introduce relate change common utils py refactors recon cli middleware use function improve use mock unit test eliminate pass custom file opener function reconmiddleware get ring md get swift conf md methods relatedchange ibeabcaaebfababefbd changeid iaadeaadebfaafaefecea 
__label__objective __label__quality  main change fetch relation data once iterate python dictionary speed process potentially hundreds host authorize key changeid ifceaefaeebbefe relatedbug 
__label__integration __label__objective __label__quality __label__testing  structure refactor vmwareapi spawn method improve maintainability vmware driver goal break spawn method reusable components phase break api step spawn smaller test components phase rewrite spawn use smaller components relate blueprint vmwarespawnrefactor changeid iadeebbfabaccd 
__label__objective __label__testing  improve test case methods add assertions uniform methods test changeid icbddebcadcecfeba 
__label__objective __label__testing  use testnetwork testsetnetwork setup test command setup changeid iefcfbbdfaafbee relatedto blueprint neutronclient 
__label__integration __label__objective __label__quality __label__testing  big change necessary one move database connection stuff test purpose ceilometer storage impl backend redeclaring stuff inside test db module mean code possibility run api test database backends free changeid ieaeadedecdcfdd signedoffby julien danjou julien danjou info 
__label__quality  shuffle function reduce size be bootloader load move logic new function changeid icbfdcebbfdbfacffb cherry pick commit dabcecdddcefbeb cherry pick commit dfebfdbbccfbd 
__label__objective __label__quality __label__testing  refactor image download refactor test nova virt image py reuse code xenapi driver relate blueprint xenapisupportedimageimportexport changeid iefdabcdfabaffac 
__label__objective __label__quality  separate assignment expansion relate code function order improve readability functionality change whatsoever changeid idcfbaeddbf 
__label__objective __label__quality __label__testing  review allow periodic task enable disable decorator specify interval negative space run periodic task specify second zero mean default space currently second remove periodic interval flag service interval run dynamic base number second periodic task want wait run callers want twiddle sleep period for example unit test create argument periodic interval max let period periodic task specify override expose flag use case that need unit test however docimpact resolve bug changeid ifabdacbacfebf 
__label__objective __label__quality __label__testing  logger global create methods set parser jjb configuration changeid iadeeaafbfbdd 
__label__refactoring __label__testing  pecan controller refactor extend functional test patch refactors pecan controllers streamline code split separate python modules als improve functional test controllers note functional test pecan hook patch changeid idcddfdbccadcacfebbccfc 
__label__objective __label__quality  split docs follow part support feature installation todo run service container todo run fullstack test release note run nestedcontainer todo configuration todo generate documentation todo changeid ifcceeebfebcbbecae 
__label__integration __label__objective __label__testing  reflect code test better need patch review queue ifbdfefbeddd pass test case changeid idcacebdecedbfedff 
__label__objective __label__testing  changeid iacfafadaecbcaebd dependson ifadefdabeacbee partialbug 
__label__integration __label__objective  add methods retrieve context key check data function presence delete data function recursion eliminate collect function move base class use inheritors get function api bug multicontext fix unit test add changeid ibeadcdfdeeacea 
__label__objective __label__quality __label__testing  maintenance add handler fsm load inventory recover host state process restart active controllers uptime minutes restart event treat dead office recovery dor forgive host recovery schedule start host service background operation hold add operation current implementation background handle start host service handle aio subfunction case properly dor mode difficult follow therfore fix maintain miss handle lead maintenance incorrectly fail node subfunction configuration error dor case update refactors background handle start host service fix issue improve clearity maintainability test case pass verify aio dx dor handle pass verify aio dx active controller reboot handle standby uptime min min pass verify aio dx standby controller reboot handle pass verify subfunction configuration error handle regression pass verify start host service wait retry handle pass verify start host service failure handle pass verify dor standard pass verify dor aio plus pass verify aio install pass verify standard install pass verify aio plus install changeid iaeabbbdcdaeed closesbug signedoffby eric macdonald eric macdonald windriver com 
__label__objective __label__quality  refactor vifportidmixin class handle vifrelated operations extract neutronspecific functionality new subclass neutronvifportidmixin allow network interfaces support neutron use vifportidmixin class provide vif support methods changeid ifccadabcaacbbefccbeae 
__label__integration __label__objective __label__quality __label__testing  refactor test case relate instance oject blueprint unifiedobjectmodel instance represtend instance object db instance dict test case db instance dict change test case use instance object fix include part add new stub method fake fault obj nova test fake instance py help convert dict fault object fault add new stub method fake instance obj nova test fake instance py help convert dict instance object instance sure test case relate fault instance pass fix bug fix bug changeid ieffaceeadbacc 
__label__objective __label__testing  class lhostroutesgatewaymixin instance refactored common module scenario test use future ssh connectivity test origin destination instance add lhostroutesgatewaytest changeid iccfcbfdfbeabbd 
__label__integration __label__objective __label__quality  patch achieve interrelate change update clientinterface make efficient consistent http libraries psrfig message add separate class lump one guzzle functionality move namespace refactoring guzzleclient guzzleadapter include relevant change need interface change adapters bridge interfaces guzzle make difference clearer extensible tightly couple brittle move bad request error handle dedicate space base new adapter functionality previously client try exception logic strictly responsibility logic ship base requestexception instantiate children exception base http status code attempt scope patch minimum granular possible interface core internal api file need modify reflect change term change inextricably link interface change tease patch changeid ibcbceccdeeefdbbfcaeae 
__label__objective __label__quality __label__testing  patch move pki pkiz specific test pki specific test class pkiz test class inherit test pki test class uuid test class longer override parent class skip irrelevant test changeid iafbdefeabfbceddacb 
__label__integration  patch resolve todo mark john garbutt refactored xenapi volumeops move dev number var attach volume attach volume to vm method changeid icfeafdbbbbab 
__label__quality  libvirt inpsector attribute call uri connect libvirtd need so local variable well meanwhile initialize connection call method get connection attribute connection hold return value method replace property connection shorten type avoid function call style changeid idcfcfdadccadfc 
__label__testing  test case nova test virt libvirt test driver libvirtconntestcase test test hard reboot test resume test finish migration power on test finish migration power off test finish revert migration after crash test finish revert migration after crash before backup test finish revert migration after crash delete fail partialbug changeid ieeaadbdc 
__label__objective  wip patch refactors status function instead have function output format output format simply parameter new status endpoints add imagelist json requestlist json endpoint nodelist json accept node id parameter filter changeid iabfabefeefabfbbd 
__label__objective __label__quality  move away oslo periodic task action execution reporter case dont code readable also symmetric similar components like action execution checker refactored action execution checker class have instance doesnt sense small style change changeid iacedccbacfecfbdd cherry pick commit eeeabdbedfb 
__label__quality  pull fs walk function find async pendings place process another easier add greenthreadbased concurrency later refactored rate limit use utils ratelimitediterator instead call ratelimit sleep ourselves functionalitys same interface easier changeid ifeecfbacedba 
__label__objective __label__quality __label__testing  add new base class scenario test common parameters initialization setupclass add short description test scenario test structure similar changeid icdecbffafdecaea 
__label__integration __label__objective __label__quality  make sure heartbeats send versions higher require tokens make sure send version dont know make code easier understand changeid iceedeacfdcbebe 
__label__integration __label__objective __label__quality __label__testing  refactor hitachi block storage driver third patch drivers support fc iscsi protocols drivers storage interfaces name horcm snm drivers support kinds drivers code horcmfc snmfc snmiscsi hard maintain present code refactor code drastically submit follow patch refactor base libraries delete exist test driver break exist unit test refactor snmfc drivers base libraries change refactor snmiscsi drivers base libraries change refactor horcmfc drivers base libraries change patch rd one class relationship patch follow upper class hbsdfc class inherit volumedriver class class hbsdcommon hbsdcommon class common methods horcm snm hbsdhorcm hbsdsnm class inherit hbsdcommon hbsdhorcm class characteristic methods horcm interface hbsdsnm class characteristic methods snm interface hbsdhorcmfc class inherit hbsdhorcm hbsdhorcmfc class characteristic interfaces horcm fc hbsdsnmfc hbsdsnmiscsi class inherit hbsdsnm class characteristic interfaces respectively changeid ifcdffacbedd implement blueprint refactoringhbsddriver 
__label__objective __label__testing  add update method crudmanager robust test solum app create method changeid idfecffbdccadfcaddcaeab 
__label__refactoring  refactor ilo deploy get single nic with vif port id ilo deploy get single nic with vif port id deploy utils get single nic with vif port id order share ilo driver irmc driver common function changeid iefacfcdfbebebebaa blueprint irmcvirtualmediadeploydriver 
__label__objective __label__quality  set vf guid sysfs logic method mlnx mlnx change fallback log debug minor reword changeid iffbeadbdddbdecebcf 
__label__integration __label__objective __label__quality  patch refactors ceilometer resource api readable maintainable changeid idabaceefacecbd 
__label__integration __label__objective __label__quality  order speed port collection db call delete extend function qosplugin extend port resource request parent commit port db ovo object network qos policy id make network retrieval unneeded refactor qos policy collect db valid qos policy id exist bind port network reduce number qos object collection zero changeid iadfcdacdcaebccac closesbug cherry pick commit bacebdebf 
__label__refactoring __label__testing  relate blueprint uifunctionaltestswithintern changeid iffeccebffbceeaea cherry pick commit acafbbebbddccabef 
__label__objective __label__testing  patch make test case atomic introduce ml test case changeid ibccefdcbfacfaaab partialbug 
__label__quality  structure return clonemapper simple dict project destination value dict insert destination dest key let enhance clonemapper support functionalities project branch override entry as project tmp workspace foo become project dest tmp workspace foo changeid ibbdeeecaedffcdf 
__label__objective __label__testing  move test separate test case improve test assertions add test cover exceptions db api blueprint dbapitests changeid iafdfdddadcfafdedfbfcc 
__label__objective __label__quality __label__testing  duplicate code test case its difficult figure case test dry test clear changeid iedfcfaddbdfdcace cherry pick commit aecffffbfface 
__label__objective __label__testing  patch make test case atomic introduce ml test case changeid iedaddcbfdcdcfcecdfbbdafa partialbug 
__label__objective __label__quality __label__testing  convert rescue unrescue compute api flow object dot notation access attribute instance object update database instance save compute api update want integrationstyle test test compute py test compute api py test compute mgr py help conversion dont use exotic stub cells api flow integration test work change mainly concern move test rescue unrescue test compute py api manager specific test modules later change build new test blueprint computemanagerobjectsjuno changeid iabcbafecdeaabcf 
__label__objective __label__quality  fix bug changeid iccdcabfdbbd 
__label__integration __label__testing  wip juno many refactor get image properties inner methods step many get image properties distill openstack nova image properties set value vmwareapi drivers use call vsphere soap api introduce datastructure hold distil image information additional test cover method validation check certain properties occur inside inner method get image properties constants relate disk type link clone value move near newly extract get image properties method test refactored account change fake py framework need match new structure vmops py partial blueprint vmwarespawnrefactor changeid idecadcabfeedefdfca 
__label__objective __label__quality  give common access tsm oem function redfish ipmi which https here function come absolutely suggest ipmi use tsm module conoditionally enable ipmi ignore redfish side changeid ieacbfabfedcceecd 
__label__objective __label__testing  help fernet dont support bind authentication fernet provider set fernet default wont run test run kerberos test token providers support it coauthoredby raildo mascena raildo lsd ufcg edu br coauthoredby adam young ayound redhat com changeid iefecddcfebeeff partialbug 
__label__objective __label__quality  currently take clustertype parameter parameter retrieve appropriate function currentcontextclustertype module changeid ifddbfcadadfddacdbefddf 
__label__objective __label__quality  remove unused admin parameter unused remove test longer necessary add option configuration set secondary endpoint type attempt openstack endpoint type exist service catalog desire service primary use case fix cloud configurations keystone return endpoint type service base users privilege level example use case set openstack endpoint type adminurl set secondary endpoint type publicurl adminurl available user publicurl back secondary endpoint type set settings current behavior maintain fix bug changeid ieefbedddecefbadaeabf 
__label__quality  change split mkconf dedicate function file easier maintainance changeid icbbbedafdbbafdcccf 
__label__objective __label__quality  patch perform multiple refactorings conductor manager py rearrange class methods change async helper methods conductormanager class do node deploy do node teardown provision error handler power state error handler do sync power state main class however require return count instead simply update self power state sync count test change require changeid icafabdfaeaacb 
__label__objective __label__quality __label__testing  rewrite server copy object post copy feature middleware simplify method object controller code copy longer verb implement public method proxy application server copy middleware insert leave dlo slo versioned write middlewares proxy server pipeline result dlo slo copy hook longer require slo manifest validate copy copy manifest account reference segment readable account manifest copy succeed previously validation make mean manifest copy unusable segment readable change change functionality exist behavior assert almost change require exist functional test note for operators middleware require autoinserted slo dlo versioned write turn server copy configurable object post as copy longer configurable option proxy server middleware however smooth upgrade config option set proxy server app read docimpact introduce server copy middleware changeid icbceadfcdcccecb coauthoredby alistair coles alistair coles hpe com coauthoredby thiago da silva thiago redhat com 
__label__integration __label__objective  current implementation create floatingip result api call twice pass cause additional attribute populate second call patch convert single call get parameters need continue recursively changeid ieaadfdebcefeb closesbug 
__label__objective __label__quality  block device handle somewhat complex especially take things like md lvm encryption account patch factor creation deletion local loop image device handle python library main propose patch implement need infrastructure base this advance function add example advance partition lvm handle different boot scenarios bios uefi possibility handle multiple image local loop image iscsi physical hard disk handle different filesystems different partition lvs changeid ibbafadcdbdedfeaeaaf signedoffby andreas florath andreas florath net 
__label__objective __label__quality  commit take sqlsubunit method write subunit rewrite use get test run dicts from run id function significantly improve performance sqlsubunit single join query collect information run multiple query serially loop changeid icdccdefecccbdcfaca 
__label__integration  blueprint refactorglancestore changeid idcffbbfccbaec 
__label__testing  follow previous efforts unittestify reboot test compute api make cells test cleaner massively simplify test object relate blueprint computeapiobjects changeid ifcedfacbbf 
__label__integration __label__objective  refactoring patch lay initial groundwork glance api support move glanceclientwrapper associate function configuration new package later contain drivers glance changeid icddaffeceaeedcfafbfd implement bp useglancevapi 
__label__objective __label__testing  test refactoring remove xml support form tacker test unit tacker api changeid iafecfbfcabdcde partialbug 
__label__objective __label__quality __label__testing  regex instance filter determing regex operation use base database connection config lead write test modify connection config different create engine harmless be look add ability different engines base config value lead confusion errors test class intend test behavior test actually do class rename appropriately test belong move test class changeid iffecebfcaffedbfcb 
